{"version":3,"file":"index.js","mappingssources":["../webpack://@mcansh/bun-upgrade-github-action/webpack/runtime/compat","../webpack://@mcansh/bun-upgrade-github-action/external node-commonjs \"crypto\"","../webpack://@mcansh/bun-upgrade-github-action/external node-commonjs \"node:path\"","../webpack://@mcansh/bun-upgrade-github-action/external node-commonjs \"node:child_process\"","../webpack://@mcansh/bun-upgrade-github-action/./dist/index.js"],"sourcesContent":["\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"crypto\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:path\");","const __WEBPACK_NAMESPACE_OBJECT__ = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"node:child_process\");","var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __toESM = (mod, isNodeMode, target) => {\n  target = mod != null ? __create(__getProtoOf(mod)) : {};\n  const to = isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target;\n  for (let key of __getOwnPropNames(mod))\n    if (!__hasOwnProp.call(to, key))\n      __defProp(to, key, {\n        get: () => mod[key],\n        enumerable: true\n      });\n  return to;\n};\nvar __toCommonJS = (from) => {\n  const moduleCache = __toCommonJS.moduleCache ??= new WeakMap;\n  var cached = moduleCache.get(from);\n  if (cached)\n    return cached;\n  var to = __defProp({}, \"__esModule\", { value: true });\n  var desc = { enumerable: false };\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key))\n        __defProp(to, key, {\n          get: () => from[key],\n          enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n  }\n  moduleCache.set(from, to);\n  return to;\n};\nvar __commonJS = (cb, mod) => () => (mod || cb((mod = { exports: {} }).exports, mod), mod.exports);\nvar __require = (id) => {\n  return import.meta.require(id);\n};\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, {\n      get: all[name],\n      enumerable: true,\n      configurable: true,\n      set: (newValue) => all[name] = () => newValue\n    });\n};\nvar __esm = (fn, res) => () => (fn && (res = fn(fn = 0)), res);\n\n// node_modules/@actions/core/lib/utils.js\nvar require_utils = __commonJS((exports) => {\n  var toCommandValue = function(input) {\n    if (input === null || input === undefined) {\n      return \"\";\n    } else if (typeof input === \"string\" || input instanceof String) {\n      return input;\n    }\n    return JSON.stringify(input);\n  };\n  var toCommandProperties = function(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n      return {};\n    }\n    return {\n      title: annotationProperties.title,\n      file: annotationProperties.file,\n      line: annotationProperties.startLine,\n      endLine: annotationProperties.endLine,\n      col: annotationProperties.startColumn,\n      endColumn: annotationProperties.endColumn\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.toCommandProperties = exports.toCommandValue = undefined;\n  exports.toCommandValue = toCommandValue;\n  exports.toCommandProperties = toCommandProperties;\n});\n\n// node_modules/@actions/core/lib/command.js\nvar require_command = __commonJS((exports) => {\n  var issueCommand = function(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n  };\n  var issue = function(name, message = \"\") {\n    issueCommand(name, {}, message);\n  };\n  var escapeData = function(s) {\n    return utils_1.toCommandValue(s).replace(/%/g, \"%25\").replace(/\\r/g, \"%0D\").replace(/\\n/g, \"%0A\");\n  };\n  var escapeProperty = function(s) {\n    return utils_1.toCommandValue(s).replace(/%/g, \"%25\").replace(/\\r/g, \"%0D\").replace(/\\n/g, \"%0A\").replace(/:/g, \"%3A\").replace(/,/g, \"%2C\");\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.issue = exports.issueCommand = undefined;\n  var os = __importStar(__require(\"os\"));\n  var utils_1 = require_utils();\n  exports.issueCommand = issueCommand;\n  exports.issue = issue;\n  var CMD_STRING = \"::\";\n\n  class Command {\n    constructor(command, properties, message) {\n      if (!command) {\n        command = \"missing.command\";\n      }\n      this.command = command;\n      this.properties = properties;\n      this.message = message;\n    }\n    toString() {\n      let cmdStr = CMD_STRING + this.command;\n      if (this.properties && Object.keys(this.properties).length > 0) {\n        cmdStr += \" \";\n        let first = true;\n        for (const key in this.properties) {\n          if (this.properties.hasOwnProperty(key)) {\n            const val = this.properties[key];\n            if (val) {\n              if (first) {\n                first = false;\n              } else {\n                cmdStr += \",\";\n              }\n              cmdStr += `${key}=${escapeProperty(val)}`;\n            }\n          }\n        }\n      }\n      cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n      return cmdStr;\n    }\n  }\n});\n\n// node_modules/uuid/dist/esm-node/rng.js\nimport crypto from \"crypto\";\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\nvar rnds8Pool, poolPtr;\nvar init_rng = __esm(() => {\n  rnds8Pool = new Uint8Array(256);\n  poolPtr = rnds8Pool.length;\n});\n\n// node_modules/uuid/dist/esm-node/regex.js\nvar regex_default;\nvar init_regex = __esm(() => {\n  regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n});\n\n// node_modules/uuid/dist/esm-node/validate.js\nvar validate, validate_default;\nvar init_validate = __esm(() => {\n  init_regex();\n  validate = function(uuid) {\n    return typeof uuid === \"string\" && regex_default.test(uuid);\n  };\n  validate_default = validate;\n});\n\n// node_modules/uuid/dist/esm-node/stringify.js\nvar stringify, byteToHex, stringify_default;\nvar init_stringify = __esm(() => {\n  init_validate();\n  stringify = function(arr, offset = 0) {\n    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n    if (!validate_default(uuid)) {\n      throw TypeError(\"Stringified UUID is invalid\");\n    }\n    return uuid;\n  };\n  byteToHex = [];\n  for (let i = 0;i < 256; ++i) {\n    byteToHex.push((i + 256).toString(16).substr(1));\n  }\n  stringify_default = stringify;\n});\n\n// node_modules/uuid/dist/esm-node/v1.js\nvar v1, _nodeId, _clockseq, _lastMSecs, _lastNSecs, v1_default;\nvar init_v1 = __esm(() => {\n  init_rng();\n  init_stringify();\n  v1 = function(options, buf, offset) {\n    let i = buf && offset || 0;\n    const b = buf || new Array(16);\n    options = options || {};\n    let node = options.node || _nodeId;\n    let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n    if (node == null || clockseq == null) {\n      const seedBytes = options.random || (options.rng || rng)();\n      if (node == null) {\n        node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n      }\n      if (clockseq == null) {\n        clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383;\n      }\n    }\n    let msecs = options.msecs !== undefined ? options.msecs : Date.now();\n    let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n    const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n    if (dt < 0 && options.clockseq === undefined) {\n      clockseq = clockseq + 1 & 16383;\n    }\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n      nsecs = 0;\n    }\n    if (nsecs >= 1e4) {\n      throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n    }\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n    msecs += 12219292800000;\n    const tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n    b[i++] = tl >>> 24 & 255;\n    b[i++] = tl >>> 16 & 255;\n    b[i++] = tl >>> 8 & 255;\n    b[i++] = tl & 255;\n    const tmh = msecs / 4294967296 * 1e4 & 268435455;\n    b[i++] = tmh >>> 8 & 255;\n    b[i++] = tmh & 255;\n    b[i++] = tmh >>> 24 & 15 | 16;\n    b[i++] = tmh >>> 16 & 255;\n    b[i++] = clockseq >>> 8 | 128;\n    b[i++] = clockseq & 255;\n    for (let n = 0;n < 6; ++n) {\n      b[i + n] = node[n];\n    }\n    return buf || stringify_default(b);\n  };\n  _lastMSecs = 0;\n  _lastNSecs = 0;\n  v1_default = v1;\n});\n\n// node_modules/uuid/dist/esm-node/parse.js\nvar parse, parse_default;\nvar init_parse = __esm(() => {\n  init_validate();\n  parse = function(uuid) {\n    if (!validate_default(uuid)) {\n      throw TypeError(\"Invalid UUID\");\n    }\n    let v;\n    const arr = new Uint8Array(16);\n    arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n    arr[1] = v >>> 16 & 255;\n    arr[2] = v >>> 8 & 255;\n    arr[3] = v & 255;\n    arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n    arr[5] = v & 255;\n    arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n    arr[7] = v & 255;\n    arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n    arr[9] = v & 255;\n    arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;\n    arr[11] = v / 4294967296 & 255;\n    arr[12] = v >>> 24 & 255;\n    arr[13] = v >>> 16 & 255;\n    arr[14] = v >>> 8 & 255;\n    arr[15] = v & 255;\n    return arr;\n  };\n  parse_default = parse;\n});\n\n// node_modules/uuid/dist/esm-node/v35.js\nfunction v35_default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === \"string\") {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === \"string\") {\n      namespace = parse_default(namespace);\n    }\n    if (namespace.length !== 16) {\n      throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n    }\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 15 | version;\n    bytes[8] = bytes[8] & 63 | 128;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0;i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return stringify_default(bytes);\n  }\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL2;\n  return generateUUID;\n}\nvar stringToBytes, DNS, URL2;\nvar init_v35 = __esm(() => {\n  init_stringify();\n  init_parse();\n  stringToBytes = function(str) {\n    str = unescape(encodeURIComponent(str));\n    const bytes = [];\n    for (let i = 0;i < str.length; ++i) {\n      bytes.push(str.charCodeAt(i));\n    }\n    return bytes;\n  };\n  DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\n  URL2 = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\n});\n\n// node_modules/uuid/dist/esm-node/md5.js\nimport crypto2 from \"crypto\";\nvar md5, md5_default;\nvar init_md5 = __esm(() => {\n  md5 = function(bytes) {\n    if (Array.isArray(bytes)) {\n      bytes = Buffer.from(bytes);\n    } else if (typeof bytes === \"string\") {\n      bytes = Buffer.from(bytes, \"utf8\");\n    }\n    return crypto2.createHash(\"md5\").update(bytes).digest();\n  };\n  md5_default = md5;\n});\n\n// node_modules/uuid/dist/esm-node/v3.js\nvar v3, v3_default;\nvar init_v3 = __esm(() => {\n  init_v35();\n  init_md5();\n  v3 = v35_default(\"v3\", 48, md5_default);\n  v3_default = v3;\n});\n\n// node_modules/uuid/dist/esm-node/v4.js\nvar v4, v4_default;\nvar init_v4 = __esm(() => {\n  init_rng();\n  init_stringify();\n  v4 = function(options, buf, offset) {\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)();\n    rnds[6] = rnds[6] & 15 | 64;\n    rnds[8] = rnds[8] & 63 | 128;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0;i < 16; ++i) {\n        buf[offset + i] = rnds[i];\n      }\n      return buf;\n    }\n    return stringify_default(rnds);\n  };\n  v4_default = v4;\n});\n\n// node_modules/uuid/dist/esm-node/sha1.js\nimport crypto3 from \"crypto\";\nvar sha1, sha1_default;\nvar init_sha1 = __esm(() => {\n  sha1 = function(bytes) {\n    if (Array.isArray(bytes)) {\n      bytes = Buffer.from(bytes);\n    } else if (typeof bytes === \"string\") {\n      bytes = Buffer.from(bytes, \"utf8\");\n    }\n    return crypto3.createHash(\"sha1\").update(bytes).digest();\n  };\n  sha1_default = sha1;\n});\n\n// node_modules/uuid/dist/esm-node/v5.js\nvar v5, v5_default;\nvar init_v5 = __esm(() => {\n  init_v35();\n  init_sha1();\n  v5 = v35_default(\"v5\", 80, sha1_default);\n  v5_default = v5;\n});\n\n// node_modules/uuid/dist/esm-node/nil.js\nvar nil_default;\nvar init_nil = __esm(() => {\n  nil_default = \"00000000-0000-0000-0000-000000000000\";\n});\n\n// node_modules/uuid/dist/esm-node/version.js\nvar version, version_default;\nvar init_version = __esm(() => {\n  init_validate();\n  version = function(uuid) {\n    if (!validate_default(uuid)) {\n      throw TypeError(\"Invalid UUID\");\n    }\n    return parseInt(uuid.substr(14, 1), 16);\n  };\n  version_default = version;\n});\n\n// node_modules/uuid/dist/esm-node/index.js\nvar exports_esm_node = {};\n__export(exports_esm_node, {\n  version: () => {\n    {\n      return version_default;\n    }\n  },\n  validate: () => {\n    {\n      return validate_default;\n    }\n  },\n  v5: () => {\n    {\n      return v5_default;\n    }\n  },\n  v4: () => {\n    {\n      return v4_default;\n    }\n  },\n  v3: () => {\n    {\n      return v3_default;\n    }\n  },\n  v1: () => {\n    {\n      return v1_default;\n    }\n  },\n  stringify: () => {\n    {\n      return stringify_default;\n    }\n  },\n  parse: () => {\n    {\n      return parse_default;\n    }\n  },\n  NIL: () => {\n    {\n      return nil_default;\n    }\n  }\n});\nvar init_esm_node = __esm(() => {\n});\n\n// node_modules/@actions/core/lib/file-command.js\nvar require_file_command = __commonJS((exports) => {\n  var issueFileCommand = function(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n      throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n      throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n      encoding: \"utf8\"\n    });\n  };\n  var prepareKeyValueMessage = function(key, value) {\n    const delimiter = `ghadelimiter_${uuid_1.v4()}`;\n    const convertedValue = utils_1.toCommandValue(value);\n    if (key.includes(delimiter)) {\n      throw new Error(`Unexpected input: name should not contain the delimiter \"${delimiter}\"`);\n    }\n    if (convertedValue.includes(delimiter)) {\n      throw new Error(`Unexpected input: value should not contain the delimiter \"${delimiter}\"`);\n    }\n    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.prepareKeyValueMessage = exports.issueFileCommand = undefined;\n  var fs = __importStar(__require(\"fs\"));\n  var os = __importStar(__require(\"os\"));\n  var uuid_1 = (init_esm_node(), __toCommonJS(exports_esm_node));\n  var utils_1 = require_utils();\n  exports.issueFileCommand = issueFileCommand;\n  exports.prepareKeyValueMessage = prepareKeyValueMessage;\n});\n\n// node_modules/@actions/http-client/lib/proxy.js\nvar require_proxy = __commonJS((exports) => {\n  var getProxyUrl = function(reqUrl) {\n    const usingSsl = reqUrl.protocol === \"https:\";\n    if (checkBypass(reqUrl)) {\n      return;\n    }\n    const proxyVar = (() => {\n      if (usingSsl) {\n        return process.env[\"https_proxy\"] || process.env[\"HTTPS_PROXY\"];\n      } else {\n        return process.env[\"http_proxy\"] || process.env[\"HTTP_PROXY\"];\n      }\n    })();\n    if (proxyVar) {\n      return new URL(proxyVar);\n    } else {\n      return;\n    }\n  };\n  var checkBypass = function(reqUrl) {\n    if (!reqUrl.hostname) {\n      return false;\n    }\n    const reqHost = reqUrl.hostname;\n    if (isLoopbackAddress(reqHost)) {\n      return true;\n    }\n    const noProxy = process.env[\"no_proxy\"] || process.env[\"NO_PROXY\"] || \"\";\n    if (!noProxy) {\n      return false;\n    }\n    let reqPort;\n    if (reqUrl.port) {\n      reqPort = Number(reqUrl.port);\n    } else if (reqUrl.protocol === \"http:\") {\n      reqPort = 80;\n    } else if (reqUrl.protocol === \"https:\") {\n      reqPort = 443;\n    }\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === \"number\") {\n      upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    for (const upperNoProxyItem of noProxy.split(\",\").map((x) => x.trim().toUpperCase()).filter((x) => x)) {\n      if (upperNoProxyItem === \"*\" || upperReqHosts.some((x) => x === upperNoProxyItem || x.endsWith(`.${upperNoProxyItem}`) || upperNoProxyItem.startsWith(\".\") && x.endsWith(`${upperNoProxyItem}`))) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var isLoopbackAddress = function(host) {\n    const hostLower = host.toLowerCase();\n    return hostLower === \"localhost\" || hostLower.startsWith(\"127.\") || hostLower.startsWith(\"[::1]\") || hostLower.startsWith(\"[0:0:0:0:0:0:0:1]\");\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.checkBypass = exports.getProxyUrl = undefined;\n  exports.getProxyUrl = getProxyUrl;\n  exports.checkBypass = checkBypass;\n});\n\n// node_modules/tunnel/lib/tunnel.js\nvar require_tunnel = __commonJS((exports) => {\n  var httpOverHttp = function(options) {\n    var agent = new TunnelingAgent(options);\n    agent.request = http.request;\n    return agent;\n  };\n  var httpsOverHttp = function(options) {\n    var agent = new TunnelingAgent(options);\n    agent.request = http.request;\n    agent.createSocket = createSecureSocket;\n    agent.defaultPort = 443;\n    return agent;\n  };\n  var httpOverHttps = function(options) {\n    var agent = new TunnelingAgent(options);\n    agent.request = https.request;\n    return agent;\n  };\n  var httpsOverHttps = function(options) {\n    var agent = new TunnelingAgent(options);\n    agent.request = https.request;\n    agent.createSocket = createSecureSocket;\n    agent.defaultPort = 443;\n    return agent;\n  };\n  var TunnelingAgent = function(options) {\n    var self = this;\n    self.options = options || {};\n    self.proxyOptions = self.options.proxy || {};\n    self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n    self.requests = [];\n    self.sockets = [];\n    self.on(\"free\", function onFree(socket, host, port, localAddress) {\n      var options2 = toOptions(host, port, localAddress);\n      for (var i = 0, len = self.requests.length;i < len; ++i) {\n        var pending = self.requests[i];\n        if (pending.host === options2.host && pending.port === options2.port) {\n          self.requests.splice(i, 1);\n          pending.request.onSocket(socket);\n          return;\n        }\n      }\n      socket.destroy();\n      self.removeSocket(socket);\n    });\n  };\n  var createSecureSocket = function(options, cb) {\n    var self = this;\n    TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n      var hostHeader = options.request.getHeader(\"host\");\n      var tlsOptions = mergeOptions({}, self.options, {\n        socket,\n        servername: hostHeader ? hostHeader.replace(/:.*$/, \"\") : options.host\n      });\n      var secureSocket = tls.connect(0, tlsOptions);\n      self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n      cb(secureSocket);\n    });\n  };\n  var toOptions = function(host, port, localAddress) {\n    if (typeof host === \"string\") {\n      return {\n        host,\n        port,\n        localAddress\n      };\n    }\n    return host;\n  };\n  var mergeOptions = function(target) {\n    for (var i = 1, len = arguments.length;i < len; ++i) {\n      var overrides = arguments[i];\n      if (typeof overrides === \"object\") {\n        var keys = Object.keys(overrides);\n        for (var j = 0, keyLen = keys.length;j < keyLen; ++j) {\n          var k = keys[j];\n          if (overrides[k] !== undefined) {\n            target[k] = overrides[k];\n          }\n        }\n      }\n    }\n    return target;\n  };\n  var net = __require(\"net\");\n  var tls = __require(\"tls\");\n  var http = __require(\"http\");\n  var https = __require(\"https\");\n  var events = __require(\"events\");\n  var assert = __require(\"assert\");\n  var util = __require(\"util\");\n  exports.httpOverHttp = httpOverHttp;\n  exports.httpsOverHttp = httpsOverHttp;\n  exports.httpOverHttps = httpOverHttps;\n  exports.httpsOverHttps = httpsOverHttps;\n  util.inherits(TunnelingAgent, events.EventEmitter);\n  TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n    var self = this;\n    var options = mergeOptions({ request: req }, self.options, toOptions(host, port, localAddress));\n    if (self.sockets.length >= this.maxSockets) {\n      self.requests.push(options);\n      return;\n    }\n    self.createSocket(options, function(socket) {\n      socket.on(\"free\", onFree);\n      socket.on(\"close\", onCloseOrRemove);\n      socket.on(\"agentRemove\", onCloseOrRemove);\n      req.onSocket(socket);\n      function onFree() {\n        self.emit(\"free\", socket, options);\n      }\n      function onCloseOrRemove(err) {\n        self.removeSocket(socket);\n        socket.removeListener(\"free\", onFree);\n        socket.removeListener(\"close\", onCloseOrRemove);\n        socket.removeListener(\"agentRemove\", onCloseOrRemove);\n      }\n    });\n  };\n  TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n    var self = this;\n    var placeholder = {};\n    self.sockets.push(placeholder);\n    var connectOptions = mergeOptions({}, self.proxyOptions, {\n      method: \"CONNECT\",\n      path: options.host + \":\" + options.port,\n      agent: false,\n      headers: {\n        host: options.host + \":\" + options.port\n      }\n    });\n    if (options.localAddress) {\n      connectOptions.localAddress = options.localAddress;\n    }\n    if (connectOptions.proxyAuth) {\n      connectOptions.headers = connectOptions.headers || {};\n      connectOptions.headers[\"Proxy-Authorization\"] = \"Basic \" + new Buffer(connectOptions.proxyAuth).toString(\"base64\");\n    }\n    debug(\"making CONNECT request\");\n    var connectReq = self.request(connectOptions);\n    connectReq.useChunkedEncodingByDefault = false;\n    connectReq.once(\"response\", onResponse);\n    connectReq.once(\"upgrade\", onUpgrade);\n    connectReq.once(\"connect\", onConnect);\n    connectReq.once(\"error\", onError);\n    connectReq.end();\n    function onResponse(res) {\n      res.upgrade = true;\n    }\n    function onUpgrade(res, socket, head) {\n      process.nextTick(function() {\n        onConnect(res, socket, head);\n      });\n    }\n    function onConnect(res, socket, head) {\n      connectReq.removeAllListeners();\n      socket.removeAllListeners();\n      if (res.statusCode !== 200) {\n        debug(\"tunneling socket could not be established, statusCode=%d\", res.statusCode);\n        socket.destroy();\n        var error = new Error(\"tunneling socket could not be established, statusCode=\" + res.statusCode);\n        error.code = \"ECONNRESET\";\n        options.request.emit(\"error\", error);\n        self.removeSocket(placeholder);\n        return;\n      }\n      if (head.length > 0) {\n        debug(\"got illegal response body from proxy\");\n        socket.destroy();\n        var error = new Error(\"got illegal response body from proxy\");\n        error.code = \"ECONNRESET\";\n        options.request.emit(\"error\", error);\n        self.removeSocket(placeholder);\n        return;\n      }\n      debug(\"tunneling connection has established\");\n      self.sockets[self.sockets.indexOf(placeholder)] = socket;\n      return cb(socket);\n    }\n    function onError(cause) {\n      connectReq.removeAllListeners();\n      debug(\"tunneling socket could not be established, cause=%s\\n\", cause.message, cause.stack);\n      var error = new Error(\"tunneling socket could not be established, cause=\" + cause.message);\n      error.code = \"ECONNRESET\";\n      options.request.emit(\"error\", error);\n      self.removeSocket(placeholder);\n    }\n  };\n  TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n    var pos = this.sockets.indexOf(socket);\n    if (pos === -1) {\n      return;\n    }\n    this.sockets.splice(pos, 1);\n    var pending = this.requests.shift();\n    if (pending) {\n      this.createSocket(pending, function(socket2) {\n        pending.request.onSocket(socket2);\n      });\n    }\n  };\n  var debug;\n  if (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n    debug = function() {\n      var args = Array.prototype.slice.call(arguments);\n      if (typeof args[0] === \"string\") {\n        args[0] = \"TUNNEL: \" + args[0];\n      } else {\n        args.unshift(\"TUNNEL:\");\n      }\n      console.error.apply(console, args);\n    };\n  } else {\n    debug = function() {\n    };\n  }\n  exports.debug = debug;\n});\n\n// node_modules/@actions/http-client/lib/index.js\nvar require_lib = __commonJS((exports) => {\n  var getProxyUrl = function(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : \"\";\n  };\n  var isHttps = function(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === \"https:\";\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = undefined;\n  var http = __importStar(__require(\"http\"));\n  var https = __importStar(__require(\"https\"));\n  var pm = __importStar(require_proxy());\n  var tunnel = __importStar(require_tunnel());\n  var HttpCodes;\n  (function(HttpCodes2) {\n    HttpCodes2[HttpCodes2[\"OK\"] = 200] = \"OK\";\n    HttpCodes2[HttpCodes2[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes2[HttpCodes2[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes2[HttpCodes2[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes2[HttpCodes2[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes2[HttpCodes2[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes2[HttpCodes2[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes2[HttpCodes2[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes2[HttpCodes2[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes2[HttpCodes2[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes2[HttpCodes2[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes2[HttpCodes2[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes2[HttpCodes2[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes2[HttpCodes2[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes2[HttpCodes2[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes2[HttpCodes2[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes2[HttpCodes2[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes2[HttpCodes2[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes2[HttpCodes2[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes2[HttpCodes2[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes2[HttpCodes2[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes2[HttpCodes2[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes2[HttpCodes2[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes2[HttpCodes2[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes2[HttpCodes2[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes2[HttpCodes2[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes2[HttpCodes2[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n  })(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\n  var Headers;\n  (function(Headers2) {\n    Headers2[\"Accept\"] = \"accept\";\n    Headers2[\"ContentType\"] = \"content-type\";\n  })(Headers = exports.Headers || (exports.Headers = {}));\n  var MediaTypes;\n  (function(MediaTypes2) {\n    MediaTypes2[\"ApplicationJson\"] = \"application/json\";\n  })(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n  exports.getProxyUrl = getProxyUrl;\n  var HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n  ];\n  var HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n  ];\n  var RetryableHttpVerbs = [\"OPTIONS\", \"GET\", \"DELETE\", \"HEAD\"];\n  var ExponentialBackoffCeiling = 10;\n  var ExponentialBackoffTimeSlice = 5;\n\n  class HttpClientError extends Error {\n    constructor(message, statusCode) {\n      super(message);\n      this.name = \"HttpClientError\";\n      this.statusCode = statusCode;\n      Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n  }\n  exports.HttpClientError = HttpClientError;\n\n  class HttpClientResponse {\n    constructor(message) {\n      this.message = message;\n    }\n    readBody() {\n      return __awaiter(this, undefined, undefined, function* () {\n        return new Promise((resolve) => __awaiter(this, undefined, undefined, function* () {\n          let output = Buffer.alloc(0);\n          this.message.on(\"data\", (chunk) => {\n            output = Buffer.concat([output, chunk]);\n          });\n          this.message.on(\"end\", () => {\n            resolve(output.toString());\n          });\n        }));\n      });\n    }\n  }\n  exports.HttpClientResponse = HttpClientResponse;\n  exports.isHttps = isHttps;\n\n  class HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n      this._ignoreSslError = false;\n      this._allowRedirects = true;\n      this._allowRedirectDowngrade = false;\n      this._maxRedirects = 50;\n      this._allowRetries = false;\n      this._maxRetries = 1;\n      this._keepAlive = false;\n      this._disposed = false;\n      this.userAgent = userAgent;\n      this.handlers = handlers || [];\n      this.requestOptions = requestOptions;\n      if (requestOptions) {\n        if (requestOptions.ignoreSslError != null) {\n          this._ignoreSslError = requestOptions.ignoreSslError;\n        }\n        this._socketTimeout = requestOptions.socketTimeout;\n        if (requestOptions.allowRedirects != null) {\n          this._allowRedirects = requestOptions.allowRedirects;\n        }\n        if (requestOptions.allowRedirectDowngrade != null) {\n          this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n        }\n        if (requestOptions.maxRedirects != null) {\n          this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n        }\n        if (requestOptions.keepAlive != null) {\n          this._keepAlive = requestOptions.keepAlive;\n        }\n        if (requestOptions.allowRetries != null) {\n          this._allowRetries = requestOptions.allowRetries;\n        }\n        if (requestOptions.maxRetries != null) {\n          this._maxRetries = requestOptions.maxRetries;\n        }\n      }\n    }\n    options(requestUrl, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"OPTIONS\", requestUrl, null, additionalHeaders || {});\n      });\n    }\n    get(requestUrl, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"GET\", requestUrl, null, additionalHeaders || {});\n      });\n    }\n    del(requestUrl, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"DELETE\", requestUrl, null, additionalHeaders || {});\n      });\n    }\n    post(requestUrl, data, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"POST\", requestUrl, data, additionalHeaders || {});\n      });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"PATCH\", requestUrl, data, additionalHeaders || {});\n      });\n    }\n    put(requestUrl, data, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"PUT\", requestUrl, data, additionalHeaders || {});\n      });\n    }\n    head(requestUrl, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(\"HEAD\", requestUrl, null, additionalHeaders || {});\n      });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n      });\n    }\n    getJson(requestUrl, additionalHeaders = {}) {\n      return __awaiter(this, undefined, undefined, function* () {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        const res = yield this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n      });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n      return __awaiter(this, undefined, undefined, function* () {\n        const data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        const res = yield this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n      });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n      return __awaiter(this, undefined, undefined, function* () {\n        const data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        const res = yield this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n      });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n      return __awaiter(this, undefined, undefined, function* () {\n        const data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        const res = yield this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n      });\n    }\n    request(verb, requestUrl, data, headers) {\n      return __awaiter(this, undefined, undefined, function* () {\n        if (this._disposed) {\n          throw new Error(\"Client has already been disposed.\");\n        }\n        const parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb) ? this._maxRetries + 1 : 1;\n        let numTries = 0;\n        let response;\n        do {\n          response = yield this.requestRaw(info, data);\n          if (response && response.message && response.message.statusCode === HttpCodes.Unauthorized) {\n            let authenticationHandler;\n            for (const handler of this.handlers) {\n              if (handler.canHandleAuthentication(response)) {\n                authenticationHandler = handler;\n                break;\n              }\n            }\n            if (authenticationHandler) {\n              return authenticationHandler.handleAuthentication(this, info, data);\n            } else {\n              return response;\n            }\n          }\n          let redirectsRemaining = this._maxRedirects;\n          while (response.message.statusCode && HttpRedirectCodes.includes(response.message.statusCode) && this._allowRedirects && redirectsRemaining > 0) {\n            const redirectUrl = response.message.headers[\"location\"];\n            if (!redirectUrl) {\n              break;\n            }\n            const parsedRedirectUrl = new URL(redirectUrl);\n            if (parsedUrl.protocol === \"https:\" && parsedUrl.protocol !== parsedRedirectUrl.protocol && !this._allowRedirectDowngrade) {\n              throw new Error(\"Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.\");\n            }\n            yield response.readBody();\n            if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n              for (const header in headers) {\n                if (header.toLowerCase() === \"authorization\") {\n                  delete headers[header];\n                }\n              }\n            }\n            info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n            response = yield this.requestRaw(info, data);\n            redirectsRemaining--;\n          }\n          if (!response.message.statusCode || !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n            return response;\n          }\n          numTries += 1;\n          if (numTries < maxTries) {\n            yield response.readBody();\n            yield this._performExponentialBackoff(numTries);\n          }\n        } while (numTries < maxTries);\n        return response;\n      });\n    }\n    dispose() {\n      if (this._agent) {\n        this._agent.destroy();\n      }\n      this._disposed = true;\n    }\n    requestRaw(info, data) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return new Promise((resolve, reject) => {\n          function callbackForResult(err, res) {\n            if (err) {\n              reject(err);\n            } else if (!res) {\n              reject(new Error(\"Unknown error\"));\n            } else {\n              resolve(res);\n            }\n          }\n          this.requestRawWithCallback(info, data, callbackForResult);\n        });\n      });\n    }\n    requestRawWithCallback(info, data, onResult) {\n      if (typeof data === \"string\") {\n        if (!info.options.headers) {\n          info.options.headers = {};\n        }\n        info.options.headers[\"Content-Length\"] = Buffer.byteLength(data, \"utf8\");\n      }\n      let callbackCalled = false;\n      function handleResult(err, res) {\n        if (!callbackCalled) {\n          callbackCalled = true;\n          onResult(err, res);\n        }\n      }\n      const req = info.httpModule.request(info.options, (msg) => {\n        const res = new HttpClientResponse(msg);\n        handleResult(undefined, res);\n      });\n      let socket;\n      req.on(\"socket\", (sock) => {\n        socket = sock;\n      });\n      req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n        if (socket) {\n          socket.end();\n        }\n        handleResult(new Error(`Request timeout: ${info.options.path}`));\n      });\n      req.on(\"error\", function(err) {\n        handleResult(err);\n      });\n      if (data && typeof data === \"string\") {\n        req.write(data, \"utf8\");\n      }\n      if (data && typeof data !== \"string\") {\n        data.on(\"close\", function() {\n          req.end();\n        });\n        data.pipe(req);\n      } else {\n        req.end();\n      }\n    }\n    getAgent(serverUrl) {\n      const parsedUrl = new URL(serverUrl);\n      return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n      const info = {};\n      info.parsedUrl = requestUrl;\n      const usingSsl = info.parsedUrl.protocol === \"https:\";\n      info.httpModule = usingSsl ? https : http;\n      const defaultPort = usingSsl ? 443 : 80;\n      info.options = {};\n      info.options.host = info.parsedUrl.hostname;\n      info.options.port = info.parsedUrl.port ? parseInt(info.parsedUrl.port) : defaultPort;\n      info.options.path = (info.parsedUrl.pathname || \"\") + (info.parsedUrl.search || \"\");\n      info.options.method = method;\n      info.options.headers = this._mergeHeaders(headers);\n      if (this.userAgent != null) {\n        info.options.headers[\"user-agent\"] = this.userAgent;\n      }\n      info.options.agent = this._getAgent(info.parsedUrl);\n      if (this.handlers) {\n        for (const handler of this.handlers) {\n          handler.prepareRequest(info.options);\n        }\n      }\n      return info;\n    }\n    _mergeHeaders(headers) {\n      if (this.requestOptions && this.requestOptions.headers) {\n        return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n      }\n      return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n      let clientHeader;\n      if (this.requestOptions && this.requestOptions.headers) {\n        clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n      }\n      return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n      let agent;\n      const proxyUrl = pm.getProxyUrl(parsedUrl);\n      const useProxy = proxyUrl && proxyUrl.hostname;\n      if (this._keepAlive && useProxy) {\n        agent = this._proxyAgent;\n      }\n      if (this._keepAlive && !useProxy) {\n        agent = this._agent;\n      }\n      if (agent) {\n        return agent;\n      }\n      const usingSsl = parsedUrl.protocol === \"https:\";\n      let maxSockets = 100;\n      if (this.requestOptions) {\n        maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n      }\n      if (proxyUrl && proxyUrl.hostname) {\n        const agentOptions = {\n          maxSockets,\n          keepAlive: this._keepAlive,\n          proxy: Object.assign(Object.assign({}, (proxyUrl.username || proxyUrl.password) && {\n            proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n          }), { host: proxyUrl.hostname, port: proxyUrl.port })\n        };\n        let tunnelAgent;\n        const overHttps = proxyUrl.protocol === \"https:\";\n        if (usingSsl) {\n          tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n        } else {\n          tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n        }\n        agent = tunnelAgent(agentOptions);\n        this._proxyAgent = agent;\n      }\n      if (this._keepAlive && !agent) {\n        const options = { keepAlive: this._keepAlive, maxSockets };\n        agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n        this._agent = agent;\n      }\n      if (!agent) {\n        agent = usingSsl ? https.globalAgent : http.globalAgent;\n      }\n      if (usingSsl && this._ignoreSslError) {\n        agent.options = Object.assign(agent.options || {}, {\n          rejectUnauthorized: false\n        });\n      }\n      return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n      return __awaiter(this, undefined, undefined, function* () {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise((resolve) => setTimeout(() => resolve(), ms));\n      });\n    }\n    _processResponse(res, options) {\n      return __awaiter(this, undefined, undefined, function* () {\n        return new Promise((resolve, reject) => __awaiter(this, undefined, undefined, function* () {\n          const statusCode = res.message.statusCode || 0;\n          const response = {\n            statusCode,\n            result: null,\n            headers: {}\n          };\n          if (statusCode === HttpCodes.NotFound) {\n            resolve(response);\n          }\n          function dateTimeDeserializer(key, value) {\n            if (typeof value === \"string\") {\n              const a = new Date(value);\n              if (!isNaN(a.valueOf())) {\n                return a;\n              }\n            }\n            return value;\n          }\n          let obj;\n          let contents;\n          try {\n            contents = yield res.readBody();\n            if (contents && contents.length > 0) {\n              if (options && options.deserializeDates) {\n                obj = JSON.parse(contents, dateTimeDeserializer);\n              } else {\n                obj = JSON.parse(contents);\n              }\n              response.result = obj;\n            }\n            response.headers = res.message.headers;\n          } catch (err) {\n          }\n          if (statusCode > 299) {\n            let msg;\n            if (obj && obj.message) {\n              msg = obj.message;\n            } else if (contents && contents.length > 0) {\n              msg = contents;\n            } else {\n              msg = `Failed request: (${statusCode})`;\n            }\n            const err = new HttpClientError(msg, statusCode);\n            err.result = response.result;\n            reject(err);\n          } else {\n            resolve(response);\n          }\n        }));\n      });\n    }\n  }\n  exports.HttpClient = HttpClient;\n  var lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => (c[k.toLowerCase()] = obj[k], c), {});\n});\n\n// node_modules/@actions/http-client/lib/auth.js\nvar require_auth = __commonJS((exports) => {\n  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = undefined;\n\n  class BasicCredentialHandler {\n    constructor(username, password) {\n      this.username = username;\n      this.password = password;\n    }\n    prepareRequest(options) {\n      if (!options.headers) {\n        throw Error(\"The request has no headers\");\n      }\n      options.headers[\"Authorization\"] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString(\"base64\")}`;\n    }\n    canHandleAuthentication() {\n      return false;\n    }\n    handleAuthentication() {\n      return __awaiter(this, undefined, undefined, function* () {\n        throw new Error(\"not implemented\");\n      });\n    }\n  }\n  exports.BasicCredentialHandler = BasicCredentialHandler;\n\n  class BearerCredentialHandler {\n    constructor(token) {\n      this.token = token;\n    }\n    prepareRequest(options) {\n      if (!options.headers) {\n        throw Error(\"The request has no headers\");\n      }\n      options.headers[\"Authorization\"] = `Bearer ${this.token}`;\n    }\n    canHandleAuthentication() {\n      return false;\n    }\n    handleAuthentication() {\n      return __awaiter(this, undefined, undefined, function* () {\n        throw new Error(\"not implemented\");\n      });\n    }\n  }\n  exports.BearerCredentialHandler = BearerCredentialHandler;\n\n  class PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n      this.token = token;\n    }\n    prepareRequest(options) {\n      if (!options.headers) {\n        throw Error(\"The request has no headers\");\n      }\n      options.headers[\"Authorization\"] = `Basic ${Buffer.from(`PAT:${this.token}`).toString(\"base64\")}`;\n    }\n    canHandleAuthentication() {\n      return false;\n    }\n    handleAuthentication() {\n      return __awaiter(this, undefined, undefined, function* () {\n        throw new Error(\"not implemented\");\n      });\n    }\n  }\n  exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n});\n\n// node_modules/@actions/core/lib/oidc-utils.js\nvar require_oidc_utils = __commonJS((exports) => {\n  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.OidcClient = undefined;\n  var http_client_1 = require_lib();\n  var auth_1 = require_auth();\n  var core_1 = require_core();\n\n  class OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n      const requestOptions = {\n        allowRetries: allowRetry,\n        maxRetries: maxRetry\n      };\n      return new http_client_1.HttpClient(\"actions/oidc-client\", [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n      const token = process.env[\"ACTIONS_ID_TOKEN_REQUEST_TOKEN\"];\n      if (!token) {\n        throw new Error(\"Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable\");\n      }\n      return token;\n    }\n    static getIDTokenUrl() {\n      const runtimeUrl = process.env[\"ACTIONS_ID_TOKEN_REQUEST_URL\"];\n      if (!runtimeUrl) {\n        throw new Error(\"Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable\");\n      }\n      return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n      var _a;\n      return __awaiter(this, undefined, undefined, function* () {\n        const httpclient = OidcClient.createHttpClient();\n        const res = yield httpclient.getJson(id_token_url).catch((error) => {\n          throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n        });\n        const id_token = (_a = res.result) === null || _a === undefined ? undefined : _a.value;\n        if (!id_token) {\n          throw new Error(\"Response json body do not have ID Token field\");\n        }\n        return id_token;\n      });\n    }\n    static getIDToken(audience) {\n      return __awaiter(this, undefined, undefined, function* () {\n        try {\n          let id_token_url = OidcClient.getIDTokenUrl();\n          if (audience) {\n            const encodedAudience = encodeURIComponent(audience);\n            id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n          }\n          core_1.debug(`ID token url is ${id_token_url}`);\n          const id_token = yield OidcClient.getCall(id_token_url);\n          core_1.setSecret(id_token);\n          return id_token;\n        } catch (error) {\n          throw new Error(`Error message: ${error.message}`);\n        }\n      });\n    }\n  }\n  exports.OidcClient = OidcClient;\n});\n\n// node_modules/@actions/core/lib/summary.js\nvar require_summary = __commonJS((exports) => {\n  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = undefined;\n  var os_1 = __require(\"os\");\n  var fs_1 = __require(\"fs\");\n  var { access, appendFile, writeFile } = fs_1.promises;\n  exports.SUMMARY_ENV_VAR = \"GITHUB_STEP_SUMMARY\";\n  exports.SUMMARY_DOCS_URL = \"https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary\";\n\n  class Summary {\n    constructor() {\n      this._buffer = \"\";\n    }\n    filePath() {\n      return __awaiter(this, undefined, undefined, function* () {\n        if (this._filePath) {\n          return this._filePath;\n        }\n        const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n        if (!pathFromEnv) {\n          throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n        }\n        try {\n          yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n        } catch (_a) {\n          throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n        }\n        this._filePath = pathFromEnv;\n        return this._filePath;\n      });\n    }\n    wrap(tag, content, attrs = {}) {\n      const htmlAttrs = Object.entries(attrs).map(([key, value]) => ` ${key}=\"${value}\"`).join(\"\");\n      if (!content) {\n        return `<${tag}${htmlAttrs}>`;\n      }\n      return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    write(options) {\n      return __awaiter(this, undefined, undefined, function* () {\n        const overwrite = !!(options === null || options === undefined ? undefined : options.overwrite);\n        const filePath = yield this.filePath();\n        const writeFunc = overwrite ? writeFile : appendFile;\n        yield writeFunc(filePath, this._buffer, { encoding: \"utf8\" });\n        return this.emptyBuffer();\n      });\n    }\n    clear() {\n      return __awaiter(this, undefined, undefined, function* () {\n        return this.emptyBuffer().write({ overwrite: true });\n      });\n    }\n    stringify() {\n      return this._buffer;\n    }\n    isEmptyBuffer() {\n      return this._buffer.length === 0;\n    }\n    emptyBuffer() {\n      this._buffer = \"\";\n      return this;\n    }\n    addRaw(text, addEOL = false) {\n      this._buffer += text;\n      return addEOL ? this.addEOL() : this;\n    }\n    addEOL() {\n      return this.addRaw(os_1.EOL);\n    }\n    addCodeBlock(code, lang) {\n      const attrs = Object.assign({}, lang && { lang });\n      const element = this.wrap(\"pre\", this.wrap(\"code\", code), attrs);\n      return this.addRaw(element).addEOL();\n    }\n    addList(items, ordered = false) {\n      const tag = ordered ? \"ol\" : \"ul\";\n      const listItems = items.map((item) => this.wrap(\"li\", item)).join(\"\");\n      const element = this.wrap(tag, listItems);\n      return this.addRaw(element).addEOL();\n    }\n    addTable(rows) {\n      const tableBody = rows.map((row) => {\n        const cells = row.map((cell) => {\n          if (typeof cell === \"string\") {\n            return this.wrap(\"td\", cell);\n          }\n          const { header, data, colspan, rowspan } = cell;\n          const tag = header ? \"th\" : \"td\";\n          const attrs = Object.assign(Object.assign({}, colspan && { colspan }), rowspan && { rowspan });\n          return this.wrap(tag, data, attrs);\n        }).join(\"\");\n        return this.wrap(\"tr\", cells);\n      }).join(\"\");\n      const element = this.wrap(\"table\", tableBody);\n      return this.addRaw(element).addEOL();\n    }\n    addDetails(label, content) {\n      const element = this.wrap(\"details\", this.wrap(\"summary\", label) + content);\n      return this.addRaw(element).addEOL();\n    }\n    addImage(src, alt, options) {\n      const { width, height } = options || {};\n      const attrs = Object.assign(Object.assign({}, width && { width }), height && { height });\n      const element = this.wrap(\"img\", null, Object.assign({ src, alt }, attrs));\n      return this.addRaw(element).addEOL();\n    }\n    addHeading(text, level) {\n      const tag = `h${level}`;\n      const allowedTag = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"].includes(tag) ? tag : \"h1\";\n      const element = this.wrap(allowedTag, text);\n      return this.addRaw(element).addEOL();\n    }\n    addSeparator() {\n      const element = this.wrap(\"hr\", null);\n      return this.addRaw(element).addEOL();\n    }\n    addBreak() {\n      const element = this.wrap(\"br\", null);\n      return this.addRaw(element).addEOL();\n    }\n    addQuote(text, cite) {\n      const attrs = Object.assign({}, cite && { cite });\n      const element = this.wrap(\"blockquote\", text, attrs);\n      return this.addRaw(element).addEOL();\n    }\n    addLink(text, href) {\n      const element = this.wrap(\"a\", text, { href });\n      return this.addRaw(element).addEOL();\n    }\n  }\n  var _summary = new Summary;\n  exports.markdownSummary = _summary;\n  exports.summary = _summary;\n});\n\n// node_modules/@actions/core/lib/path-utils.js\nvar require_path_utils = __commonJS((exports) => {\n  var toPosixPath = function(pth) {\n    return pth.replace(/[\\\\]/g, \"/\");\n  };\n  var toWin32Path = function(pth) {\n    return pth.replace(/[/]/g, \"\\\\\");\n  };\n  var toPlatformPath = function(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = undefined;\n  var path = __importStar(__require(\"path\"));\n  exports.toPosixPath = toPosixPath;\n  exports.toWin32Path = toWin32Path;\n  exports.toPlatformPath = toPlatformPath;\n});\n\n// node_modules/@actions/core/lib/core.js\nvar require_core = __commonJS((exports) => {\n  var exportVariable = function(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env[\"GITHUB_ENV\"] || \"\";\n    if (filePath) {\n      return file_command_1.issueFileCommand(\"ENV\", file_command_1.prepareKeyValueMessage(name, val));\n    }\n    command_1.issueCommand(\"set-env\", { name }, convertedVal);\n  };\n  var setSecret = function(secret) {\n    command_1.issueCommand(\"add-mask\", {}, secret);\n  };\n  var addPath = function(inputPath) {\n    const filePath = process.env[\"GITHUB_PATH\"] || \"\";\n    if (filePath) {\n      file_command_1.issueFileCommand(\"PATH\", inputPath);\n    } else {\n      command_1.issueCommand(\"add-path\", {}, inputPath);\n    }\n    process.env[\"PATH\"] = `${inputPath}${path.delimiter}${process.env[\"PATH\"]}`;\n  };\n  var getInput = function(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, \"_\").toUpperCase()}`] || \"\";\n    if (options && options.required && !val) {\n      throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n      return val;\n    }\n    return val.trim();\n  };\n  var getMultilineInput = function(name, options) {\n    const inputs = getInput(name, options).split(\"\\n\").filter((x) => x !== \"\");\n    if (options && options.trimWhitespace === false) {\n      return inputs;\n    }\n    return inputs.map((input) => input.trim());\n  };\n  var getBooleanInput = function(name, options) {\n    const trueValue = [\"true\", \"True\", \"TRUE\"];\n    const falseValue = [\"false\", \"False\", \"FALSE\"];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n      return true;\n    if (falseValue.includes(val))\n      return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` + `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n  };\n  var setOutput = function(name, value) {\n    const filePath = process.env[\"GITHUB_OUTPUT\"] || \"\";\n    if (filePath) {\n      return file_command_1.issueFileCommand(\"OUTPUT\", file_command_1.prepareKeyValueMessage(name, value));\n    }\n    process.stdout.write(os.EOL);\n    command_1.issueCommand(\"set-output\", { name }, utils_1.toCommandValue(value));\n  };\n  var setCommandEcho = function(enabled) {\n    command_1.issue(\"echo\", enabled ? \"on\" : \"off\");\n  };\n  var setFailed = function(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n  };\n  var isDebug = function() {\n    return process.env[\"RUNNER_DEBUG\"] === \"1\";\n  };\n  var debug = function(message) {\n    command_1.issueCommand(\"debug\", {}, message);\n  };\n  var error = function(message, properties = {}) {\n    command_1.issueCommand(\"error\", utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n  };\n  var warning = function(message, properties = {}) {\n    command_1.issueCommand(\"warning\", utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n  };\n  var notice = function(message, properties = {}) {\n    command_1.issueCommand(\"notice\", utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n  };\n  var info = function(message) {\n    process.stdout.write(message + os.EOL);\n  };\n  var startGroup = function(name) {\n    command_1.issue(\"group\", name);\n  };\n  var endGroup = function() {\n    command_1.issue(\"endgroup\");\n  };\n  var group = function(name, fn) {\n    return __awaiter(this, undefined, undefined, function* () {\n      startGroup(name);\n      let result;\n      try {\n        result = yield fn();\n      } finally {\n        endGroup();\n      }\n      return result;\n    });\n  };\n  var saveState = function(name, value) {\n    const filePath = process.env[\"GITHUB_STATE\"] || \"\";\n    if (filePath) {\n      return file_command_1.issueFileCommand(\"STATE\", file_command_1.prepareKeyValueMessage(name, value));\n    }\n    command_1.issueCommand(\"save-state\", { name }, utils_1.toCommandValue(value));\n  };\n  var getState = function(name) {\n    return process.env[`STATE_${name}`] || \"\";\n  };\n  var getIDToken = function(aud) {\n    return __awaiter(this, undefined, undefined, function* () {\n      return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n      return value instanceof P ? value : new P(function(resolve) {\n        resolve(value);\n      });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n      function fulfilled(value) {\n        try {\n          step(generator.next(value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function rejected(value) {\n        try {\n          step(generator[\"throw\"](value));\n        } catch (e) {\n          reject(e);\n        }\n      }\n      function step(result) {\n        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n      }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = undefined;\n  var command_1 = require_command();\n  var file_command_1 = require_file_command();\n  var utils_1 = require_utils();\n  var os = __importStar(__require(\"os\"));\n  var path = __importStar(__require(\"path\"));\n  var oidc_utils_1 = require_oidc_utils();\n  var ExitCode;\n  (function(ExitCode2) {\n    ExitCode2[ExitCode2[\"Success\"] = 0] = \"Success\";\n    ExitCode2[ExitCode2[\"Failure\"] = 1] = \"Failure\";\n  })(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n  exports.exportVariable = exportVariable;\n  exports.setSecret = setSecret;\n  exports.addPath = addPath;\n  exports.getInput = getInput;\n  exports.getMultilineInput = getMultilineInput;\n  exports.getBooleanInput = getBooleanInput;\n  exports.setOutput = setOutput;\n  exports.setCommandEcho = setCommandEcho;\n  exports.setFailed = setFailed;\n  exports.isDebug = isDebug;\n  exports.debug = debug;\n  exports.error = error;\n  exports.warning = warning;\n  exports.notice = notice;\n  exports.info = info;\n  exports.startGroup = startGroup;\n  exports.endGroup = endGroup;\n  exports.group = group;\n  exports.saveState = saveState;\n  exports.getState = getState;\n  exports.getIDToken = getIDToken;\n  var summary_1 = require_summary();\n  Object.defineProperty(exports, \"summary\", { enumerable: true, get: function() {\n    return summary_1.summary;\n  } });\n  var summary_2 = require_summary();\n  Object.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function() {\n    return summary_2.markdownSummary;\n  } });\n  var path_utils_1 = require_path_utils();\n  Object.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function() {\n    return path_utils_1.toPosixPath;\n  } });\n  Object.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function() {\n    return path_utils_1.toWin32Path;\n  } });\n  Object.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function() {\n    return path_utils_1.toPlatformPath;\n  } });\n});\n\n// node_modules/universal-user-agent/dist-node/index.js\nvar require_dist_node = __commonJS((exports) => {\n  var getUserAgent = function() {\n    if (typeof navigator === \"object\" && (\"userAgent\" in navigator)) {\n      return navigator.userAgent;\n    }\n    if (typeof process === \"object\" && (\"version\" in process)) {\n      return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n    }\n    return \"<environment undetectable>\";\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.getUserAgent = getUserAgent;\n});\n\n// node_modules/before-after-hook/lib/register.js\nvar require_register = __commonJS((exports, module) => {\n  var register = function(state, name, method, options) {\n    if (typeof method !== \"function\") {\n      throw new Error(\"method for before hook must be a function\");\n    }\n    if (!options) {\n      options = {};\n    }\n    if (Array.isArray(name)) {\n      return name.reverse().reduce(function(callback, name2) {\n        return register.bind(null, state, name2, callback, options);\n      }, method)();\n    }\n    return Promise.resolve().then(function() {\n      if (!state.registry[name]) {\n        return method(options);\n      }\n      return state.registry[name].reduce(function(method2, registered) {\n        return registered.hook.bind(null, method2, options);\n      }, method)();\n    });\n  };\n  module.exports = register;\n});\n\n// node_modules/before-after-hook/lib/add.js\nvar require_add = __commonJS((exports, module) => {\n  var addHook = function(state, kind, name, hook) {\n    var orig = hook;\n    if (!state.registry[name]) {\n      state.registry[name] = [];\n    }\n    if (kind === \"before\") {\n      hook = function(method, options) {\n        return Promise.resolve().then(orig.bind(null, options)).then(method.bind(null, options));\n      };\n    }\n    if (kind === \"after\") {\n      hook = function(method, options) {\n        var result;\n        return Promise.resolve().then(method.bind(null, options)).then(function(result_) {\n          result = result_;\n          return orig(result, options);\n        }).then(function() {\n          return result;\n        });\n      };\n    }\n    if (kind === \"error\") {\n      hook = function(method, options) {\n        return Promise.resolve().then(method.bind(null, options)).catch(function(error) {\n          return orig(error, options);\n        });\n      };\n    }\n    state.registry[name].push({\n      hook,\n      orig\n    });\n  };\n  module.exports = addHook;\n});\n\n// node_modules/before-after-hook/lib/remove.js\nvar require_remove = __commonJS((exports, module) => {\n  var removeHook = function(state, name, method) {\n    if (!state.registry[name]) {\n      return;\n    }\n    var index = state.registry[name].map(function(registered) {\n      return registered.orig;\n    }).indexOf(method);\n    if (index === -1) {\n      return;\n    }\n    state.registry[name].splice(index, 1);\n  };\n  module.exports = removeHook;\n});\n\n// node_modules/before-after-hook/index.js\nvar require_before_after_hook = __commonJS((exports, module) => {\n  var bindApi = function(hook, state, name) {\n    var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state]);\n    hook.api = { remove: removeHookRef };\n    hook.remove = removeHookRef;\n    [\"before\", \"error\", \"after\", \"wrap\"].forEach(function(kind) {\n      var args = name ? [state, kind, name] : [state, kind];\n      hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args);\n    });\n  };\n  var HookSingular = function() {\n    var singularHookName = \"h\";\n    var singularHookState = {\n      registry: {}\n    };\n    var singularHook = register.bind(null, singularHookState, singularHookName);\n    bindApi(singularHook, singularHookState, singularHookName);\n    return singularHook;\n  };\n  var HookCollection = function() {\n    var state = {\n      registry: {}\n    };\n    var hook = register.bind(null, state);\n    bindApi(hook, state);\n    return hook;\n  };\n  var Hook = function() {\n    if (!collectionHookDeprecationMessageDisplayed) {\n      console.warn('[before-after-hook]: \"Hook()\" repurposing warning, use \"Hook.Collection()\". Read more: https://git.io/upgrade-before-after-hook-to-1.4');\n      collectionHookDeprecationMessageDisplayed = true;\n    }\n    return HookCollection();\n  };\n  var register = require_register();\n  var addHook = require_add();\n  var removeHook = require_remove();\n  var bind = Function.bind;\n  var bindable = bind.bind(bind);\n  var collectionHookDeprecationMessageDisplayed = false;\n  Hook.Singular = HookSingular.bind();\n  Hook.Collection = HookCollection.bind();\n  module.exports = Hook;\n  module.exports.Hook = Hook;\n  module.exports.Singular = Hook.Singular;\n  module.exports.Collection = Hook.Collection;\n});\n\n// node_modules/is-plain-object/dist/is-plain-object.js\nvar require_is_plain_object = __commonJS((exports) => {\n  var isObject = function(o) {\n    return Object.prototype.toString.call(o) === \"[object Object]\";\n  };\n  var isPlainObject = function(o) {\n    var ctor, prot;\n    if (isObject(o) === false)\n      return false;\n    ctor = o.constructor;\n    if (ctor === undefined)\n      return true;\n    prot = ctor.prototype;\n    if (isObject(prot) === false)\n      return false;\n    if (prot.hasOwnProperty(\"isPrototypeOf\") === false) {\n      return false;\n    }\n    return true;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  /*!\n   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n   *\n   * Copyright (c) 2014-2017, Jon Schlinkert.\n   * Released under the MIT License.\n   */\n  exports.isPlainObject = isPlainObject;\n});\n\n// node_modules/@octokit/endpoint/dist-node/index.js\nvar require_dist_node2 = __commonJS((exports) => {\n  var lowercaseKeys = function(object) {\n    if (!object) {\n      return {};\n    }\n    return Object.keys(object).reduce((newObj, key) => {\n      newObj[key.toLowerCase()] = object[key];\n      return newObj;\n    }, {});\n  };\n  var mergeDeep = function(defaults, options) {\n    const result = Object.assign({}, defaults);\n    Object.keys(options).forEach((key) => {\n      if (isPlainObject.isPlainObject(options[key])) {\n        if (!(key in defaults))\n          Object.assign(result, {\n            [key]: options[key]\n          });\n        else\n          result[key] = mergeDeep(defaults[key], options[key]);\n      } else {\n        Object.assign(result, {\n          [key]: options[key]\n        });\n      }\n    });\n    return result;\n  };\n  var removeUndefinedProperties = function(obj) {\n    for (const key in obj) {\n      if (obj[key] === undefined) {\n        delete obj[key];\n      }\n    }\n    return obj;\n  };\n  var merge = function(defaults, route, options) {\n    if (typeof route === \"string\") {\n      let [method, url] = route.split(\" \");\n      options = Object.assign(url ? {\n        method,\n        url\n      } : {\n        url: method\n      }, options);\n    } else {\n      options = Object.assign({}, route);\n    }\n    options.headers = lowercaseKeys(options.headers);\n    removeUndefinedProperties(options);\n    removeUndefinedProperties(options.headers);\n    const mergedOptions = mergeDeep(defaults || {}, options);\n    if (defaults && defaults.mediaType.previews.length) {\n      mergedOptions.mediaType.previews = defaults.mediaType.previews.filter((preview) => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, \"\"));\n    return mergedOptions;\n  };\n  var addQueryParameters = function(url, parameters) {\n    const separator = /\\?/.test(url) ? \"&\" : \"?\";\n    const names = Object.keys(parameters);\n    if (names.length === 0) {\n      return url;\n    }\n    return url + separator + names.map((name) => {\n      if (name === \"q\") {\n        return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n      }\n      return `${name}=${encodeURIComponent(parameters[name])}`;\n    }).join(\"&\");\n  };\n  var removeNonChars = function(variableName) {\n    return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n  };\n  var extractUrlVariableNames = function(url) {\n    const matches = url.match(urlVariableRegex);\n    if (!matches) {\n      return [];\n    }\n    return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n  };\n  var omit = function(object, keysToOmit) {\n    return Object.keys(object).filter((option) => !keysToOmit.includes(option)).reduce((obj, key) => {\n      obj[key] = object[key];\n      return obj;\n    }, {});\n  };\n  var encodeReserved = function(str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function(part) {\n      if (!/%[0-9A-Fa-f]/.test(part)) {\n        part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n      }\n      return part;\n    }).join(\"\");\n  };\n  var encodeUnreserved = function(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n      return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n  };\n  var encodeValue = function(operator, value, key) {\n    value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n    if (key) {\n      return encodeUnreserved(key) + \"=\" + value;\n    } else {\n      return value;\n    }\n  };\n  var isDefined = function(value) {\n    return value !== undefined && value !== null;\n  };\n  var isKeyOperator = function(operator) {\n    return operator === \";\" || operator === \"&\" || operator === \"?\";\n  };\n  var getValues = function(context, operator, key, modifier) {\n    var value = context[key], result = [];\n    if (isDefined(value) && value !== \"\") {\n      if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n        value = value.toString();\n        if (modifier && modifier !== \"*\") {\n          value = value.substring(0, parseInt(modifier, 10));\n        }\n        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n      } else {\n        if (modifier === \"*\") {\n          if (Array.isArray(value)) {\n            value.filter(isDefined).forEach(function(value2) {\n              result.push(encodeValue(operator, value2, isKeyOperator(operator) ? key : \"\"));\n            });\n          } else {\n            Object.keys(value).forEach(function(k) {\n              if (isDefined(value[k])) {\n                result.push(encodeValue(operator, value[k], k));\n              }\n            });\n          }\n        } else {\n          const tmp = [];\n          if (Array.isArray(value)) {\n            value.filter(isDefined).forEach(function(value2) {\n              tmp.push(encodeValue(operator, value2));\n            });\n          } else {\n            Object.keys(value).forEach(function(k) {\n              if (isDefined(value[k])) {\n                tmp.push(encodeUnreserved(k));\n                tmp.push(encodeValue(operator, value[k].toString()));\n              }\n            });\n          }\n          if (isKeyOperator(operator)) {\n            result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n          } else if (tmp.length !== 0) {\n            result.push(tmp.join(\",\"));\n          }\n        }\n      }\n    } else {\n      if (operator === \";\") {\n        if (isDefined(value)) {\n          result.push(encodeUnreserved(key));\n        }\n      } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n        result.push(encodeUnreserved(key) + \"=\");\n      } else if (value === \"\") {\n        result.push(\"\");\n      }\n    }\n    return result;\n  };\n  var parseUrl = function(template) {\n    return {\n      expand: expand.bind(null, template)\n    };\n  };\n  var expand = function(template, context) {\n    var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n    return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function(_, expression, literal) {\n      if (expression) {\n        let operator = \"\";\n        const values = [];\n        if (operators.indexOf(expression.charAt(0)) !== -1) {\n          operator = expression.charAt(0);\n          expression = expression.substr(1);\n        }\n        expression.split(/,/g).forEach(function(variable) {\n          var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n          values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n        });\n        if (operator && operator !== \"+\") {\n          var separator = \",\";\n          if (operator === \"?\") {\n            separator = \"&\";\n          } else if (operator !== \"#\") {\n            separator = operator;\n          }\n          return (values.length !== 0 ? operator : \"\") + values.join(separator);\n        } else {\n          return values.join(\",\");\n        }\n      } else {\n        return encodeReserved(literal);\n      }\n    });\n  };\n  var parse3 = function(options) {\n    let method = options.method.toUpperCase();\n    let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n    let headers = Object.assign({}, options.headers);\n    let body;\n    let parameters = omit(options, [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"mediaType\"]);\n    const urlVariableNames = extractUrlVariableNames(url);\n    url = parseUrl(url).expand(parameters);\n    if (!/^http/.test(url)) {\n      url = options.baseUrl + url;\n    }\n    const omittedParameters = Object.keys(options).filter((option) => urlVariableNames.includes(option)).concat(\"baseUrl\");\n    const remainingParameters = omit(parameters, omittedParameters);\n    const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n    if (!isBinaryRequest) {\n      if (options.mediaType.format) {\n        headers.accept = headers.accept.split(/,/).map((preview) => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(\",\");\n      }\n      if (options.mediaType.previews.length) {\n        const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n        headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map((preview) => {\n          const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n          return `application/vnd.github.${preview}-preview${format}`;\n        }).join(\",\");\n      }\n    }\n    if ([\"GET\", \"HEAD\"].includes(method)) {\n      url = addQueryParameters(url, remainingParameters);\n    } else {\n      if (\"data\" in remainingParameters) {\n        body = remainingParameters.data;\n      } else {\n        if (Object.keys(remainingParameters).length) {\n          body = remainingParameters;\n        } else {\n          headers[\"content-length\"] = 0;\n        }\n      }\n    }\n    if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n      headers[\"content-type\"] = \"application/json; charset=utf-8\";\n    }\n    if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n      body = \"\";\n    }\n    return Object.assign({\n      method,\n      url,\n      headers\n    }, typeof body !== \"undefined\" ? {\n      body\n    } : null, options.request ? {\n      request: options.request\n    } : null);\n  };\n  var endpointWithDefaults = function(defaults, route, options) {\n    return parse3(merge(defaults, route, options));\n  };\n  var withDefaults = function(oldDefaults, newDefaults) {\n    const DEFAULTS2 = merge(oldDefaults, newDefaults);\n    const endpoint2 = endpointWithDefaults.bind(null, DEFAULTS2);\n    return Object.assign(endpoint2, {\n      DEFAULTS: DEFAULTS2,\n      defaults: withDefaults.bind(null, DEFAULTS2),\n      merge: merge.bind(null, DEFAULTS2),\n      parse: parse3\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var isPlainObject = require_is_plain_object();\n  var universalUserAgent = require_dist_node();\n  var urlVariableRegex = /\\{[^}]+\\}/g;\n  var VERSION = \"6.0.12\";\n  var userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`;\n  var DEFAULTS = {\n    method: \"GET\",\n    baseUrl: \"https://api.github.com\",\n    headers: {\n      accept: \"application/vnd.github.v3+json\",\n      \"user-agent\": userAgent\n    },\n    mediaType: {\n      format: \"\",\n      previews: []\n    }\n  };\n  var endpoint = withDefaults(null, DEFAULTS);\n  exports.endpoint = endpoint;\n});\n\n// node_modules/webidl-conversions/lib/index.js\nvar require_lib2 = __commonJS((exports, module) => {\n  var sign = function(x) {\n    return x < 0 ? -1 : 1;\n  };\n  var evenRound = function(x) {\n    if (x % 1 === 0.5 && (x & 1) === 0) {\n      return Math.floor(x);\n    } else {\n      return Math.round(x);\n    }\n  };\n  var createNumberConversion = function(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n      --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n    return function(V, opts) {\n      if (!opts)\n        opts = {};\n      let x = +V;\n      if (opts.enforceRange) {\n        if (!Number.isFinite(x)) {\n          throw new TypeError(\"Argument is not a finite number\");\n        }\n        x = sign(x) * Math.floor(Math.abs(x));\n        if (x < lowerBound || x > upperBound) {\n          throw new TypeError(\"Argument is not in byte range\");\n        }\n        return x;\n      }\n      if (!isNaN(x) && opts.clamp) {\n        x = evenRound(x);\n        if (x < lowerBound)\n          x = lowerBound;\n        if (x > upperBound)\n          x = upperBound;\n        return x;\n      }\n      if (!Number.isFinite(x) || x === 0) {\n        return 0;\n      }\n      x = sign(x) * Math.floor(Math.abs(x));\n      x = x % moduloVal;\n      if (!typeOpts.unsigned && x >= moduloBound) {\n        return x - moduloVal;\n      } else if (typeOpts.unsigned) {\n        if (x < 0) {\n          x += moduloVal;\n        } else if (x === -0) {\n          return 0;\n        }\n      }\n      return x;\n    };\n  };\n  var conversions = {};\n  module.exports = conversions;\n  conversions[\"void\"] = function() {\n    return;\n  };\n  conversions[\"boolean\"] = function(val) {\n    return !!val;\n  };\n  conversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\n  conversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n  conversions[\"short\"] = createNumberConversion(16, { unsigned: false });\n  conversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n  conversions[\"long\"] = createNumberConversion(32, { unsigned: false });\n  conversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n  conversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\n  conversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n  conversions[\"double\"] = function(V) {\n    const x = +V;\n    if (!Number.isFinite(x)) {\n      throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n    return x;\n  };\n  conversions[\"unrestricted double\"] = function(V) {\n    const x = +V;\n    if (isNaN(x)) {\n      throw new TypeError(\"Argument is NaN\");\n    }\n    return x;\n  };\n  conversions[\"float\"] = conversions[\"double\"];\n  conversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n  conversions[\"DOMString\"] = function(V, opts) {\n    if (!opts)\n      opts = {};\n    if (opts.treatNullAsEmptyString && V === null) {\n      return \"\";\n    }\n    return String(V);\n  };\n  conversions[\"ByteString\"] = function(V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0;(c = x.codePointAt(i)) !== undefined; ++i) {\n      if (c > 255) {\n        throw new TypeError(\"Argument is not a valid bytestring\");\n      }\n    }\n    return x;\n  };\n  conversions[\"USVString\"] = function(V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0;i < n; ++i) {\n      const c = S.charCodeAt(i);\n      if (c < 55296 || c > 57343) {\n        U.push(String.fromCodePoint(c));\n      } else if (56320 <= c && c <= 57343) {\n        U.push(String.fromCodePoint(65533));\n      } else {\n        if (i === n - 1) {\n          U.push(String.fromCodePoint(65533));\n        } else {\n          const d = S.charCodeAt(i + 1);\n          if (56320 <= d && d <= 57343) {\n            const a = c & 1023;\n            const b = d & 1023;\n            U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n            ++i;\n          } else {\n            U.push(String.fromCodePoint(65533));\n          }\n        }\n      }\n    }\n    return U.join(\"\");\n  };\n  conversions[\"Date\"] = function(V, opts) {\n    if (!(V instanceof Date)) {\n      throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n      return;\n    }\n    return V;\n  };\n  conversions[\"RegExp\"] = function(V, opts) {\n    if (!(V instanceof RegExp)) {\n      V = new RegExp(V);\n    }\n    return V;\n  };\n});\n\n// node_modules/whatwg-url/lib/utils.js\nvar require_utils2 = __commonJS((exports, module) => {\n  exports.mixin = function mixin(target, source) {\n    const keys = Object.getOwnPropertyNames(source);\n    for (let i = 0;i < keys.length; ++i) {\n      Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n    }\n  };\n  exports.wrapperSymbol = Symbol(\"wrapper\");\n  exports.implSymbol = Symbol(\"impl\");\n  exports.wrapperForImpl = function(impl) {\n    return impl[exports.wrapperSymbol];\n  };\n  exports.implForWrapper = function(wrapper) {\n    return wrapper[exports.implSymbol];\n  };\n});\n\n// node_modules/tr46/lib/mappingTable.json\nvar require_mappingTable = __commonJS((exports, module) => {\n  module.exports = [[[0, 44], \"disallowed_STD3_valid\"], [[45, 46], \"valid\"], [[47, 47], \"disallowed_STD3_valid\"], [[48, 57], \"valid\"], [[58, 64], \"disallowed_STD3_valid\"], [[65, 65], \"mapped\", [97]], [[66, 66], \"mapped\", [98]], [[67, 67], \"mapped\", [99]], [[68, 68], \"mapped\", [100]], [[69, 69], \"mapped\", [101]], [[70, 70], \"mapped\", [102]], [[71, 71], \"mapped\", [103]], [[72, 72], \"mapped\", [104]], [[73, 73], \"mapped\", [105]], [[74, 74], \"mapped\", [106]], [[75, 75], \"mapped\", [107]], [[76, 76], \"mapped\", [108]], [[77, 77], \"mapped\", [109]], [[78, 78], \"mapped\", [110]], [[79, 79], \"mapped\", [111]], [[80, 80], \"mapped\", [112]], [[81, 81], \"mapped\", [113]], [[82, 82], \"mapped\", [114]], [[83, 83], \"mapped\", [115]], [[84, 84], \"mapped\", [116]], [[85, 85], \"mapped\", [117]], [[86, 86], \"mapped\", [118]], [[87, 87], \"mapped\", [119]], [[88, 88], \"mapped\", [120]], [[89, 89], \"mapped\", [121]], [[90, 90], \"mapped\", [122]], [[91, 96], \"disallowed_STD3_valid\"], [[97, 122], \"valid\"], [[123, 127], \"disallowed_STD3_valid\"], [[128, 159], \"disallowed\"], [[160, 160], \"disallowed_STD3_mapped\", [32]], [[161, 167], \"valid\", [], \"NV8\"], [[168, 168], \"disallowed_STD3_mapped\", [32, 776]], [[169, 169], \"valid\", [], \"NV8\"], [[170, 170], \"mapped\", [97]], [[171, 172], \"valid\", [], \"NV8\"], [[173, 173], \"ignored\"], [[174, 174], \"valid\", [], \"NV8\"], [[175, 175], \"disallowed_STD3_mapped\", [32, 772]], [[176, 177], \"valid\", [], \"NV8\"], [[178, 178], \"mapped\", [50]], [[179, 179], \"mapped\", [51]], [[180, 180], \"disallowed_STD3_mapped\", [32, 769]], [[181, 181], \"mapped\", [956]], [[182, 182], \"valid\", [], \"NV8\"], [[183, 183], \"valid\"], [[184, 184], \"disallowed_STD3_mapped\", [32, 807]], [[185, 185], \"mapped\", [49]], [[186, 186], \"mapped\", [111]], [[187, 187], \"valid\", [], \"NV8\"], [[188, 188], \"mapped\", [49, 8260, 52]], [[189, 189], \"mapped\", [49, 8260, 50]], [[190, 190], \"mapped\", [51, 8260, 52]], [[191, 191], \"valid\", [], \"NV8\"], [[192, 192], \"mapped\", [224]], [[193, 193], \"mapped\", [225]], [[194, 194], \"mapped\", [226]], [[195, 195], \"mapped\", [227]], [[196, 196], \"mapped\", [228]], [[197, 197], \"mapped\", [229]], [[198, 198], \"mapped\", [230]], [[199, 199], \"mapped\", [231]], [[200, 200], \"mapped\", [232]], [[201, 201], \"mapped\", [233]], [[202, 202], \"mapped\", [234]], [[203, 203], \"mapped\", [235]], [[204, 204], \"mapped\", [236]], [[205, 205], \"mapped\", [237]], [[206, 206], \"mapped\", [238]], [[207, 207], \"mapped\", [239]], [[208, 208], \"mapped\", [240]], [[209, 209], \"mapped\", [241]], [[210, 210], \"mapped\", [242]], [[211, 211], \"mapped\", [243]], [[212, 212], \"mapped\", [244]], [[213, 213], \"mapped\", [245]], [[214, 214], \"mapped\", [246]], [[215, 215], \"valid\", [], \"NV8\"], [[216, 216], \"mapped\", [248]], [[217, 217], \"mapped\", [249]], [[218, 218], \"mapped\", [250]], [[219, 219], \"mapped\", [251]], [[220, 220], \"mapped\", [252]], [[221, 221], \"mapped\", [253]], [[222, 222], \"mapped\", [254]], [[223, 223], \"deviation\", [115, 115]], [[224, 246], \"valid\"], [[247, 247], \"valid\", [], \"NV8\"], [[248, 255], \"valid\"], [[256, 256], \"mapped\", [257]], [[257, 257], \"valid\"], [[258, 258], \"mapped\", [259]], [[259, 259], \"valid\"], [[260, 260], \"mapped\", [261]], [[261, 261], \"valid\"], [[262, 262], \"mapped\", [263]], [[263, 263], \"valid\"], [[264, 264], \"mapped\", [265]], [[265, 265], \"valid\"], [[266, 266], \"mapped\", [267]], [[267, 267], \"valid\"], [[268, 268], \"mapped\", [269]], [[269, 269], \"valid\"], [[270, 270], \"mapped\", [271]], [[271, 271], \"valid\"], [[272, 272], \"mapped\", [273]], [[273, 273], \"valid\"], [[274, 274], \"mapped\", [275]], [[275, 275], \"valid\"], [[276, 276], \"mapped\", [277]], [[277, 277], \"valid\"], [[278, 278], \"mapped\", [279]], [[279, 279], \"valid\"], [[280, 280], \"mapped\", [281]], [[281, 281], \"valid\"], [[282, 282], \"mapped\", [283]], [[283, 283], \"valid\"], [[284, 284], \"mapped\", [285]], [[285, 285], \"valid\"], [[286, 286], \"mapped\", [287]], [[287, 287], \"valid\"], [[288, 288], \"mapped\", [289]], [[289, 289], \"valid\"], [[290, 290], \"mapped\", [291]], [[291, 291], \"valid\"], [[292, 292], \"mapped\", [293]], [[293, 293], \"valid\"], [[294, 294], \"mapped\", [295]], [[295, 295], \"valid\"], [[296, 296], \"mapped\", [297]], [[297, 297], \"valid\"], [[298, 298], \"mapped\", [299]], [[299, 299], \"valid\"], [[300, 300], \"mapped\", [301]], [[301, 301], \"valid\"], [[302, 302], \"mapped\", [303]], [[303, 303], \"valid\"], [[304, 304], \"mapped\", [105, 775]], [[305, 305], \"valid\"], [[306, 307], \"mapped\", [105, 106]], [[308, 308], \"mapped\", [309]], [[309, 309], \"valid\"], [[310, 310], \"mapped\", [311]], [[311, 312], \"valid\"], [[313, 313], \"mapped\", [314]], [[314, 314], \"valid\"], [[315, 315], \"mapped\", [316]], [[316, 316], \"valid\"], [[317, 317], \"mapped\", [318]], [[318, 318], \"valid\"], [[319, 320], \"mapped\", [108, 183]], [[321, 321], \"mapped\", [322]], [[322, 322], \"valid\"], [[323, 323], \"mapped\", [324]], [[324, 324], \"valid\"], [[325, 325], \"mapped\", [326]], [[326, 326], \"valid\"], [[327, 327], \"mapped\", [328]], [[328, 328], \"valid\"], [[329, 329], \"mapped\", [700, 110]], [[330, 330], \"mapped\", [331]], [[331, 331], \"valid\"], [[332, 332], \"mapped\", [333]], [[333, 333], \"valid\"], [[334, 334], \"mapped\", [335]], [[335, 335], \"valid\"], [[336, 336], \"mapped\", [337]], [[337, 337], \"valid\"], [[338, 338], \"mapped\", [339]], [[339, 339], \"valid\"], [[340, 340], \"mapped\", [341]], [[341, 341], \"valid\"], [[342, 342], \"mapped\", [343]], [[343, 343], \"valid\"], [[344, 344], \"mapped\", [345]], [[345, 345], \"valid\"], [[346, 346], \"mapped\", [347]], [[347, 347], \"valid\"], [[348, 348], \"mapped\", [349]], [[349, 349], \"valid\"], [[350, 350], \"mapped\", [351]], [[351, 351], \"valid\"], [[352, 352], \"mapped\", [353]], [[353, 353], \"valid\"], [[354, 354], \"mapped\", [355]], [[355, 355], \"valid\"], [[356, 356], \"mapped\", [357]], [[357, 357], \"valid\"], [[358, 358], \"mapped\", [359]], [[359, 359], \"valid\"], [[360, 360], \"mapped\", [361]], [[361, 361], \"valid\"], [[362, 362], \"mapped\", [363]], [[363, 363], \"valid\"], [[364, 364], \"mapped\", [365]], [[365, 365], \"valid\"], [[366, 366], \"mapped\", [367]], [[367, 367], \"valid\"], [[368, 368], \"mapped\", [369]], [[369, 369], \"valid\"], [[370, 370], \"mapped\", [371]], [[371, 371], \"valid\"], [[372, 372], \"mapped\", [373]], [[373, 373], \"valid\"], [[374, 374], \"mapped\", [375]], [[375, 375], \"valid\"], [[376, 376], \"mapped\", [255]], [[377, 377], \"mapped\", [378]], [[378, 378], \"valid\"], [[379, 379], \"mapped\", [380]], [[380, 380], \"valid\"], [[381, 381], \"mapped\", [382]], [[382, 382], \"valid\"], [[383, 383], \"mapped\", [115]], [[384, 384], \"valid\"], [[385, 385], \"mapped\", [595]], [[386, 386], \"mapped\", [387]], [[387, 387], \"valid\"], [[388, 388], \"mapped\", [389]], [[389, 389], \"valid\"], [[390, 390], \"mapped\", [596]], [[391, 391], \"mapped\", [392]], [[392, 392], \"valid\"], [[393, 393], \"mapped\", [598]], [[394, 394], \"mapped\", [599]], [[395, 395], \"mapped\", [396]], [[396, 397], \"valid\"], [[398, 398], \"mapped\", [477]], [[399, 399], \"mapped\", [601]], [[400, 400], \"mapped\", [603]], [[401, 401], \"mapped\", [402]], [[402, 402], \"valid\"], [[403, 403], \"mapped\", [608]], [[404, 404], \"mapped\", [611]], [[405, 405], \"valid\"], [[406, 406], \"mapped\", [617]], [[407, 407], \"mapped\", [616]], [[408, 408], \"mapped\", [409]], [[409, 411], \"valid\"], [[412, 412], \"mapped\", [623]], [[413, 413], \"mapped\", [626]], [[414, 414], \"valid\"], [[415, 415], \"mapped\", [629]], [[416, 416], \"mapped\", [417]], [[417, 417], \"valid\"], [[418, 418], \"mapped\", [419]], [[419, 419], \"valid\"], [[420, 420], \"mapped\", [421]], [[421, 421], \"valid\"], [[422, 422], \"mapped\", [640]], [[423, 423], \"mapped\", [424]], [[424, 424], \"valid\"], [[425, 425], \"mapped\", [643]], [[426, 427], \"valid\"], [[428, 428], \"mapped\", [429]], [[429, 429], \"valid\"], [[430, 430], \"mapped\", [648]], [[431, 431], \"mapped\", [432]], [[432, 432], \"valid\"], [[433, 433], \"mapped\", [650]], [[434, 434], \"mapped\", [651]], [[435, 435], \"mapped\", [436]], [[436, 436], \"valid\"], [[437, 437], \"mapped\", [438]], [[438, 438], \"valid\"], [[439, 439], \"mapped\", [658]], [[440, 440], \"mapped\", [441]], [[441, 443], \"valid\"], [[444, 444], \"mapped\", [445]], [[445, 451], \"valid\"], [[452, 454], \"mapped\", [100, 382]], [[455, 457], \"mapped\", [108, 106]], [[458, 460], \"mapped\", [110, 106]], [[461, 461], \"mapped\", [462]], [[462, 462], \"valid\"], [[463, 463], \"mapped\", [464]], [[464, 464], \"valid\"], [[465, 465], \"mapped\", [466]], [[466, 466], \"valid\"], [[467, 467], \"mapped\", [468]], [[468, 468], \"valid\"], [[469, 469], \"mapped\", [470]], [[470, 470], \"valid\"], [[471, 471], \"mapped\", [472]], [[472, 472], \"valid\"], [[473, 473], \"mapped\", [474]], [[474, 474], \"valid\"], [[475, 475], \"mapped\", [476]], [[476, 477], \"valid\"], [[478, 478], \"mapped\", [479]], [[479, 479], \"valid\"], [[480, 480], \"mapped\", [481]], [[481, 481], \"valid\"], [[482, 482], \"mapped\", [483]], [[483, 483], \"valid\"], [[484, 484], \"mapped\", [485]], [[485, 485], \"valid\"], [[486, 486], \"mapped\", [487]], [[487, 487], \"valid\"], [[488, 488], \"mapped\", [489]], [[489, 489], \"valid\"], [[490, 490], \"mapped\", [491]], [[491, 491], \"valid\"], [[492, 492], \"mapped\", [493]], [[493, 493], \"valid\"], [[494, 494], \"mapped\", [495]], [[495, 496], \"valid\"], [[497, 499], \"mapped\", [100, 122]], [[500, 500], \"mapped\", [501]], [[501, 501], \"valid\"], [[502, 502], \"mapped\", [405]], [[503, 503], \"mapped\", [447]], [[504, 504], \"mapped\", [505]], [[505, 505], \"valid\"], [[506, 506], \"mapped\", [507]], [[507, 507], \"valid\"], [[508, 508], \"mapped\", [509]], [[509, 509], \"valid\"], [[510, 510], \"mapped\", [511]], [[511, 511], \"valid\"], [[512, 512], \"mapped\", [513]], [[513, 513], \"valid\"], [[514, 514], \"mapped\", [515]], [[515, 515], \"valid\"], [[516, 516], \"mapped\", [517]], [[517, 517], \"valid\"], [[518, 518], \"mapped\", [519]], [[519, 519], \"valid\"], [[520, 520], \"mapped\", [521]], [[521, 521], \"valid\"], [[522, 522], \"mapped\", [523]], [[523, 523], \"valid\"], [[524, 524], \"mapped\", [525]], [[525, 525], \"valid\"], [[526, 526], \"mapped\", [527]], [[527, 527], \"valid\"], [[528, 528], \"mapped\", [529]], [[529, 529], \"valid\"], [[530, 530], \"mapped\", [531]], [[531, 531], \"valid\"], [[532, 532], \"mapped\", [533]], [[533, 533], \"valid\"], [[534, 534], \"mapped\", [535]], [[535, 535], \"valid\"], [[536, 536], \"mapped\", [537]], [[537, 537], \"valid\"], [[538, 538], \"mapped\", [539]], [[539, 539], \"valid\"], [[540, 540], \"mapped\", [541]], [[541, 541], \"valid\"], [[542, 542], \"mapped\", [543]], [[543, 543], \"valid\"], [[544, 544], \"mapped\", [414]], [[545, 545], \"valid\"], [[546, 546], \"mapped\", [547]], [[547, 547], \"valid\"], [[548, 548], \"mapped\", [549]], [[549, 549], \"valid\"], [[550, 550], \"mapped\", [551]], [[551, 551], \"valid\"], [[552, 552], \"mapped\", [553]], [[553, 553], \"valid\"], [[554, 554], \"mapped\", [555]], [[555, 555], \"valid\"], [[556, 556], \"mapped\", [557]], [[557, 557], \"valid\"], [[558, 558], \"mapped\", [559]], [[559, 559], \"valid\"], [[560, 560], \"mapped\", [561]], [[561, 561], \"valid\"], [[562, 562], \"mapped\", [563]], [[563, 563], \"valid\"], [[564, 566], \"valid\"], [[567, 569], \"valid\"], [[570, 570], \"mapped\", [11365]], [[571, 571], \"mapped\", [572]], [[572, 572], \"valid\"], [[573, 573], \"mapped\", [410]], [[574, 574], \"mapped\", [11366]], [[575, 576], \"valid\"], [[577, 577], \"mapped\", [578]], [[578, 578], \"valid\"], [[579, 579], \"mapped\", [384]], [[580, 580], \"mapped\", [649]], [[581, 581], \"mapped\", [652]], [[582, 582], \"mapped\", [583]], [[583, 583], \"valid\"], [[584, 584], \"mapped\", [585]], [[585, 585], \"valid\"], [[586, 586], \"mapped\", [587]], [[587, 587], \"valid\"], [[588, 588], \"mapped\", [589]], [[589, 589], \"valid\"], [[590, 590], \"mapped\", [591]], [[591, 591], \"valid\"], [[592, 680], \"valid\"], [[681, 685], \"valid\"], [[686, 687], \"valid\"], [[688, 688], \"mapped\", [104]], [[689, 689], \"mapped\", [614]], [[690, 690], \"mapped\", [106]], [[691, 691], \"mapped\", [114]], [[692, 692], \"mapped\", [633]], [[693, 693], \"mapped\", [635]], [[694, 694], \"mapped\", [641]], [[695, 695], \"mapped\", [119]], [[696, 696], \"mapped\", [121]], [[697, 705], \"valid\"], [[706, 709], \"valid\", [], \"NV8\"], [[710, 721], \"valid\"], [[722, 727], \"valid\", [], \"NV8\"], [[728, 728], \"disallowed_STD3_mapped\", [32, 774]], [[729, 729], \"disallowed_STD3_mapped\", [32, 775]], [[730, 730], \"disallowed_STD3_mapped\", [32, 778]], [[731, 731], \"disallowed_STD3_mapped\", [32, 808]], [[732, 732], \"disallowed_STD3_mapped\", [32, 771]], [[733, 733], \"disallowed_STD3_mapped\", [32, 779]], [[734, 734], \"valid\", [], \"NV8\"], [[735, 735], \"valid\", [], \"NV8\"], [[736, 736], \"mapped\", [611]], [[737, 737], \"mapped\", [108]], [[738, 738], \"mapped\", [115]], [[739, 739], \"mapped\", [120]], [[740, 740], \"mapped\", [661]], [[741, 745], \"valid\", [], \"NV8\"], [[746, 747], \"valid\", [], \"NV8\"], [[748, 748], \"valid\"], [[749, 749], \"valid\", [], \"NV8\"], [[750, 750], \"valid\"], [[751, 767], \"valid\", [], \"NV8\"], [[768, 831], \"valid\"], [[832, 832], \"mapped\", [768]], [[833, 833], \"mapped\", [769]], [[834, 834], \"valid\"], [[835, 835], \"mapped\", [787]], [[836, 836], \"mapped\", [776, 769]], [[837, 837], \"mapped\", [953]], [[838, 846], \"valid\"], [[847, 847], \"ignored\"], [[848, 855], \"valid\"], [[856, 860], \"valid\"], [[861, 863], \"valid\"], [[864, 865], \"valid\"], [[866, 866], \"valid\"], [[867, 879], \"valid\"], [[880, 880], \"mapped\", [881]], [[881, 881], \"valid\"], [[882, 882], \"mapped\", [883]], [[883, 883], \"valid\"], [[884, 884], \"mapped\", [697]], [[885, 885], \"valid\"], [[886, 886], \"mapped\", [887]], [[887, 887], \"valid\"], [[888, 889], \"disallowed\"], [[890, 890], \"disallowed_STD3_mapped\", [32, 953]], [[891, 893], \"valid\"], [[894, 894], \"disallowed_STD3_mapped\", [59]], [[895, 895], \"mapped\", [1011]], [[896, 899], \"disallowed\"], [[900, 900], \"disallowed_STD3_mapped\", [32, 769]], [[901, 901], \"disallowed_STD3_mapped\", [32, 776, 769]], [[902, 902], \"mapped\", [940]], [[903, 903], \"mapped\", [183]], [[904, 904], \"mapped\", [941]], [[905, 905], \"mapped\", [942]], [[906, 906], \"mapped\", [943]], [[907, 907], \"disallowed\"], [[908, 908], \"mapped\", [972]], [[909, 909], \"disallowed\"], [[910, 910], \"mapped\", [973]], [[911, 911], \"mapped\", [974]], [[912, 912], \"valid\"], [[913, 913], \"mapped\", [945]], [[914, 914], \"mapped\", [946]], [[915, 915], \"mapped\", [947]], [[916, 916], \"mapped\", [948]], [[917, 917], \"mapped\", [949]], [[918, 918], \"mapped\", [950]], [[919, 919], \"mapped\", [951]], [[920, 920], \"mapped\", [952]], [[921, 921], \"mapped\", [953]], [[922, 922], \"mapped\", [954]], [[923, 923], \"mapped\", [955]], [[924, 924], \"mapped\", [956]], [[925, 925], \"mapped\", [957]], [[926, 926], \"mapped\", [958]], [[927, 927], \"mapped\", [959]], [[928, 928], \"mapped\", [960]], [[929, 929], \"mapped\", [961]], [[930, 930], \"disallowed\"], [[931, 931], \"mapped\", [963]], [[932, 932], \"mapped\", [964]], [[933, 933], \"mapped\", [965]], [[934, 934], \"mapped\", [966]], [[935, 935], \"mapped\", [967]], [[936, 936], \"mapped\", [968]], [[937, 937], \"mapped\", [969]], [[938, 938], \"mapped\", [970]], [[939, 939], \"mapped\", [971]], [[940, 961], \"valid\"], [[962, 962], \"deviation\", [963]], [[963, 974], \"valid\"], [[975, 975], \"mapped\", [983]], [[976, 976], \"mapped\", [946]], [[977, 977], \"mapped\", [952]], [[978, 978], \"mapped\", [965]], [[979, 979], \"mapped\", [973]], [[980, 980], \"mapped\", [971]], [[981, 981], \"mapped\", [966]], [[982, 982], \"mapped\", [960]], [[983, 983], \"valid\"], [[984, 984], \"mapped\", [985]], [[985, 985], \"valid\"], [[986, 986], \"mapped\", [987]], [[987, 987], \"valid\"], [[988, 988], \"mapped\", [989]], [[989, 989], \"valid\"], [[990, 990], \"mapped\", [991]], [[991, 991], \"valid\"], [[992, 992], \"mapped\", [993]], [[993, 993], \"valid\"], [[994, 994], \"mapped\", [995]], [[995, 995], \"valid\"], [[996, 996], \"mapped\", [997]], [[997, 997], \"valid\"], [[998, 998], \"mapped\", [999]], [[999, 999], \"valid\"], [[1000, 1000], \"mapped\", [1001]], [[1001, 1001], \"valid\"], [[1002, 1002], \"mapped\", [1003]], [[1003, 1003], \"valid\"], [[1004, 1004], \"mapped\", [1005]], [[1005, 1005], \"valid\"], [[1006, 1006], \"mapped\", [1007]], [[1007, 1007], \"valid\"], [[1008, 1008], \"mapped\", [954]], [[1009, 1009], \"mapped\", [961]], [[1010, 1010], \"mapped\", [963]], [[1011, 1011], \"valid\"], [[1012, 1012], \"mapped\", [952]], [[1013, 1013], \"mapped\", [949]], [[1014, 1014], \"valid\", [], \"NV8\"], [[1015, 1015], \"mapped\", [1016]], [[1016, 1016], \"valid\"], [[1017, 1017], \"mapped\", [963]], [[1018, 1018], \"mapped\", [1019]], [[1019, 1019], \"valid\"], [[1020, 1020], \"valid\"], [[1021, 1021], \"mapped\", [891]], [[1022, 1022], \"mapped\", [892]], [[1023, 1023], \"mapped\", [893]], [[1024, 1024], \"mapped\", [1104]], [[1025, 1025], \"mapped\", [1105]], [[1026, 1026], \"mapped\", [1106]], [[1027, 1027], \"mapped\", [1107]], [[1028, 1028], \"mapped\", [1108]], [[1029, 1029], \"mapped\", [1109]], [[1030, 1030], \"mapped\", [1110]], [[1031, 1031], \"mapped\", [1111]], [[1032, 1032], \"mapped\", [1112]], [[1033, 1033], \"mapped\", [1113]], [[1034, 1034], \"mapped\", [1114]], [[1035, 1035], \"mapped\", [1115]], [[1036, 1036], \"mapped\", [1116]], [[1037, 1037], \"mapped\", [1117]], [[1038, 1038], \"mapped\", [1118]], [[1039, 1039], \"mapped\", [1119]], [[1040, 1040], \"mapped\", [1072]], [[1041, 1041], \"mapped\", [1073]], [[1042, 1042], \"mapped\", [1074]], [[1043, 1043], \"mapped\", [1075]], [[1044, 1044], \"mapped\", [1076]], [[1045, 1045], \"mapped\", [1077]], [[1046, 1046], \"mapped\", [1078]], [[1047, 1047], \"mapped\", [1079]], [[1048, 1048], \"mapped\", [1080]], [[1049, 1049], \"mapped\", [1081]], [[1050, 1050], \"mapped\", [1082]], [[1051, 1051], \"mapped\", [1083]], [[1052, 1052], \"mapped\", [1084]], [[1053, 1053], \"mapped\", [1085]], [[1054, 1054], \"mapped\", [1086]], [[1055, 1055], \"mapped\", [1087]], [[1056, 1056], \"mapped\", [1088]], [[1057, 1057], \"mapped\", [1089]], [[1058, 1058], \"mapped\", [1090]], [[1059, 1059], \"mapped\", [1091]], [[1060, 1060], \"mapped\", [1092]], [[1061, 1061], \"mapped\", [1093]], [[1062, 1062], \"mapped\", [1094]], [[1063, 1063], \"mapped\", [1095]], [[1064, 1064], \"mapped\", [1096]], [[1065, 1065], \"mapped\", [1097]], [[1066, 1066], \"mapped\", [1098]], [[1067, 1067], \"mapped\", [1099]], [[1068, 1068], \"mapped\", [1100]], [[1069, 1069], \"mapped\", [1101]], [[1070, 1070], \"mapped\", [1102]], [[1071, 1071], \"mapped\", [1103]], [[1072, 1103], \"valid\"], [[1104, 1104], \"valid\"], [[1105, 1116], \"valid\"], [[1117, 1117], \"valid\"], [[1118, 1119], \"valid\"], [[1120, 1120], \"mapped\", [1121]], [[1121, 1121], \"valid\"], [[1122, 1122], \"mapped\", [1123]], [[1123, 1123], \"valid\"], [[1124, 1124], \"mapped\", [1125]], [[1125, 1125], \"valid\"], [[1126, 1126], \"mapped\", [1127]], [[1127, 1127], \"valid\"], [[1128, 1128], \"mapped\", [1129]], [[1129, 1129], \"valid\"], [[1130, 1130], \"mapped\", [1131]], [[1131, 1131], \"valid\"], [[1132, 1132], \"mapped\", [1133]], [[1133, 1133], \"valid\"], [[1134, 1134], \"mapped\", [1135]], [[1135, 1135], \"valid\"], [[1136, 1136], \"mapped\", [1137]], [[1137, 1137], \"valid\"], [[1138, 1138], \"mapped\", [1139]], [[1139, 1139], \"valid\"], [[1140, 1140], \"mapped\", [1141]], [[1141, 1141], \"valid\"], [[1142, 1142], \"mapped\", [1143]], [[1143, 1143], \"valid\"], [[1144, 1144], \"mapped\", [1145]], [[1145, 1145], \"valid\"], [[1146, 1146], \"mapped\", [1147]], [[1147, 1147], \"valid\"], [[1148, 1148], \"mapped\", [1149]], [[1149, 1149], \"valid\"], [[1150, 1150], \"mapped\", [1151]], [[1151, 1151], \"valid\"], [[1152, 1152], \"mapped\", [1153]], [[1153, 1153], \"valid\"], [[1154, 1154], \"valid\", [], \"NV8\"], [[1155, 1158], \"valid\"], [[1159, 1159], \"valid\"], [[1160, 1161], \"valid\", [], \"NV8\"], [[1162, 1162], \"mapped\", [1163]], [[1163, 1163], \"valid\"], [[1164, 1164], \"mapped\", [1165]], [[1165, 1165], \"valid\"], [[1166, 1166], \"mapped\", [1167]], [[1167, 1167], \"valid\"], [[1168, 1168], \"mapped\", [1169]], [[1169, 1169], \"valid\"], [[1170, 1170], \"mapped\", [1171]], [[1171, 1171], \"valid\"], [[1172, 1172], \"mapped\", [1173]], [[1173, 1173], \"valid\"], [[1174, 1174], \"mapped\", [1175]], [[1175, 1175], \"valid\"], [[1176, 1176], \"mapped\", [1177]], [[1177, 1177], \"valid\"], [[1178, 1178], \"mapped\", [1179]], [[1179, 1179], \"valid\"], [[1180, 1180], \"mapped\", [1181]], [[1181, 1181], \"valid\"], [[1182, 1182], \"mapped\", [1183]], [[1183, 1183], \"valid\"], [[1184, 1184], \"mapped\", [1185]], [[1185, 1185], \"valid\"], [[1186, 1186], \"mapped\", [1187]], [[1187, 1187], \"valid\"], [[1188, 1188], \"mapped\", [1189]], [[1189, 1189], \"valid\"], [[1190, 1190], \"mapped\", [1191]], [[1191, 1191], \"valid\"], [[1192, 1192], \"mapped\", [1193]], [[1193, 1193], \"valid\"], [[1194, 1194], \"mapped\", [1195]], [[1195, 1195], \"valid\"], [[1196, 1196], \"mapped\", [1197]], [[1197, 1197], \"valid\"], [[1198, 1198], \"mapped\", [1199]], [[1199, 1199], \"valid\"], [[1200, 1200], \"mapped\", [1201]], [[1201, 1201], \"valid\"], [[1202, 1202], \"mapped\", [1203]], [[1203, 1203], \"valid\"], [[1204, 1204], \"mapped\", [1205]], [[1205, 1205], \"valid\"], [[1206, 1206], \"mapped\", [1207]], [[1207, 1207], \"valid\"], [[1208, 1208], \"mapped\", [1209]], [[1209, 1209], \"valid\"], [[1210, 1210], \"mapped\", [1211]], [[1211, 1211], \"valid\"], [[1212, 1212], \"mapped\", [1213]], [[1213, 1213], \"valid\"], [[1214, 1214], \"mapped\", [1215]], [[1215, 1215], \"valid\"], [[1216, 1216], \"disallowed\"], [[1217, 1217], \"mapped\", [1218]], [[1218, 1218], \"valid\"], [[1219, 1219], \"mapped\", [1220]], [[1220, 1220], \"valid\"], [[1221, 1221], \"mapped\", [1222]], [[1222, 1222], \"valid\"], [[1223, 1223], \"mapped\", [1224]], [[1224, 1224], \"valid\"], [[1225, 1225], \"mapped\", [1226]], [[1226, 1226], \"valid\"], [[1227, 1227], \"mapped\", [1228]], [[1228, 1228], \"valid\"], [[1229, 1229], \"mapped\", [1230]], [[1230, 1230], \"valid\"], [[1231, 1231], \"valid\"], [[1232, 1232], \"mapped\", [1233]], [[1233, 1233], \"valid\"], [[1234, 1234], \"mapped\", [1235]], [[1235, 1235], \"valid\"], [[1236, 1236], \"mapped\", [1237]], [[1237, 1237], \"valid\"], [[1238, 1238], \"mapped\", [1239]], [[1239, 1239], \"valid\"], [[1240, 1240], \"mapped\", [1241]], [[1241, 1241], \"valid\"], [[1242, 1242], \"mapped\", [1243]], [[1243, 1243], \"valid\"], [[1244, 1244], \"mapped\", [1245]], [[1245, 1245], \"valid\"], [[1246, 1246], \"mapped\", [1247]], [[1247, 1247], \"valid\"], [[1248, 1248], \"mapped\", [1249]], [[1249, 1249], \"valid\"], [[1250, 1250], \"mapped\", [1251]], [[1251, 1251], \"valid\"], [[1252, 1252], \"mapped\", [1253]], [[1253, 1253], \"valid\"], [[1254, 1254], \"mapped\", [1255]], [[1255, 1255], \"valid\"], [[1256, 1256], \"mapped\", [1257]], [[1257, 1257], \"valid\"], [[1258, 1258], \"mapped\", [1259]], [[1259, 1259], \"valid\"], [[1260, 1260], \"mapped\", [1261]], [[1261, 1261], \"valid\"], [[1262, 1262], \"mapped\", [1263]], [[1263, 1263], \"valid\"], [[1264, 1264], \"mapped\", [1265]], [[1265, 1265], \"valid\"], [[1266, 1266], \"mapped\", [1267]], [[1267, 1267], \"valid\"], [[1268, 1268], \"mapped\", [1269]], [[1269, 1269], \"valid\"], [[1270, 1270], \"mapped\", [1271]], [[1271, 1271], \"valid\"], [[1272, 1272], \"mapped\", [1273]], [[1273, 1273], \"valid\"], [[1274, 1274], \"mapped\", [1275]], [[1275, 1275], \"valid\"], [[1276, 1276], \"mapped\", [1277]], [[1277, 1277], \"valid\"], [[1278, 1278], \"mapped\", [1279]], [[1279, 1279], \"valid\"], [[1280, 1280], \"mapped\", [1281]], [[1281, 1281], \"valid\"], [[1282, 1282], \"mapped\", [1283]], [[1283, 1283], \"valid\"], [[1284, 1284], \"mapped\", [1285]], [[1285, 1285], \"valid\"], [[1286, 1286], \"mapped\", [1287]], [[1287, 1287], \"valid\"], [[1288, 1288], \"mapped\", [1289]], [[1289, 1289], \"valid\"], [[1290, 1290], \"mapped\", [1291]], [[1291, 1291], \"valid\"], [[1292, 1292], \"mapped\", [1293]], [[1293, 1293], \"valid\"], [[1294, 1294], \"mapped\", [1295]], [[1295, 1295], \"valid\"], [[1296, 1296], \"mapped\", [1297]], [[1297, 1297], \"valid\"], [[1298, 1298], \"mapped\", [1299]], [[1299, 1299], \"valid\"], [[1300, 1300], \"mapped\", [1301]], [[1301, 1301], \"valid\"], [[1302, 1302], \"mapped\", [1303]], [[1303, 1303], \"valid\"], [[1304, 1304], \"mapped\", [1305]], [[1305, 1305], \"valid\"], [[1306, 1306], \"mapped\", [1307]], [[1307, 1307], \"valid\"], [[1308, 1308], \"mapped\", [1309]], [[1309, 1309], \"valid\"], [[1310, 1310], \"mapped\", [1311]], [[1311, 1311], \"valid\"], [[1312, 1312], \"mapped\", [1313]], [[1313, 1313], \"valid\"], [[1314, 1314], \"mapped\", [1315]], [[1315, 1315], \"valid\"], [[1316, 1316], \"mapped\", [1317]], [[1317, 1317], \"valid\"], [[1318, 1318], \"mapped\", [1319]], [[1319, 1319], \"valid\"], [[1320, 1320], \"mapped\", [1321]], [[1321, 1321], \"valid\"], [[1322, 1322], \"mapped\", [1323]], [[1323, 1323], \"valid\"], [[1324, 1324], \"mapped\", [1325]], [[1325, 1325], \"valid\"], [[1326, 1326], \"mapped\", [1327]], [[1327, 1327], \"valid\"], [[1328, 1328], \"disallowed\"], [[1329, 1329], \"mapped\", [1377]], [[1330, 1330], \"mapped\", [1378]], [[1331, 1331], \"mapped\", [1379]], [[1332, 1332], \"mapped\", [1380]], [[1333, 1333], \"mapped\", [1381]], [[1334, 1334], \"mapped\", [1382]], [[1335, 1335], \"mapped\", [1383]], [[1336, 1336], \"mapped\", [1384]], [[1337, 1337], \"mapped\", [1385]], [[1338, 1338], \"mapped\", [1386]], [[1339, 1339], \"mapped\", [1387]], [[1340, 1340], \"mapped\", [1388]], [[1341, 1341], \"mapped\", [1389]], [[1342, 1342], \"mapped\", [1390]], [[1343, 1343], \"mapped\", [1391]], [[1344, 1344], \"mapped\", [1392]], [[1345, 1345], \"mapped\", [1393]], [[1346, 1346], \"mapped\", [1394]], [[1347, 1347], \"mapped\", [1395]], [[1348, 1348], \"mapped\", [1396]], [[1349, 1349], \"mapped\", [1397]], [[1350, 1350], \"mapped\", [1398]], [[1351, 1351], \"mapped\", [1399]], [[1352, 1352], \"mapped\", [1400]], [[1353, 1353], \"mapped\", [1401]], [[1354, 1354], \"mapped\", [1402]], [[1355, 1355], \"mapped\", [1403]], [[1356, 1356], \"mapped\", [1404]], [[1357, 1357], \"mapped\", [1405]], [[1358, 1358], \"mapped\", [1406]], [[1359, 1359], \"mapped\", [1407]], [[1360, 1360], \"mapped\", [1408]], [[1361, 1361], \"mapped\", [1409]], [[1362, 1362], \"mapped\", [1410]], [[1363, 1363], \"mapped\", [1411]], [[1364, 1364], \"mapped\", [1412]], [[1365, 1365], \"mapped\", [1413]], [[1366, 1366], \"mapped\", [1414]], [[1367, 1368], \"disallowed\"], [[1369, 1369], \"valid\"], [[1370, 1375], \"valid\", [], \"NV8\"], [[1376, 1376], \"disallowed\"], [[1377, 1414], \"valid\"], [[1415, 1415], \"mapped\", [1381, 1410]], [[1416, 1416], \"disallowed\"], [[1417, 1417], \"valid\", [], \"NV8\"], [[1418, 1418], \"valid\", [], \"NV8\"], [[1419, 1420], \"disallowed\"], [[1421, 1422], \"valid\", [], \"NV8\"], [[1423, 1423], \"valid\", [], \"NV8\"], [[1424, 1424], \"disallowed\"], [[1425, 1441], \"valid\"], [[1442, 1442], \"valid\"], [[1443, 1455], \"valid\"], [[1456, 1465], \"valid\"], [[1466, 1466], \"valid\"], [[1467, 1469], \"valid\"], [[1470, 1470], \"valid\", [], \"NV8\"], [[1471, 1471], \"valid\"], [[1472, 1472], \"valid\", [], \"NV8\"], [[1473, 1474], \"valid\"], [[1475, 1475], \"valid\", [], \"NV8\"], [[1476, 1476], \"valid\"], [[1477, 1477], \"valid\"], [[1478, 1478], \"valid\", [], \"NV8\"], [[1479, 1479], \"valid\"], [[1480, 1487], \"disallowed\"], [[1488, 1514], \"valid\"], [[1515, 1519], \"disallowed\"], [[1520, 1524], \"valid\"], [[1525, 1535], \"disallowed\"], [[1536, 1539], \"disallowed\"], [[1540, 1540], \"disallowed\"], [[1541, 1541], \"disallowed\"], [[1542, 1546], \"valid\", [], \"NV8\"], [[1547, 1547], \"valid\", [], \"NV8\"], [[1548, 1548], \"valid\", [], \"NV8\"], [[1549, 1551], \"valid\", [], \"NV8\"], [[1552, 1557], \"valid\"], [[1558, 1562], \"valid\"], [[1563, 1563], \"valid\", [], \"NV8\"], [[1564, 1564], \"disallowed\"], [[1565, 1565], \"disallowed\"], [[1566, 1566], \"valid\", [], \"NV8\"], [[1567, 1567], \"valid\", [], \"NV8\"], [[1568, 1568], \"valid\"], [[1569, 1594], \"valid\"], [[1595, 1599], \"valid\"], [[1600, 1600], \"valid\", [], \"NV8\"], [[1601, 1618], \"valid\"], [[1619, 1621], \"valid\"], [[1622, 1624], \"valid\"], [[1625, 1630], \"valid\"], [[1631, 1631], \"valid\"], [[1632, 1641], \"valid\"], [[1642, 1645], \"valid\", [], \"NV8\"], [[1646, 1647], \"valid\"], [[1648, 1652], \"valid\"], [[1653, 1653], \"mapped\", [1575, 1652]], [[1654, 1654], \"mapped\", [1608, 1652]], [[1655, 1655], \"mapped\", [1735, 1652]], [[1656, 1656], \"mapped\", [1610, 1652]], [[1657, 1719], \"valid\"], [[1720, 1721], \"valid\"], [[1722, 1726], \"valid\"], [[1727, 1727], \"valid\"], [[1728, 1742], \"valid\"], [[1743, 1743], \"valid\"], [[1744, 1747], \"valid\"], [[1748, 1748], \"valid\", [], \"NV8\"], [[1749, 1756], \"valid\"], [[1757, 1757], \"disallowed\"], [[1758, 1758], \"valid\", [], \"NV8\"], [[1759, 1768], \"valid\"], [[1769, 1769], \"valid\", [], \"NV8\"], [[1770, 1773], \"valid\"], [[1774, 1775], \"valid\"], [[1776, 1785], \"valid\"], [[1786, 1790], \"valid\"], [[1791, 1791], \"valid\"], [[1792, 1805], \"valid\", [], \"NV8\"], [[1806, 1806], \"disallowed\"], [[1807, 1807], \"disallowed\"], [[1808, 1836], \"valid\"], [[1837, 1839], \"valid\"], [[1840, 1866], \"valid\"], [[1867, 1868], \"disallowed\"], [[1869, 1871], \"valid\"], [[1872, 1901], \"valid\"], [[1902, 1919], \"valid\"], [[1920, 1968], \"valid\"], [[1969, 1969], \"valid\"], [[1970, 1983], \"disallowed\"], [[1984, 2037], \"valid\"], [[2038, 2042], \"valid\", [], \"NV8\"], [[2043, 2047], \"disallowed\"], [[2048, 2093], \"valid\"], [[2094, 2095], \"disallowed\"], [[2096, 2110], \"valid\", [], \"NV8\"], [[2111, 2111], \"disallowed\"], [[2112, 2139], \"valid\"], [[2140, 2141], \"disallowed\"], [[2142, 2142], \"valid\", [], \"NV8\"], [[2143, 2207], \"disallowed\"], [[2208, 2208], \"valid\"], [[2209, 2209], \"valid\"], [[2210, 2220], \"valid\"], [[2221, 2226], \"valid\"], [[2227, 2228], \"valid\"], [[2229, 2274], \"disallowed\"], [[2275, 2275], \"valid\"], [[2276, 2302], \"valid\"], [[2303, 2303], \"valid\"], [[2304, 2304], \"valid\"], [[2305, 2307], \"valid\"], [[2308, 2308], \"valid\"], [[2309, 2361], \"valid\"], [[2362, 2363], \"valid\"], [[2364, 2381], \"valid\"], [[2382, 2382], \"valid\"], [[2383, 2383], \"valid\"], [[2384, 2388], \"valid\"], [[2389, 2389], \"valid\"], [[2390, 2391], \"valid\"], [[2392, 2392], \"mapped\", [2325, 2364]], [[2393, 2393], \"mapped\", [2326, 2364]], [[2394, 2394], \"mapped\", [2327, 2364]], [[2395, 2395], \"mapped\", [2332, 2364]], [[2396, 2396], \"mapped\", [2337, 2364]], [[2397, 2397], \"mapped\", [2338, 2364]], [[2398, 2398], \"mapped\", [2347, 2364]], [[2399, 2399], \"mapped\", [2351, 2364]], [[2400, 2403], \"valid\"], [[2404, 2405], \"valid\", [], \"NV8\"], [[2406, 2415], \"valid\"], [[2416, 2416], \"valid\", [], \"NV8\"], [[2417, 2418], \"valid\"], [[2419, 2423], \"valid\"], [[2424, 2424], \"valid\"], [[2425, 2426], \"valid\"], [[2427, 2428], \"valid\"], [[2429, 2429], \"valid\"], [[2430, 2431], \"valid\"], [[2432, 2432], \"valid\"], [[2433, 2435], \"valid\"], [[2436, 2436], \"disallowed\"], [[2437, 2444], \"valid\"], [[2445, 2446], \"disallowed\"], [[2447, 2448], \"valid\"], [[2449, 2450], \"disallowed\"], [[2451, 2472], \"valid\"], [[2473, 2473], \"disallowed\"], [[2474, 2480], \"valid\"], [[2481, 2481], \"disallowed\"], [[2482, 2482], \"valid\"], [[2483, 2485], \"disallowed\"], [[2486, 2489], \"valid\"], [[2490, 2491], \"disallowed\"], [[2492, 2492], \"valid\"], [[2493, 2493], \"valid\"], [[2494, 2500], \"valid\"], [[2501, 2502], \"disallowed\"], [[2503, 2504], \"valid\"], [[2505, 2506], \"disallowed\"], [[2507, 2509], \"valid\"], [[2510, 2510], \"valid\"], [[2511, 2518], \"disallowed\"], [[2519, 2519], \"valid\"], [[2520, 2523], \"disallowed\"], [[2524, 2524], \"mapped\", [2465, 2492]], [[2525, 2525], \"mapped\", [2466, 2492]], [[2526, 2526], \"disallowed\"], [[2527, 2527], \"mapped\", [2479, 2492]], [[2528, 2531], \"valid\"], [[2532, 2533], \"disallowed\"], [[2534, 2545], \"valid\"], [[2546, 2554], \"valid\", [], \"NV8\"], [[2555, 2555], \"valid\", [], \"NV8\"], [[2556, 2560], \"disallowed\"], [[2561, 2561], \"valid\"], [[2562, 2562], \"valid\"], [[2563, 2563], \"valid\"], [[2564, 2564], \"disallowed\"], [[2565, 2570], \"valid\"], [[2571, 2574], \"disallowed\"], [[2575, 2576], \"valid\"], [[2577, 2578], \"disallowed\"], [[2579, 2600], \"valid\"], [[2601, 2601], \"disallowed\"], [[2602, 2608], \"valid\"], [[2609, 2609], \"disallowed\"], [[2610, 2610], \"valid\"], [[2611, 2611], \"mapped\", [2610, 2620]], [[2612, 2612], \"disallowed\"], [[2613, 2613], \"valid\"], [[2614, 2614], \"mapped\", [2616, 2620]], [[2615, 2615], \"disallowed\"], [[2616, 2617], \"valid\"], [[2618, 2619], \"disallowed\"], [[2620, 2620], \"valid\"], [[2621, 2621], \"disallowed\"], [[2622, 2626], \"valid\"], [[2627, 2630], \"disallowed\"], [[2631, 2632], \"valid\"], [[2633, 2634], \"disallowed\"], [[2635, 2637], \"valid\"], [[2638, 2640], \"disallowed\"], [[2641, 2641], \"valid\"], [[2642, 2648], \"disallowed\"], [[2649, 2649], \"mapped\", [2582, 2620]], [[2650, 2650], \"mapped\", [2583, 2620]], [[2651, 2651], \"mapped\", [2588, 2620]], [[2652, 2652], \"valid\"], [[2653, 2653], \"disallowed\"], [[2654, 2654], \"mapped\", [2603, 2620]], [[2655, 2661], \"disallowed\"], [[2662, 2676], \"valid\"], [[2677, 2677], \"valid\"], [[2678, 2688], \"disallowed\"], [[2689, 2691], \"valid\"], [[2692, 2692], \"disallowed\"], [[2693, 2699], \"valid\"], [[2700, 2700], \"valid\"], [[2701, 2701], \"valid\"], [[2702, 2702], \"disallowed\"], [[2703, 2705], \"valid\"], [[2706, 2706], \"disallowed\"], [[2707, 2728], \"valid\"], [[2729, 2729], \"disallowed\"], [[2730, 2736], \"valid\"], [[2737, 2737], \"disallowed\"], [[2738, 2739], \"valid\"], [[2740, 2740], \"disallowed\"], [[2741, 2745], \"valid\"], [[2746, 2747], \"disallowed\"], [[2748, 2757], \"valid\"], [[2758, 2758], \"disallowed\"], [[2759, 2761], \"valid\"], [[2762, 2762], \"disallowed\"], [[2763, 2765], \"valid\"], [[2766, 2767], \"disallowed\"], [[2768, 2768], \"valid\"], [[2769, 2783], \"disallowed\"], [[2784, 2784], \"valid\"], [[2785, 2787], \"valid\"], [[2788, 2789], \"disallowed\"], [[2790, 2799], \"valid\"], [[2800, 2800], \"valid\", [], \"NV8\"], [[2801, 2801], \"valid\", [], \"NV8\"], [[2802, 2808], \"disallowed\"], [[2809, 2809], \"valid\"], [[2810, 2816], \"disallowed\"], [[2817, 2819], \"valid\"], [[2820, 2820], \"disallowed\"], [[2821, 2828], \"valid\"], [[2829, 2830], \"disallowed\"], [[2831, 2832], \"valid\"], [[2833, 2834], \"disallowed\"], [[2835, 2856], \"valid\"], [[2857, 2857], \"disallowed\"], [[2858, 2864], \"valid\"], [[2865, 2865], \"disallowed\"], [[2866, 2867], \"valid\"], [[2868, 2868], \"disallowed\"], [[2869, 2869], \"valid\"], [[2870, 2873], \"valid\"], [[2874, 2875], \"disallowed\"], [[2876, 2883], \"valid\"], [[2884, 2884], \"valid\"], [[2885, 2886], \"disallowed\"], [[2887, 2888], \"valid\"], [[2889, 2890], \"disallowed\"], [[2891, 2893], \"valid\"], [[2894, 2901], \"disallowed\"], [[2902, 2903], \"valid\"], [[2904, 2907], \"disallowed\"], [[2908, 2908], \"mapped\", [2849, 2876]], [[2909, 2909], \"mapped\", [2850, 2876]], [[2910, 2910], \"disallowed\"], [[2911, 2913], \"valid\"], [[2914, 2915], \"valid\"], [[2916, 2917], \"disallowed\"], [[2918, 2927], \"valid\"], [[2928, 2928], \"valid\", [], \"NV8\"], [[2929, 2929], \"valid\"], [[2930, 2935], \"valid\", [], \"NV8\"], [[2936, 2945], \"disallowed\"], [[2946, 2947], \"valid\"], [[2948, 2948], \"disallowed\"], [[2949, 2954], \"valid\"], [[2955, 2957], \"disallowed\"], [[2958, 2960], \"valid\"], [[2961, 2961], \"disallowed\"], [[2962, 2965], \"valid\"], [[2966, 2968], \"disallowed\"], [[2969, 2970], \"valid\"], [[2971, 2971], \"disallowed\"], [[2972, 2972], \"valid\"], [[2973, 2973], \"disallowed\"], [[2974, 2975], \"valid\"], [[2976, 2978], \"disallowed\"], [[2979, 2980], \"valid\"], [[2981, 2983], \"disallowed\"], [[2984, 2986], \"valid\"], [[2987, 2989], \"disallowed\"], [[2990, 2997], \"valid\"], [[2998, 2998], \"valid\"], [[2999, 3001], \"valid\"], [[3002, 3005], \"disallowed\"], [[3006, 3010], \"valid\"], [[3011, 3013], \"disallowed\"], [[3014, 3016], \"valid\"], [[3017, 3017], \"disallowed\"], [[3018, 3021], \"valid\"], [[3022, 3023], \"disallowed\"], [[3024, 3024], \"valid\"], [[3025, 3030], \"disallowed\"], [[3031, 3031], \"valid\"], [[3032, 3045], \"disallowed\"], [[3046, 3046], \"valid\"], [[3047, 3055], \"valid\"], [[3056, 3058], \"valid\", [], \"NV8\"], [[3059, 3066], \"valid\", [], \"NV8\"], [[3067, 3071], \"disallowed\"], [[3072, 3072], \"valid\"], [[3073, 3075], \"valid\"], [[3076, 3076], \"disallowed\"], [[3077, 3084], \"valid\"], [[3085, 3085], \"disallowed\"], [[3086, 3088], \"valid\"], [[3089, 3089], \"disallowed\"], [[3090, 3112], \"valid\"], [[3113, 3113], \"disallowed\"], [[3114, 3123], \"valid\"], [[3124, 3124], \"valid\"], [[3125, 3129], \"valid\"], [[3130, 3132], \"disallowed\"], [[3133, 3133], \"valid\"], [[3134, 3140], \"valid\"], [[3141, 3141], \"disallowed\"], [[3142, 3144], \"valid\"], [[3145, 3145], \"disallowed\"], [[3146, 3149], \"valid\"], [[3150, 3156], \"disallowed\"], [[3157, 3158], \"valid\"], [[3159, 3159], \"disallowed\"], [[3160, 3161], \"valid\"], [[3162, 3162], \"valid\"], [[3163, 3167], \"disallowed\"], [[3168, 3169], \"valid\"], [[3170, 3171], \"valid\"], [[3172, 3173], \"disallowed\"], [[3174, 3183], \"valid\"], [[3184, 3191], \"disallowed\"], [[3192, 3199], \"valid\", [], \"NV8\"], [[3200, 3200], \"disallowed\"], [[3201, 3201], \"valid\"], [[3202, 3203], \"valid\"], [[3204, 3204], \"disallowed\"], [[3205, 3212], \"valid\"], [[3213, 3213], \"disallowed\"], [[3214, 3216], \"valid\"], [[3217, 3217], \"disallowed\"], [[3218, 3240], \"valid\"], [[3241, 3241], \"disallowed\"], [[3242, 3251], \"valid\"], [[3252, 3252], \"disallowed\"], [[3253, 3257], \"valid\"], [[3258, 3259], \"disallowed\"], [[3260, 3261], \"valid\"], [[3262, 3268], \"valid\"], [[3269, 3269], \"disallowed\"], [[3270, 3272], \"valid\"], [[3273, 3273], \"disallowed\"], [[3274, 3277], \"valid\"], [[3278, 3284], \"disallowed\"], [[3285, 3286], \"valid\"], [[3287, 3293], \"disallowed\"], [[3294, 3294], \"valid\"], [[3295, 3295], \"disallowed\"], [[3296, 3297], \"valid\"], [[3298, 3299], \"valid\"], [[3300, 3301], \"disallowed\"], [[3302, 3311], \"valid\"], [[3312, 3312], \"disallowed\"], [[3313, 3314], \"valid\"], [[3315, 3328], \"disallowed\"], [[3329, 3329], \"valid\"], [[3330, 3331], \"valid\"], [[3332, 3332], \"disallowed\"], [[3333, 3340], \"valid\"], [[3341, 3341], \"disallowed\"], [[3342, 3344], \"valid\"], [[3345, 3345], \"disallowed\"], [[3346, 3368], \"valid\"], [[3369, 3369], \"valid\"], [[3370, 3385], \"valid\"], [[3386, 3386], \"valid\"], [[3387, 3388], \"disallowed\"], [[3389, 3389], \"valid\"], [[3390, 3395], \"valid\"], [[3396, 3396], \"valid\"], [[3397, 3397], \"disallowed\"], [[3398, 3400], \"valid\"], [[3401, 3401], \"disallowed\"], [[3402, 3405], \"valid\"], [[3406, 3406], \"valid\"], [[3407, 3414], \"disallowed\"], [[3415, 3415], \"valid\"], [[3416, 3422], \"disallowed\"], [[3423, 3423], \"valid\"], [[3424, 3425], \"valid\"], [[3426, 3427], \"valid\"], [[3428, 3429], \"disallowed\"], [[3430, 3439], \"valid\"], [[3440, 3445], \"valid\", [], \"NV8\"], [[3446, 3448], \"disallowed\"], [[3449, 3449], \"valid\", [], \"NV8\"], [[3450, 3455], \"valid\"], [[3456, 3457], \"disallowed\"], [[3458, 3459], \"valid\"], [[3460, 3460], \"disallowed\"], [[3461, 3478], \"valid\"], [[3479, 3481], \"disallowed\"], [[3482, 3505], \"valid\"], [[3506, 3506], \"disallowed\"], [[3507, 3515], \"valid\"], [[3516, 3516], \"disallowed\"], [[3517, 3517], \"valid\"], [[3518, 3519], \"disallowed\"], [[3520, 3526], \"valid\"], [[3527, 3529], \"disallowed\"], [[3530, 3530], \"valid\"], [[3531, 3534], \"disallowed\"], [[3535, 3540], \"valid\"], [[3541, 3541], \"disallowed\"], [[3542, 3542], \"valid\"], [[3543, 3543], \"disallowed\"], [[3544, 3551], \"valid\"], [[3552, 3557], \"disallowed\"], [[3558, 3567], \"valid\"], [[3568, 3569], \"disallowed\"], [[3570, 3571], \"valid\"], [[3572, 3572], \"valid\", [], \"NV8\"], [[3573, 3584], \"disallowed\"], [[3585, 3634], \"valid\"], [[3635, 3635], \"mapped\", [3661, 3634]], [[3636, 3642], \"valid\"], [[3643, 3646], \"disallowed\"], [[3647, 3647], \"valid\", [], \"NV8\"], [[3648, 3662], \"valid\"], [[3663, 3663], \"valid\", [], \"NV8\"], [[3664, 3673], \"valid\"], [[3674, 3675], \"valid\", [], \"NV8\"], [[3676, 3712], \"disallowed\"], [[3713, 3714], \"valid\"], [[3715, 3715], \"disallowed\"], [[3716, 3716], \"valid\"], [[3717, 3718], \"disallowed\"], [[3719, 3720], \"valid\"], [[3721, 3721], \"disallowed\"], [[3722, 3722], \"valid\"], [[3723, 3724], \"disallowed\"], [[3725, 3725], \"valid\"], [[3726, 3731], \"disallowed\"], [[3732, 3735], \"valid\"], [[3736, 3736], \"disallowed\"], [[3737, 3743], \"valid\"], [[3744, 3744], \"disallowed\"], [[3745, 3747], \"valid\"], [[3748, 3748], \"disallowed\"], [[3749, 3749], \"valid\"], [[3750, 3750], \"disallowed\"], [[3751, 3751], \"valid\"], [[3752, 3753], \"disallowed\"], [[3754, 3755], \"valid\"], [[3756, 3756], \"disallowed\"], [[3757, 3762], \"valid\"], [[3763, 3763], \"mapped\", [3789, 3762]], [[3764, 3769], \"valid\"], [[3770, 3770], \"disallowed\"], [[3771, 3773], \"valid\"], [[3774, 3775], \"disallowed\"], [[3776, 3780], \"valid\"], [[3781, 3781], \"disallowed\"], [[3782, 3782], \"valid\"], [[3783, 3783], \"disallowed\"], [[3784, 3789], \"valid\"], [[3790, 3791], \"disallowed\"], [[3792, 3801], \"valid\"], [[3802, 3803], \"disallowed\"], [[3804, 3804], \"mapped\", [3755, 3737]], [[3805, 3805], \"mapped\", [3755, 3745]], [[3806, 3807], \"valid\"], [[3808, 3839], \"disallowed\"], [[3840, 3840], \"valid\"], [[3841, 3850], \"valid\", [], \"NV8\"], [[3851, 3851], \"valid\"], [[3852, 3852], \"mapped\", [3851]], [[3853, 3863], \"valid\", [], \"NV8\"], [[3864, 3865], \"valid\"], [[3866, 3871], \"valid\", [], \"NV8\"], [[3872, 3881], \"valid\"], [[3882, 3892], \"valid\", [], \"NV8\"], [[3893, 3893], \"valid\"], [[3894, 3894], \"valid\", [], \"NV8\"], [[3895, 3895], \"valid\"], [[3896, 3896], \"valid\", [], \"NV8\"], [[3897, 3897], \"valid\"], [[3898, 3901], \"valid\", [], \"NV8\"], [[3902, 3906], \"valid\"], [[3907, 3907], \"mapped\", [3906, 4023]], [[3908, 3911], \"valid\"], [[3912, 3912], \"disallowed\"], [[3913, 3916], \"valid\"], [[3917, 3917], \"mapped\", [3916, 4023]], [[3918, 3921], \"valid\"], [[3922, 3922], \"mapped\", [3921, 4023]], [[3923, 3926], \"valid\"], [[3927, 3927], \"mapped\", [3926, 4023]], [[3928, 3931], \"valid\"], [[3932, 3932], \"mapped\", [3931, 4023]], [[3933, 3944], \"valid\"], [[3945, 3945], \"mapped\", [3904, 4021]], [[3946, 3946], \"valid\"], [[3947, 3948], \"valid\"], [[3949, 3952], \"disallowed\"], [[3953, 3954], \"valid\"], [[3955, 3955], \"mapped\", [3953, 3954]], [[3956, 3956], \"valid\"], [[3957, 3957], \"mapped\", [3953, 3956]], [[3958, 3958], \"mapped\", [4018, 3968]], [[3959, 3959], \"mapped\", [4018, 3953, 3968]], [[3960, 3960], \"mapped\", [4019, 3968]], [[3961, 3961], \"mapped\", [4019, 3953, 3968]], [[3962, 3968], \"valid\"], [[3969, 3969], \"mapped\", [3953, 3968]], [[3970, 3972], \"valid\"], [[3973, 3973], \"valid\", [], \"NV8\"], [[3974, 3979], \"valid\"], [[3980, 3983], \"valid\"], [[3984, 3986], \"valid\"], [[3987, 3987], \"mapped\", [3986, 4023]], [[3988, 3989], \"valid\"], [[3990, 3990], \"valid\"], [[3991, 3991], \"valid\"], [[3992, 3992], \"disallowed\"], [[3993, 3996], \"valid\"], [[3997, 3997], \"mapped\", [3996, 4023]], [[3998, 4001], \"valid\"], [[4002, 4002], \"mapped\", [4001, 4023]], [[4003, 4006], \"valid\"], [[4007, 4007], \"mapped\", [4006, 4023]], [[4008, 4011], \"valid\"], [[4012, 4012], \"mapped\", [4011, 4023]], [[4013, 4013], \"valid\"], [[4014, 4016], \"valid\"], [[4017, 4023], \"valid\"], [[4024, 4024], \"valid\"], [[4025, 4025], \"mapped\", [3984, 4021]], [[4026, 4028], \"valid\"], [[4029, 4029], \"disallowed\"], [[4030, 4037], \"valid\", [], \"NV8\"], [[4038, 4038], \"valid\"], [[4039, 4044], \"valid\", [], \"NV8\"], [[4045, 4045], \"disallowed\"], [[4046, 4046], \"valid\", [], \"NV8\"], [[4047, 4047], \"valid\", [], \"NV8\"], [[4048, 4049], \"valid\", [], \"NV8\"], [[4050, 4052], \"valid\", [], \"NV8\"], [[4053, 4056], \"valid\", [], \"NV8\"], [[4057, 4058], \"valid\", [], \"NV8\"], [[4059, 4095], \"disallowed\"], [[4096, 4129], \"valid\"], [[4130, 4130], \"valid\"], [[4131, 4135], \"valid\"], [[4136, 4136], \"valid\"], [[4137, 4138], \"valid\"], [[4139, 4139], \"valid\"], [[4140, 4146], \"valid\"], [[4147, 4149], \"valid\"], [[4150, 4153], \"valid\"], [[4154, 4159], \"valid\"], [[4160, 4169], \"valid\"], [[4170, 4175], \"valid\", [], \"NV8\"], [[4176, 4185], \"valid\"], [[4186, 4249], \"valid\"], [[4250, 4253], \"valid\"], [[4254, 4255], \"valid\", [], \"NV8\"], [[4256, 4293], \"disallowed\"], [[4294, 4294], \"disallowed\"], [[4295, 4295], \"mapped\", [11559]], [[4296, 4300], \"disallowed\"], [[4301, 4301], \"mapped\", [11565]], [[4302, 4303], \"disallowed\"], [[4304, 4342], \"valid\"], [[4343, 4344], \"valid\"], [[4345, 4346], \"valid\"], [[4347, 4347], \"valid\", [], \"NV8\"], [[4348, 4348], \"mapped\", [4316]], [[4349, 4351], \"valid\"], [[4352, 4441], \"valid\", [], \"NV8\"], [[4442, 4446], \"valid\", [], \"NV8\"], [[4447, 4448], \"disallowed\"], [[4449, 4514], \"valid\", [], \"NV8\"], [[4515, 4519], \"valid\", [], \"NV8\"], [[4520, 4601], \"valid\", [], \"NV8\"], [[4602, 4607], \"valid\", [], \"NV8\"], [[4608, 4614], \"valid\"], [[4615, 4615], \"valid\"], [[4616, 4678], \"valid\"], [[4679, 4679], \"valid\"], [[4680, 4680], \"valid\"], [[4681, 4681], \"disallowed\"], [[4682, 4685], \"valid\"], [[4686, 4687], \"disallowed\"], [[4688, 4694], \"valid\"], [[4695, 4695], \"disallowed\"], [[4696, 4696], \"valid\"], [[4697, 4697], \"disallowed\"], [[4698, 4701], \"valid\"], [[4702, 4703], \"disallowed\"], [[4704, 4742], \"valid\"], [[4743, 4743], \"valid\"], [[4744, 4744], \"valid\"], [[4745, 4745], \"disallowed\"], [[4746, 4749], \"valid\"], [[4750, 4751], \"disallowed\"], [[4752, 4782], \"valid\"], [[4783, 4783], \"valid\"], [[4784, 4784], \"valid\"], [[4785, 4785], \"disallowed\"], [[4786, 4789], \"valid\"], [[4790, 4791], \"disallowed\"], [[4792, 4798], \"valid\"], [[4799, 4799], \"disallowed\"], [[4800, 4800], \"valid\"], [[4801, 4801], \"disallowed\"], [[4802, 4805], \"valid\"], [[4806, 4807], \"disallowed\"], [[4808, 4814], \"valid\"], [[4815, 4815], \"valid\"], [[4816, 4822], \"valid\"], [[4823, 4823], \"disallowed\"], [[4824, 4846], \"valid\"], [[4847, 4847], \"valid\"], [[4848, 4878], \"valid\"], [[4879, 4879], \"valid\"], [[4880, 4880], \"valid\"], [[4881, 4881], \"disallowed\"], [[4882, 4885], \"valid\"], [[4886, 4887], \"disallowed\"], [[4888, 4894], \"valid\"], [[4895, 4895], \"valid\"], [[4896, 4934], \"valid\"], [[4935, 4935], \"valid\"], [[4936, 4954], \"valid\"], [[4955, 4956], \"disallowed\"], [[4957, 4958], \"valid\"], [[4959, 4959], \"valid\"], [[4960, 4960], \"valid\", [], \"NV8\"], [[4961, 4988], \"valid\", [], \"NV8\"], [[4989, 4991], \"disallowed\"], [[4992, 5007], \"valid\"], [[5008, 5017], \"valid\", [], \"NV8\"], [[5018, 5023], \"disallowed\"], [[5024, 5108], \"valid\"], [[5109, 5109], \"valid\"], [[5110, 5111], \"disallowed\"], [[5112, 5112], \"mapped\", [5104]], [[5113, 5113], \"mapped\", [5105]], [[5114, 5114], \"mapped\", [5106]], [[5115, 5115], \"mapped\", [5107]], [[5116, 5116], \"mapped\", [5108]], [[5117, 5117], \"mapped\", [5109]], [[5118, 5119], \"disallowed\"], [[5120, 5120], \"valid\", [], \"NV8\"], [[5121, 5740], \"valid\"], [[5741, 5742], \"valid\", [], \"NV8\"], [[5743, 5750], \"valid\"], [[5751, 5759], \"valid\"], [[5760, 5760], \"disallowed\"], [[5761, 5786], \"valid\"], [[5787, 5788], \"valid\", [], \"NV8\"], [[5789, 5791], \"disallowed\"], [[5792, 5866], \"valid\"], [[5867, 5872], \"valid\", [], \"NV8\"], [[5873, 5880], \"valid\"], [[5881, 5887], \"disallowed\"], [[5888, 5900], \"valid\"], [[5901, 5901], \"disallowed\"], [[5902, 5908], \"valid\"], [[5909, 5919], \"disallowed\"], [[5920, 5940], \"valid\"], [[5941, 5942], \"valid\", [], \"NV8\"], [[5943, 5951], \"disallowed\"], [[5952, 5971], \"valid\"], [[5972, 5983], \"disallowed\"], [[5984, 5996], \"valid\"], [[5997, 5997], \"disallowed\"], [[5998, 6000], \"valid\"], [[6001, 6001], \"disallowed\"], [[6002, 6003], \"valid\"], [[6004, 6015], \"disallowed\"], [[6016, 6067], \"valid\"], [[6068, 6069], \"disallowed\"], [[6070, 6099], \"valid\"], [[6100, 6102], \"valid\", [], \"NV8\"], [[6103, 6103], \"valid\"], [[6104, 6107], \"valid\", [], \"NV8\"], [[6108, 6108], \"valid\"], [[6109, 6109], \"valid\"], [[6110, 6111], \"disallowed\"], [[6112, 6121], \"valid\"], [[6122, 6127], \"disallowed\"], [[6128, 6137], \"valid\", [], \"NV8\"], [[6138, 6143], \"disallowed\"], [[6144, 6149], \"valid\", [], \"NV8\"], [[6150, 6150], \"disallowed\"], [[6151, 6154], \"valid\", [], \"NV8\"], [[6155, 6157], \"ignored\"], [[6158, 6158], \"disallowed\"], [[6159, 6159], \"disallowed\"], [[6160, 6169], \"valid\"], [[6170, 6175], \"disallowed\"], [[6176, 6263], \"valid\"], [[6264, 6271], \"disallowed\"], [[6272, 6313], \"valid\"], [[6314, 6314], \"valid\"], [[6315, 6319], \"disallowed\"], [[6320, 6389], \"valid\"], [[6390, 6399], \"disallowed\"], [[6400, 6428], \"valid\"], [[6429, 6430], \"valid\"], [[6431, 6431], \"disallowed\"], [[6432, 6443], \"valid\"], [[6444, 6447], \"disallowed\"], [[6448, 6459], \"valid\"], [[6460, 6463], \"disallowed\"], [[6464, 6464], \"valid\", [], \"NV8\"], [[6465, 6467], \"disallowed\"], [[6468, 6469], \"valid\", [], \"NV8\"], [[6470, 6509], \"valid\"], [[6510, 6511], \"disallowed\"], [[6512, 6516], \"valid\"], [[6517, 6527], \"disallowed\"], [[6528, 6569], \"valid\"], [[6570, 6571], \"valid\"], [[6572, 6575], \"disallowed\"], [[6576, 6601], \"valid\"], [[6602, 6607], \"disallowed\"], [[6608, 6617], \"valid\"], [[6618, 6618], \"valid\", [], \"XV8\"], [[6619, 6621], \"disallowed\"], [[6622, 6623], \"valid\", [], \"NV8\"], [[6624, 6655], \"valid\", [], \"NV8\"], [[6656, 6683], \"valid\"], [[6684, 6685], \"disallowed\"], [[6686, 6687], \"valid\", [], \"NV8\"], [[6688, 6750], \"valid\"], [[6751, 6751], \"disallowed\"], [[6752, 6780], \"valid\"], [[6781, 6782], \"disallowed\"], [[6783, 6793], \"valid\"], [[6794, 6799], \"disallowed\"], [[6800, 6809], \"valid\"], [[6810, 6815], \"disallowed\"], [[6816, 6822], \"valid\", [], \"NV8\"], [[6823, 6823], \"valid\"], [[6824, 6829], \"valid\", [], \"NV8\"], [[6830, 6831], \"disallowed\"], [[6832, 6845], \"valid\"], [[6846, 6846], \"valid\", [], \"NV8\"], [[6847, 6911], \"disallowed\"], [[6912, 6987], \"valid\"], [[6988, 6991], \"disallowed\"], [[6992, 7001], \"valid\"], [[7002, 7018], \"valid\", [], \"NV8\"], [[7019, 7027], \"valid\"], [[7028, 7036], \"valid\", [], \"NV8\"], [[7037, 7039], \"disallowed\"], [[7040, 7082], \"valid\"], [[7083, 7085], \"valid\"], [[7086, 7097], \"valid\"], [[7098, 7103], \"valid\"], [[7104, 7155], \"valid\"], [[7156, 7163], \"disallowed\"], [[7164, 7167], \"valid\", [], \"NV8\"], [[7168, 7223], \"valid\"], [[7224, 7226], \"disallowed\"], [[7227, 7231], \"valid\", [], \"NV8\"], [[7232, 7241], \"valid\"], [[7242, 7244], \"disallowed\"], [[7245, 7293], \"valid\"], [[7294, 7295], \"valid\", [], \"NV8\"], [[7296, 7359], \"disallowed\"], [[7360, 7367], \"valid\", [], \"NV8\"], [[7368, 7375], \"disallowed\"], [[7376, 7378], \"valid\"], [[7379, 7379], \"valid\", [], \"NV8\"], [[7380, 7410], \"valid\"], [[7411, 7414], \"valid\"], [[7415, 7415], \"disallowed\"], [[7416, 7417], \"valid\"], [[7418, 7423], \"disallowed\"], [[7424, 7467], \"valid\"], [[7468, 7468], \"mapped\", [97]], [[7469, 7469], \"mapped\", [230]], [[7470, 7470], \"mapped\", [98]], [[7471, 7471], \"valid\"], [[7472, 7472], \"mapped\", [100]], [[7473, 7473], \"mapped\", [101]], [[7474, 7474], \"mapped\", [477]], [[7475, 7475], \"mapped\", [103]], [[7476, 7476], \"mapped\", [104]], [[7477, 7477], \"mapped\", [105]], [[7478, 7478], \"mapped\", [106]], [[7479, 7479], \"mapped\", [107]], [[7480, 7480], \"mapped\", [108]], [[7481, 7481], \"mapped\", [109]], [[7482, 7482], \"mapped\", [110]], [[7483, 7483], \"valid\"], [[7484, 7484], \"mapped\", [111]], [[7485, 7485], \"mapped\", [547]], [[7486, 7486], \"mapped\", [112]], [[7487, 7487], \"mapped\", [114]], [[7488, 7488], \"mapped\", [116]], [[7489, 7489], \"mapped\", [117]], [[7490, 7490], \"mapped\", [119]], [[7491, 7491], \"mapped\", [97]], [[7492, 7492], \"mapped\", [592]], [[7493, 7493], \"mapped\", [593]], [[7494, 7494], \"mapped\", [7426]], [[7495, 7495], \"mapped\", [98]], [[7496, 7496], \"mapped\", [100]], [[7497, 7497], \"mapped\", [101]], [[7498, 7498], \"mapped\", [601]], [[7499, 7499], \"mapped\", [603]], [[7500, 7500], \"mapped\", [604]], [[7501, 7501], \"mapped\", [103]], [[7502, 7502], \"valid\"], [[7503, 7503], \"mapped\", [107]], [[7504, 7504], \"mapped\", [109]], [[7505, 7505], \"mapped\", [331]], [[7506, 7506], \"mapped\", [111]], [[7507, 7507], \"mapped\", [596]], [[7508, 7508], \"mapped\", [7446]], [[7509, 7509], \"mapped\", [7447]], [[7510, 7510], \"mapped\", [112]], [[7511, 7511], \"mapped\", [116]], [[7512, 7512], \"mapped\", [117]], [[7513, 7513], \"mapped\", [7453]], [[7514, 7514], \"mapped\", [623]], [[7515, 7515], \"mapped\", [118]], [[7516, 7516], \"mapped\", [7461]], [[7517, 7517], \"mapped\", [946]], [[7518, 7518], \"mapped\", [947]], [[7519, 7519], \"mapped\", [948]], [[7520, 7520], \"mapped\", [966]], [[7521, 7521], \"mapped\", [967]], [[7522, 7522], \"mapped\", [105]], [[7523, 7523], \"mapped\", [114]], [[7524, 7524], \"mapped\", [117]], [[7525, 7525], \"mapped\", [118]], [[7526, 7526], \"mapped\", [946]], [[7527, 7527], \"mapped\", [947]], [[7528, 7528], \"mapped\", [961]], [[7529, 7529], \"mapped\", [966]], [[7530, 7530], \"mapped\", [967]], [[7531, 7531], \"valid\"], [[7532, 7543], \"valid\"], [[7544, 7544], \"mapped\", [1085]], [[7545, 7578], \"valid\"], [[7579, 7579], \"mapped\", [594]], [[7580, 7580], \"mapped\", [99]], [[7581, 7581], \"mapped\", [597]], [[7582, 7582], \"mapped\", [240]], [[7583, 7583], \"mapped\", [604]], [[7584, 7584], \"mapped\", [102]], [[7585, 7585], \"mapped\", [607]], [[7586, 7586], \"mapped\", [609]], [[7587, 7587], \"mapped\", [613]], [[7588, 7588], \"mapped\", [616]], [[7589, 7589], \"mapped\", [617]], [[7590, 7590], \"mapped\", [618]], [[7591, 7591], \"mapped\", [7547]], [[7592, 7592], \"mapped\", [669]], [[7593, 7593], \"mapped\", [621]], [[7594, 7594], \"mapped\", [7557]], [[7595, 7595], \"mapped\", [671]], [[7596, 7596], \"mapped\", [625]], [[7597, 7597], \"mapped\", [624]], [[7598, 7598], \"mapped\", [626]], [[7599, 7599], \"mapped\", [627]], [[7600, 7600], \"mapped\", [628]], [[7601, 7601], \"mapped\", [629]], [[7602, 7602], \"mapped\", [632]], [[7603, 7603], \"mapped\", [642]], [[7604, 7604], \"mapped\", [643]], [[7605, 7605], \"mapped\", [427]], [[7606, 7606], \"mapped\", [649]], [[7607, 7607], \"mapped\", [650]], [[7608, 7608], \"mapped\", [7452]], [[7609, 7609], \"mapped\", [651]], [[7610, 7610], \"mapped\", [652]], [[7611, 7611], \"mapped\", [122]], [[7612, 7612], \"mapped\", [656]], [[7613, 7613], \"mapped\", [657]], [[7614, 7614], \"mapped\", [658]], [[7615, 7615], \"mapped\", [952]], [[7616, 7619], \"valid\"], [[7620, 7626], \"valid\"], [[7627, 7654], \"valid\"], [[7655, 7669], \"valid\"], [[7670, 7675], \"disallowed\"], [[7676, 7676], \"valid\"], [[7677, 7677], \"valid\"], [[7678, 7679], \"valid\"], [[7680, 7680], \"mapped\", [7681]], [[7681, 7681], \"valid\"], [[7682, 7682], \"mapped\", [7683]], [[7683, 7683], \"valid\"], [[7684, 7684], \"mapped\", [7685]], [[7685, 7685], \"valid\"], [[7686, 7686], \"mapped\", [7687]], [[7687, 7687], \"valid\"], [[7688, 7688], \"mapped\", [7689]], [[7689, 7689], \"valid\"], [[7690, 7690], \"mapped\", [7691]], [[7691, 7691], \"valid\"], [[7692, 7692], \"mapped\", [7693]], [[7693, 7693], \"valid\"], [[7694, 7694], \"mapped\", [7695]], [[7695, 7695], \"valid\"], [[7696, 7696], \"mapped\", [7697]], [[7697, 7697], \"valid\"], [[7698, 7698], \"mapped\", [7699]], [[7699, 7699], \"valid\"], [[7700, 7700], \"mapped\", [7701]], [[7701, 7701], \"valid\"], [[7702, 7702], \"mapped\", [7703]], [[7703, 7703], \"valid\"], [[7704, 7704], \"mapped\", [7705]], [[7705, 7705], \"valid\"], [[7706, 7706], \"mapped\", [7707]], [[7707, 7707], \"valid\"], [[7708, 7708], \"mapped\", [7709]], [[7709, 7709], \"valid\"], [[7710, 7710], \"mapped\", [7711]], [[7711, 7711], \"valid\"], [[7712, 7712], \"mapped\", [7713]], [[7713, 7713], \"valid\"], [[7714, 7714], \"mapped\", [7715]], [[7715, 7715], \"valid\"], [[7716, 7716], \"mapped\", [7717]], [[7717, 7717], \"valid\"], [[7718, 7718], \"mapped\", [7719]], [[7719, 7719], \"valid\"], [[7720, 7720], \"mapped\", [7721]], [[7721, 7721], \"valid\"], [[7722, 7722], \"mapped\", [7723]], [[7723, 7723], \"valid\"], [[7724, 7724], \"mapped\", [7725]], [[7725, 7725], \"valid\"], [[7726, 7726], \"mapped\", [7727]], [[7727, 7727], \"valid\"], [[7728, 7728], \"mapped\", [7729]], [[7729, 7729], \"valid\"], [[7730, 7730], \"mapped\", [7731]], [[7731, 7731], \"valid\"], [[7732, 7732], \"mapped\", [7733]], [[7733, 7733], \"valid\"], [[7734, 7734], \"mapped\", [7735]], [[7735, 7735], \"valid\"], [[7736, 7736], \"mapped\", [7737]], [[7737, 7737], \"valid\"], [[7738, 7738], \"mapped\", [7739]], [[7739, 7739], \"valid\"], [[7740, 7740], \"mapped\", [7741]], [[7741, 7741], \"valid\"], [[7742, 7742], \"mapped\", [7743]], [[7743, 7743], \"valid\"], [[7744, 7744], \"mapped\", [7745]], [[7745, 7745], \"valid\"], [[7746, 7746], \"mapped\", [7747]], [[7747, 7747], \"valid\"], [[7748, 7748], \"mapped\", [7749]], [[7749, 7749], \"valid\"], [[7750, 7750], \"mapped\", [7751]], [[7751, 7751], \"valid\"], [[7752, 7752], \"mapped\", [7753]], [[7753, 7753], \"valid\"], [[7754, 7754], \"mapped\", [7755]], [[7755, 7755], \"valid\"], [[7756, 7756], \"mapped\", [7757]], [[7757, 7757], \"valid\"], [[7758, 7758], \"mapped\", [7759]], [[7759, 7759], \"valid\"], [[7760, 7760], \"mapped\", [7761]], [[7761, 7761], \"valid\"], [[7762, 7762], \"mapped\", [7763]], [[7763, 7763], \"valid\"], [[7764, 7764], \"mapped\", [7765]], [[7765, 7765], \"valid\"], [[7766, 7766], \"mapped\", [7767]], [[7767, 7767], \"valid\"], [[7768, 7768], \"mapped\", [7769]], [[7769, 7769], \"valid\"], [[7770, 7770], \"mapped\", [7771]], [[7771, 7771], \"valid\"], [[7772, 7772], \"mapped\", [7773]], [[7773, 7773], \"valid\"], [[7774, 7774], \"mapped\", [7775]], [[7775, 7775], \"valid\"], [[7776, 7776], \"mapped\", [7777]], [[7777, 7777], \"valid\"], [[7778, 7778], \"mapped\", [7779]], [[7779, 7779], \"valid\"], [[7780, 7780], \"mapped\", [7781]], [[7781, 7781], \"valid\"], [[7782, 7782], \"mapped\", [7783]], [[7783, 7783], \"valid\"], [[7784, 7784], \"mapped\", [7785]], [[7785, 7785], \"valid\"], [[7786, 7786], \"mapped\", [7787]], [[7787, 7787], \"valid\"], [[7788, 7788], \"mapped\", [7789]], [[7789, 7789], \"valid\"], [[7790, 7790], \"mapped\", [7791]], [[7791, 7791], \"valid\"], [[7792, 7792], \"mapped\", [7793]], [[7793, 7793], \"valid\"], [[7794, 7794], \"mapped\", [7795]], [[7795, 7795], \"valid\"], [[7796, 7796], \"mapped\", [7797]], [[7797, 7797], \"valid\"], [[7798, 7798], \"mapped\", [7799]], [[7799, 7799], \"valid\"], [[7800, 7800], \"mapped\", [7801]], [[7801, 7801], \"valid\"], [[7802, 7802], \"mapped\", [7803]], [[7803, 7803], \"valid\"], [[7804, 7804], \"mapped\", [7805]], [[7805, 7805], \"valid\"], [[7806, 7806], \"mapped\", [7807]], [[7807, 7807], \"valid\"], [[7808, 7808], \"mapped\", [7809]], [[7809, 7809], \"valid\"], [[7810, 7810], \"mapped\", [7811]], [[7811, 7811], \"valid\"], [[7812, 7812], \"mapped\", [7813]], [[7813, 7813], \"valid\"], [[7814, 7814], \"mapped\", [7815]], [[7815, 7815], \"valid\"], [[7816, 7816], \"mapped\", [7817]], [[7817, 7817], \"valid\"], [[7818, 7818], \"mapped\", [7819]], [[7819, 7819], \"valid\"], [[7820, 7820], \"mapped\", [7821]], [[7821, 7821], \"valid\"], [[7822, 7822], \"mapped\", [7823]], [[7823, 7823], \"valid\"], [[7824, 7824], \"mapped\", [7825]], [[7825, 7825], \"valid\"], [[7826, 7826], \"mapped\", [7827]], [[7827, 7827], \"valid\"], [[7828, 7828], \"mapped\", [7829]], [[7829, 7833], \"valid\"], [[7834, 7834], \"mapped\", [97, 702]], [[7835, 7835], \"mapped\", [7777]], [[7836, 7837], \"valid\"], [[7838, 7838], \"mapped\", [115, 115]], [[7839, 7839], \"valid\"], [[7840, 7840], \"mapped\", [7841]], [[7841, 7841], \"valid\"], [[7842, 7842], \"mapped\", [7843]], [[7843, 7843], \"valid\"], [[7844, 7844], \"mapped\", [7845]], [[7845, 7845], \"valid\"], [[7846, 7846], \"mapped\", [7847]], [[7847, 7847], \"valid\"], [[7848, 7848], \"mapped\", [7849]], [[7849, 7849], \"valid\"], [[7850, 7850], \"mapped\", [7851]], [[7851, 7851], \"valid\"], [[7852, 7852], \"mapped\", [7853]], [[7853, 7853], \"valid\"], [[7854, 7854], \"mapped\", [7855]], [[7855, 7855], \"valid\"], [[7856, 7856], \"mapped\", [7857]], [[7857, 7857], \"valid\"], [[7858, 7858], \"mapped\", [7859]], [[7859, 7859], \"valid\"], [[7860, 7860], \"mapped\", [7861]], [[7861, 7861], \"valid\"], [[7862, 7862], \"mapped\", [7863]], [[7863, 7863], \"valid\"], [[7864, 7864], \"mapped\", [7865]], [[7865, 7865], \"valid\"], [[7866, 7866], \"mapped\", [7867]], [[7867, 7867], \"valid\"], [[7868, 7868], \"mapped\", [7869]], [[7869, 7869], \"valid\"], [[7870, 7870], \"mapped\", [7871]], [[7871, 7871], \"valid\"], [[7872, 7872], \"mapped\", [7873]], [[7873, 7873], \"valid\"], [[7874, 7874], \"mapped\", [7875]], [[7875, 7875], \"valid\"], [[7876, 7876], \"mapped\", [7877]], [[7877, 7877], \"valid\"], [[7878, 7878], \"mapped\", [7879]], [[7879, 7879], \"valid\"], [[7880, 7880], \"mapped\", [7881]], [[7881, 7881], \"valid\"], [[7882, 7882], \"mapped\", [7883]], [[7883, 7883], \"valid\"], [[7884, 7884], \"mapped\", [7885]], [[7885, 7885], \"valid\"], [[7886, 7886], \"mapped\", [7887]], [[7887, 7887], \"valid\"], [[7888, 7888], \"mapped\", [7889]], [[7889, 7889], \"valid\"], [[7890, 7890], \"mapped\", [7891]], [[7891, 7891], \"valid\"], [[7892, 7892], \"mapped\", [7893]], [[7893, 7893], \"valid\"], [[7894, 7894], \"mapped\", [7895]], [[7895, 7895], \"valid\"], [[7896, 7896], \"mapped\", [7897]], [[7897, 7897], \"valid\"], [[7898, 7898], \"mapped\", [7899]], [[7899, 7899], \"valid\"], [[7900, 7900], \"mapped\", [7901]], [[7901, 7901], \"valid\"], [[7902, 7902], \"mapped\", [7903]], [[7903, 7903], \"valid\"], [[7904, 7904], \"mapped\", [7905]], [[7905, 7905], \"valid\"], [[7906, 7906], \"mapped\", [7907]], [[7907, 7907], \"valid\"], [[7908, 7908], \"mapped\", [7909]], [[7909, 7909], \"valid\"], [[7910, 7910], \"mapped\", [7911]], [[7911, 7911], \"valid\"], [[7912, 7912], \"mapped\", [7913]], [[7913, 7913], \"valid\"], [[7914, 7914], \"mapped\", [7915]], [[7915, 7915], \"valid\"], [[7916, 7916], \"mapped\", [7917]], [[7917, 7917], \"valid\"], [[7918, 7918], \"mapped\", [7919]], [[7919, 7919], \"valid\"], [[7920, 7920], \"mapped\", [7921]], [[7921, 7921], \"valid\"], [[7922, 7922], \"mapped\", [7923]], [[7923, 7923], \"valid\"], [[7924, 7924], \"mapped\", [7925]], [[7925, 7925], \"valid\"], [[7926, 7926], \"mapped\", [7927]], [[7927, 7927], \"valid\"], [[7928, 7928], \"mapped\", [7929]], [[7929, 7929], \"valid\"], [[7930, 7930], \"mapped\", [7931]], [[7931, 7931], \"valid\"], [[7932, 7932], \"mapped\", [7933]], [[7933, 7933], \"valid\"], [[7934, 7934], \"mapped\", [7935]], [[7935, 7935], \"valid\"], [[7936, 7943], \"valid\"], [[7944, 7944], \"mapped\", [7936]], [[7945, 7945], \"mapped\", [7937]], [[7946, 7946], \"mapped\", [7938]], [[7947, 7947], \"mapped\", [7939]], [[7948, 7948], \"mapped\", [7940]], [[7949, 7949], \"mapped\", [7941]], [[7950, 7950], \"mapped\", [7942]], [[7951, 7951], \"mapped\", [7943]], [[7952, 7957], \"valid\"], [[7958, 7959], \"disallowed\"], [[7960, 7960], \"mapped\", [7952]], [[7961, 7961], \"mapped\", [7953]], [[7962, 7962], \"mapped\", [7954]], [[7963, 7963], \"mapped\", [7955]], [[7964, 7964], \"mapped\", [7956]], [[7965, 7965], \"mapped\", [7957]], [[7966, 7967], \"disallowed\"], [[7968, 7975], \"valid\"], [[7976, 7976], \"mapped\", [7968]], [[7977, 7977], \"mapped\", [7969]], [[7978, 7978], \"mapped\", [7970]], [[7979, 7979], \"mapped\", [7971]], [[7980, 7980], \"mapped\", [7972]], [[7981, 7981], \"mapped\", [7973]], [[7982, 7982], \"mapped\", [7974]], [[7983, 7983], \"mapped\", [7975]], [[7984, 7991], \"valid\"], [[7992, 7992], \"mapped\", [7984]], [[7993, 7993], \"mapped\", [7985]], [[7994, 7994], \"mapped\", [7986]], [[7995, 7995], \"mapped\", [7987]], [[7996, 7996], \"mapped\", [7988]], [[7997, 7997], \"mapped\", [7989]], [[7998, 7998], \"mapped\", [7990]], [[7999, 7999], \"mapped\", [7991]], [[8000, 8005], \"valid\"], [[8006, 8007], \"disallowed\"], [[8008, 8008], \"mapped\", [8000]], [[8009, 8009], \"mapped\", [8001]], [[8010, 8010], \"mapped\", [8002]], [[8011, 8011], \"mapped\", [8003]], [[8012, 8012], \"mapped\", [8004]], [[8013, 8013], \"mapped\", [8005]], [[8014, 8015], \"disallowed\"], [[8016, 8023], \"valid\"], [[8024, 8024], \"disallowed\"], [[8025, 8025], \"mapped\", [8017]], [[8026, 8026], \"disallowed\"], [[8027, 8027], \"mapped\", [8019]], [[8028, 8028], \"disallowed\"], [[8029, 8029], \"mapped\", [8021]], [[8030, 8030], \"disallowed\"], [[8031, 8031], \"mapped\", [8023]], [[8032, 8039], \"valid\"], [[8040, 8040], \"mapped\", [8032]], [[8041, 8041], \"mapped\", [8033]], [[8042, 8042], \"mapped\", [8034]], [[8043, 8043], \"mapped\", [8035]], [[8044, 8044], \"mapped\", [8036]], [[8045, 8045], \"mapped\", [8037]], [[8046, 8046], \"mapped\", [8038]], [[8047, 8047], \"mapped\", [8039]], [[8048, 8048], \"valid\"], [[8049, 8049], \"mapped\", [940]], [[8050, 8050], \"valid\"], [[8051, 8051], \"mapped\", [941]], [[8052, 8052], \"valid\"], [[8053, 8053], \"mapped\", [942]], [[8054, 8054], \"valid\"], [[8055, 8055], \"mapped\", [943]], [[8056, 8056], \"valid\"], [[8057, 8057], \"mapped\", [972]], [[8058, 8058], \"valid\"], [[8059, 8059], \"mapped\", [973]], [[8060, 8060], \"valid\"], [[8061, 8061], \"mapped\", [974]], [[8062, 8063], \"disallowed\"], [[8064, 8064], \"mapped\", [7936, 953]], [[8065, 8065], \"mapped\", [7937, 953]], [[8066, 8066], \"mapped\", [7938, 953]], [[8067, 8067], \"mapped\", [7939, 953]], [[8068, 8068], \"mapped\", [7940, 953]], [[8069, 8069], \"mapped\", [7941, 953]], [[8070, 8070], \"mapped\", [7942, 953]], [[8071, 8071], \"mapped\", [7943, 953]], [[8072, 8072], \"mapped\", [7936, 953]], [[8073, 8073], \"mapped\", [7937, 953]], [[8074, 8074], \"mapped\", [7938, 953]], [[8075, 8075], \"mapped\", [7939, 953]], [[8076, 8076], \"mapped\", [7940, 953]], [[8077, 8077], \"mapped\", [7941, 953]], [[8078, 8078], \"mapped\", [7942, 953]], [[8079, 8079], \"mapped\", [7943, 953]], [[8080, 8080], \"mapped\", [7968, 953]], [[8081, 8081], \"mapped\", [7969, 953]], [[8082, 8082], \"mapped\", [7970, 953]], [[8083, 8083], \"mapped\", [7971, 953]], [[8084, 8084], \"mapped\", [7972, 953]], [[8085, 8085], \"mapped\", [7973, 953]], [[8086, 8086], \"mapped\", [7974, 953]], [[8087, 8087], \"mapped\", [7975, 953]], [[8088, 8088], \"mapped\", [7968, 953]], [[8089, 8089], \"mapped\", [7969, 953]], [[8090, 8090], \"mapped\", [7970, 953]], [[8091, 8091], \"mapped\", [7971, 953]], [[8092, 8092], \"mapped\", [7972, 953]], [[8093, 8093], \"mapped\", [7973, 953]], [[8094, 8094], \"mapped\", [7974, 953]], [[8095, 8095], \"mapped\", [7975, 953]], [[8096, 8096], \"mapped\", [8032, 953]], [[8097, 8097], \"mapped\", [8033, 953]], [[8098, 8098], \"mapped\", [8034, 953]], [[8099, 8099], \"mapped\", [8035, 953]], [[8100, 8100], \"mapped\", [8036, 953]], [[8101, 8101], \"mapped\", [8037, 953]], [[8102, 8102], \"mapped\", [8038, 953]], [[8103, 8103], \"mapped\", [8039, 953]], [[8104, 8104], \"mapped\", [8032, 953]], [[8105, 8105], \"mapped\", [8033, 953]], [[8106, 8106], \"mapped\", [8034, 953]], [[8107, 8107], \"mapped\", [8035, 953]], [[8108, 8108], \"mapped\", [8036, 953]], [[8109, 8109], \"mapped\", [8037, 953]], [[8110, 8110], \"mapped\", [8038, 953]], [[8111, 8111], \"mapped\", [8039, 953]], [[8112, 8113], \"valid\"], [[8114, 8114], \"mapped\", [8048, 953]], [[8115, 8115], \"mapped\", [945, 953]], [[8116, 8116], \"mapped\", [940, 953]], [[8117, 8117], \"disallowed\"], [[8118, 8118], \"valid\"], [[8119, 8119], \"mapped\", [8118, 953]], [[8120, 8120], \"mapped\", [8112]], [[8121, 8121], \"mapped\", [8113]], [[8122, 8122], \"mapped\", [8048]], [[8123, 8123], \"mapped\", [940]], [[8124, 8124], \"mapped\", [945, 953]], [[8125, 8125], \"disallowed_STD3_mapped\", [32, 787]], [[8126, 8126], \"mapped\", [953]], [[8127, 8127], \"disallowed_STD3_mapped\", [32, 787]], [[8128, 8128], \"disallowed_STD3_mapped\", [32, 834]], [[8129, 8129], \"disallowed_STD3_mapped\", [32, 776, 834]], [[8130, 8130], \"mapped\", [8052, 953]], [[8131, 8131], \"mapped\", [951, 953]], [[8132, 8132], \"mapped\", [942, 953]], [[8133, 8133], \"disallowed\"], [[8134, 8134], \"valid\"], [[8135, 8135], \"mapped\", [8134, 953]], [[8136, 8136], \"mapped\", [8050]], [[8137, 8137], \"mapped\", [941]], [[8138, 8138], \"mapped\", [8052]], [[8139, 8139], \"mapped\", [942]], [[8140, 8140], \"mapped\", [951, 953]], [[8141, 8141], \"disallowed_STD3_mapped\", [32, 787, 768]], [[8142, 8142], \"disallowed_STD3_mapped\", [32, 787, 769]], [[8143, 8143], \"disallowed_STD3_mapped\", [32, 787, 834]], [[8144, 8146], \"valid\"], [[8147, 8147], \"mapped\", [912]], [[8148, 8149], \"disallowed\"], [[8150, 8151], \"valid\"], [[8152, 8152], \"mapped\", [8144]], [[8153, 8153], \"mapped\", [8145]], [[8154, 8154], \"mapped\", [8054]], [[8155, 8155], \"mapped\", [943]], [[8156, 8156], \"disallowed\"], [[8157, 8157], \"disallowed_STD3_mapped\", [32, 788, 768]], [[8158, 8158], \"disallowed_STD3_mapped\", [32, 788, 769]], [[8159, 8159], \"disallowed_STD3_mapped\", [32, 788, 834]], [[8160, 8162], \"valid\"], [[8163, 8163], \"mapped\", [944]], [[8164, 8167], \"valid\"], [[8168, 8168], \"mapped\", [8160]], [[8169, 8169], \"mapped\", [8161]], [[8170, 8170], \"mapped\", [8058]], [[8171, 8171], \"mapped\", [973]], [[8172, 8172], \"mapped\", [8165]], [[8173, 8173], \"disallowed_STD3_mapped\", [32, 776, 768]], [[8174, 8174], \"disallowed_STD3_mapped\", [32, 776, 769]], [[8175, 8175], \"disallowed_STD3_mapped\", [96]], [[8176, 8177], \"disallowed\"], [[8178, 8178], \"mapped\", [8060, 953]], [[8179, 8179], \"mapped\", [969, 953]], [[8180, 8180], \"mapped\", [974, 953]], [[8181, 8181], \"disallowed\"], [[8182, 8182], \"valid\"], [[8183, 8183], \"mapped\", [8182, 953]], [[8184, 8184], \"mapped\", [8056]], [[8185, 8185], \"mapped\", [972]], [[8186, 8186], \"mapped\", [8060]], [[8187, 8187], \"mapped\", [974]], [[8188, 8188], \"mapped\", [969, 953]], [[8189, 8189], \"disallowed_STD3_mapped\", [32, 769]], [[8190, 8190], \"disallowed_STD3_mapped\", [32, 788]], [[8191, 8191], \"disallowed\"], [[8192, 8202], \"disallowed_STD3_mapped\", [32]], [[8203, 8203], \"ignored\"], [[8204, 8205], \"deviation\", []], [[8206, 8207], \"disallowed\"], [[8208, 8208], \"valid\", [], \"NV8\"], [[8209, 8209], \"mapped\", [8208]], [[8210, 8214], \"valid\", [], \"NV8\"], [[8215, 8215], \"disallowed_STD3_mapped\", [32, 819]], [[8216, 8227], \"valid\", [], \"NV8\"], [[8228, 8230], \"disallowed\"], [[8231, 8231], \"valid\", [], \"NV8\"], [[8232, 8238], \"disallowed\"], [[8239, 8239], \"disallowed_STD3_mapped\", [32]], [[8240, 8242], \"valid\", [], \"NV8\"], [[8243, 8243], \"mapped\", [8242, 8242]], [[8244, 8244], \"mapped\", [8242, 8242, 8242]], [[8245, 8245], \"valid\", [], \"NV8\"], [[8246, 8246], \"mapped\", [8245, 8245]], [[8247, 8247], \"mapped\", [8245, 8245, 8245]], [[8248, 8251], \"valid\", [], \"NV8\"], [[8252, 8252], \"disallowed_STD3_mapped\", [33, 33]], [[8253, 8253], \"valid\", [], \"NV8\"], [[8254, 8254], \"disallowed_STD3_mapped\", [32, 773]], [[8255, 8262], \"valid\", [], \"NV8\"], [[8263, 8263], \"disallowed_STD3_mapped\", [63, 63]], [[8264, 8264], \"disallowed_STD3_mapped\", [63, 33]], [[8265, 8265], \"disallowed_STD3_mapped\", [33, 63]], [[8266, 8269], \"valid\", [], \"NV8\"], [[8270, 8274], \"valid\", [], \"NV8\"], [[8275, 8276], \"valid\", [], \"NV8\"], [[8277, 8278], \"valid\", [], \"NV8\"], [[8279, 8279], \"mapped\", [8242, 8242, 8242, 8242]], [[8280, 8286], \"valid\", [], \"NV8\"], [[8287, 8287], \"disallowed_STD3_mapped\", [32]], [[8288, 8288], \"ignored\"], [[8289, 8291], \"disallowed\"], [[8292, 8292], \"ignored\"], [[8293, 8293], \"disallowed\"], [[8294, 8297], \"disallowed\"], [[8298, 8303], \"disallowed\"], [[8304, 8304], \"mapped\", [48]], [[8305, 8305], \"mapped\", [105]], [[8306, 8307], \"disallowed\"], [[8308, 8308], \"mapped\", [52]], [[8309, 8309], \"mapped\", [53]], [[8310, 8310], \"mapped\", [54]], [[8311, 8311], \"mapped\", [55]], [[8312, 8312], \"mapped\", [56]], [[8313, 8313], \"mapped\", [57]], [[8314, 8314], \"disallowed_STD3_mapped\", [43]], [[8315, 8315], \"mapped\", [8722]], [[8316, 8316], \"disallowed_STD3_mapped\", [61]], [[8317, 8317], \"disallowed_STD3_mapped\", [40]], [[8318, 8318], \"disallowed_STD3_mapped\", [41]], [[8319, 8319], \"mapped\", [110]], [[8320, 8320], \"mapped\", [48]], [[8321, 8321], \"mapped\", [49]], [[8322, 8322], \"mapped\", [50]], [[8323, 8323], \"mapped\", [51]], [[8324, 8324], \"mapped\", [52]], [[8325, 8325], \"mapped\", [53]], [[8326, 8326], \"mapped\", [54]], [[8327, 8327], \"mapped\", [55]], [[8328, 8328], \"mapped\", [56]], [[8329, 8329], \"mapped\", [57]], [[8330, 8330], \"disallowed_STD3_mapped\", [43]], [[8331, 8331], \"mapped\", [8722]], [[8332, 8332], \"disallowed_STD3_mapped\", [61]], [[8333, 8333], \"disallowed_STD3_mapped\", [40]], [[8334, 8334], \"disallowed_STD3_mapped\", [41]], [[8335, 8335], \"disallowed\"], [[8336, 8336], \"mapped\", [97]], [[8337, 8337], \"mapped\", [101]], [[8338, 8338], \"mapped\", [111]], [[8339, 8339], \"mapped\", [120]], [[8340, 8340], \"mapped\", [601]], [[8341, 8341], \"mapped\", [104]], [[8342, 8342], \"mapped\", [107]], [[8343, 8343], \"mapped\", [108]], [[8344, 8344], \"mapped\", [109]], [[8345, 8345], \"mapped\", [110]], [[8346, 8346], \"mapped\", [112]], [[8347, 8347], \"mapped\", [115]], [[8348, 8348], \"mapped\", [116]], [[8349, 8351], \"disallowed\"], [[8352, 8359], \"valid\", [], \"NV8\"], [[8360, 8360], \"mapped\", [114, 115]], [[8361, 8362], \"valid\", [], \"NV8\"], [[8363, 8363], \"valid\", [], \"NV8\"], [[8364, 8364], \"valid\", [], \"NV8\"], [[8365, 8367], \"valid\", [], \"NV8\"], [[8368, 8369], \"valid\", [], \"NV8\"], [[8370, 8373], \"valid\", [], \"NV8\"], [[8374, 8376], \"valid\", [], \"NV8\"], [[8377, 8377], \"valid\", [], \"NV8\"], [[8378, 8378], \"valid\", [], \"NV8\"], [[8379, 8381], \"valid\", [], \"NV8\"], [[8382, 8382], \"valid\", [], \"NV8\"], [[8383, 8399], \"disallowed\"], [[8400, 8417], \"valid\", [], \"NV8\"], [[8418, 8419], \"valid\", [], \"NV8\"], [[8420, 8426], \"valid\", [], \"NV8\"], [[8427, 8427], \"valid\", [], \"NV8\"], [[8428, 8431], \"valid\", [], \"NV8\"], [[8432, 8432], \"valid\", [], \"NV8\"], [[8433, 8447], \"disallowed\"], [[8448, 8448], \"disallowed_STD3_mapped\", [97, 47, 99]], [[8449, 8449], \"disallowed_STD3_mapped\", [97, 47, 115]], [[8450, 8450], \"mapped\", [99]], [[8451, 8451], \"mapped\", [176, 99]], [[8452, 8452], \"valid\", [], \"NV8\"], [[8453, 8453], \"disallowed_STD3_mapped\", [99, 47, 111]], [[8454, 8454], \"disallowed_STD3_mapped\", [99, 47, 117]], [[8455, 8455], \"mapped\", [603]], [[8456, 8456], \"valid\", [], \"NV8\"], [[8457, 8457], \"mapped\", [176, 102]], [[8458, 8458], \"mapped\", [103]], [[8459, 8462], \"mapped\", [104]], [[8463, 8463], \"mapped\", [295]], [[8464, 8465], \"mapped\", [105]], [[8466, 8467], \"mapped\", [108]], [[8468, 8468], \"valid\", [], \"NV8\"], [[8469, 8469], \"mapped\", [110]], [[8470, 8470], \"mapped\", [110, 111]], [[8471, 8472], \"valid\", [], \"NV8\"], [[8473, 8473], \"mapped\", [112]], [[8474, 8474], \"mapped\", [113]], [[8475, 8477], \"mapped\", [114]], [[8478, 8479], \"valid\", [], \"NV8\"], [[8480, 8480], \"mapped\", [115, 109]], [[8481, 8481], \"mapped\", [116, 101, 108]], [[8482, 8482], \"mapped\", [116, 109]], [[8483, 8483], \"valid\", [], \"NV8\"], [[8484, 8484], \"mapped\", [122]], [[8485, 8485], \"valid\", [], \"NV8\"], [[8486, 8486], \"mapped\", [969]], [[8487, 8487], \"valid\", [], \"NV8\"], [[8488, 8488], \"mapped\", [122]], [[8489, 8489], \"valid\", [], \"NV8\"], [[8490, 8490], \"mapped\", [107]], [[8491, 8491], \"mapped\", [229]], [[8492, 8492], \"mapped\", [98]], [[8493, 8493], \"mapped\", [99]], [[8494, 8494], \"valid\", [], \"NV8\"], [[8495, 8496], \"mapped\", [101]], [[8497, 8497], \"mapped\", [102]], [[8498, 8498], \"disallowed\"], [[8499, 8499], \"mapped\", [109]], [[8500, 8500], \"mapped\", [111]], [[8501, 8501], \"mapped\", [1488]], [[8502, 8502], \"mapped\", [1489]], [[8503, 8503], \"mapped\", [1490]], [[8504, 8504], \"mapped\", [1491]], [[8505, 8505], \"mapped\", [105]], [[8506, 8506], \"valid\", [], \"NV8\"], [[8507, 8507], \"mapped\", [102, 97, 120]], [[8508, 8508], \"mapped\", [960]], [[8509, 8510], \"mapped\", [947]], [[8511, 8511], \"mapped\", [960]], [[8512, 8512], \"mapped\", [8721]], [[8513, 8516], \"valid\", [], \"NV8\"], [[8517, 8518], \"mapped\", [100]], [[8519, 8519], \"mapped\", [101]], [[8520, 8520], \"mapped\", [105]], [[8521, 8521], \"mapped\", [106]], [[8522, 8523], \"valid\", [], \"NV8\"], [[8524, 8524], \"valid\", [], \"NV8\"], [[8525, 8525], \"valid\", [], \"NV8\"], [[8526, 8526], \"valid\"], [[8527, 8527], \"valid\", [], \"NV8\"], [[8528, 8528], \"mapped\", [49, 8260, 55]], [[8529, 8529], \"mapped\", [49, 8260, 57]], [[8530, 8530], \"mapped\", [49, 8260, 49, 48]], [[8531, 8531], \"mapped\", [49, 8260, 51]], [[8532, 8532], \"mapped\", [50, 8260, 51]], [[8533, 8533], \"mapped\", [49, 8260, 53]], [[8534, 8534], \"mapped\", [50, 8260, 53]], [[8535, 8535], \"mapped\", [51, 8260, 53]], [[8536, 8536], \"mapped\", [52, 8260, 53]], [[8537, 8537], \"mapped\", [49, 8260, 54]], [[8538, 8538], \"mapped\", [53, 8260, 54]], [[8539, 8539], \"mapped\", [49, 8260, 56]], [[8540, 8540], \"mapped\", [51, 8260, 56]], [[8541, 8541], \"mapped\", [53, 8260, 56]], [[8542, 8542], \"mapped\", [55, 8260, 56]], [[8543, 8543], \"mapped\", [49, 8260]], [[8544, 8544], \"mapped\", [105]], [[8545, 8545], \"mapped\", [105, 105]], [[8546, 8546], \"mapped\", [105, 105, 105]], [[8547, 8547], \"mapped\", [105, 118]], [[8548, 8548], \"mapped\", [118]], [[8549, 8549], \"mapped\", [118, 105]], [[8550, 8550], \"mapped\", [118, 105, 105]], [[8551, 8551], \"mapped\", [118, 105, 105, 105]], [[8552, 8552], \"mapped\", [105, 120]], [[8553, 8553], \"mapped\", [120]], [[8554, 8554], \"mapped\", [120, 105]], [[8555, 8555], \"mapped\", [120, 105, 105]], [[8556, 8556], \"mapped\", [108]], [[8557, 8557], \"mapped\", [99]], [[8558, 8558], \"mapped\", [100]], [[8559, 8559], \"mapped\", [109]], [[8560, 8560], \"mapped\", [105]], [[8561, 8561], \"mapped\", [105, 105]], [[8562, 8562], \"mapped\", [105, 105, 105]], [[8563, 8563], \"mapped\", [105, 118]], [[8564, 8564], \"mapped\", [118]], [[8565, 8565], \"mapped\", [118, 105]], [[8566, 8566], \"mapped\", [118, 105, 105]], [[8567, 8567], \"mapped\", [118, 105, 105, 105]], [[8568, 8568], \"mapped\", [105, 120]], [[8569, 8569], \"mapped\", [120]], [[8570, 8570], \"mapped\", [120, 105]], [[8571, 8571], \"mapped\", [120, 105, 105]], [[8572, 8572], \"mapped\", [108]], [[8573, 8573], \"mapped\", [99]], [[8574, 8574], \"mapped\", [100]], [[8575, 8575], \"mapped\", [109]], [[8576, 8578], \"valid\", [], \"NV8\"], [[8579, 8579], \"disallowed\"], [[8580, 8580], \"valid\"], [[8581, 8584], \"valid\", [], \"NV8\"], [[8585, 8585], \"mapped\", [48, 8260, 51]], [[8586, 8587], \"valid\", [], \"NV8\"], [[8588, 8591], \"disallowed\"], [[8592, 8682], \"valid\", [], \"NV8\"], [[8683, 8691], \"valid\", [], \"NV8\"], [[8692, 8703], \"valid\", [], \"NV8\"], [[8704, 8747], \"valid\", [], \"NV8\"], [[8748, 8748], \"mapped\", [8747, 8747]], [[8749, 8749], \"mapped\", [8747, 8747, 8747]], [[8750, 8750], \"valid\", [], \"NV8\"], [[8751, 8751], \"mapped\", [8750, 8750]], [[8752, 8752], \"mapped\", [8750, 8750, 8750]], [[8753, 8799], \"valid\", [], \"NV8\"], [[8800, 8800], \"disallowed_STD3_valid\"], [[8801, 8813], \"valid\", [], \"NV8\"], [[8814, 8815], \"disallowed_STD3_valid\"], [[8816, 8945], \"valid\", [], \"NV8\"], [[8946, 8959], \"valid\", [], \"NV8\"], [[8960, 8960], \"valid\", [], \"NV8\"], [[8961, 8961], \"valid\", [], \"NV8\"], [[8962, 9000], \"valid\", [], \"NV8\"], [[9001, 9001], \"mapped\", [12296]], [[9002, 9002], \"mapped\", [12297]], [[9003, 9082], \"valid\", [], \"NV8\"], [[9083, 9083], \"valid\", [], \"NV8\"], [[9084, 9084], \"valid\", [], \"NV8\"], [[9085, 9114], \"valid\", [], \"NV8\"], [[9115, 9166], \"valid\", [], \"NV8\"], [[9167, 9168], \"valid\", [], \"NV8\"], [[9169, 9179], \"valid\", [], \"NV8\"], [[9180, 9191], \"valid\", [], \"NV8\"], [[9192, 9192], \"valid\", [], \"NV8\"], [[9193, 9203], \"valid\", [], \"NV8\"], [[9204, 9210], \"valid\", [], \"NV8\"], [[9211, 9215], \"disallowed\"], [[9216, 9252], \"valid\", [], \"NV8\"], [[9253, 9254], \"valid\", [], \"NV8\"], [[9255, 9279], \"disallowed\"], [[9280, 9290], \"valid\", [], \"NV8\"], [[9291, 9311], \"disallowed\"], [[9312, 9312], \"mapped\", [49]], [[9313, 9313], \"mapped\", [50]], [[9314, 9314], \"mapped\", [51]], [[9315, 9315], \"mapped\", [52]], [[9316, 9316], \"mapped\", [53]], [[9317, 9317], \"mapped\", [54]], [[9318, 9318], \"mapped\", [55]], [[9319, 9319], \"mapped\", [56]], [[9320, 9320], \"mapped\", [57]], [[9321, 9321], \"mapped\", [49, 48]], [[9322, 9322], \"mapped\", [49, 49]], [[9323, 9323], \"mapped\", [49, 50]], [[9324, 9324], \"mapped\", [49, 51]], [[9325, 9325], \"mapped\", [49, 52]], [[9326, 9326], \"mapped\", [49, 53]], [[9327, 9327], \"mapped\", [49, 54]], [[9328, 9328], \"mapped\", [49, 55]], [[9329, 9329], \"mapped\", [49, 56]], [[9330, 9330], \"mapped\", [49, 57]], [[9331, 9331], \"mapped\", [50, 48]], [[9332, 9332], \"disallowed_STD3_mapped\", [40, 49, 41]], [[9333, 9333], \"disallowed_STD3_mapped\", [40, 50, 41]], [[9334, 9334], \"disallowed_STD3_mapped\", [40, 51, 41]], [[9335, 9335], \"disallowed_STD3_mapped\", [40, 52, 41]], [[9336, 9336], \"disallowed_STD3_mapped\", [40, 53, 41]], [[9337, 9337], \"disallowed_STD3_mapped\", [40, 54, 41]], [[9338, 9338], \"disallowed_STD3_mapped\", [40, 55, 41]], [[9339, 9339], \"disallowed_STD3_mapped\", [40, 56, 41]], [[9340, 9340], \"disallowed_STD3_mapped\", [40, 57, 41]], [[9341, 9341], \"disallowed_STD3_mapped\", [40, 49, 48, 41]], [[9342, 9342], \"disallowed_STD3_mapped\", [40, 49, 49, 41]], [[9343, 9343], \"disallowed_STD3_mapped\", [40, 49, 50, 41]], [[9344, 9344], \"disallowed_STD3_mapped\", [40, 49, 51, 41]], [[9345, 9345], \"disallowed_STD3_mapped\", [40, 49, 52, 41]], [[9346, 9346], \"disallowed_STD3_mapped\", [40, 49, 53, 41]], [[9347, 9347], \"disallowed_STD3_mapped\", [40, 49, 54, 41]], [[9348, 9348], \"disallowed_STD3_mapped\", [40, 49, 55, 41]], [[9349, 9349], \"disallowed_STD3_mapped\", [40, 49, 56, 41]], [[9350, 9350], \"disallowed_STD3_mapped\", [40, 49, 57, 41]], [[9351, 9351], \"disallowed_STD3_mapped\", [40, 50, 48, 41]], [[9352, 9371], \"disallowed\"], [[9372, 9372], \"disallowed_STD3_mapped\", [40, 97, 41]], [[9373, 9373], \"disallowed_STD3_mapped\", [40, 98, 41]], [[9374, 9374], \"disallowed_STD3_mapped\", [40, 99, 41]], [[9375, 9375], \"disallowed_STD3_mapped\", [40, 100, 41]], [[9376, 9376], \"disallowed_STD3_mapped\", [40, 101, 41]], [[9377, 9377], \"disallowed_STD3_mapped\", [40, 102, 41]], [[9378, 9378], \"disallowed_STD3_mapped\", [40, 103, 41]], [[9379, 9379], \"disallowed_STD3_mapped\", [40, 104, 41]], [[9380, 9380], \"disallowed_STD3_mapped\", [40, 105, 41]], [[9381, 9381], \"disallowed_STD3_mapped\", [40, 106, 41]], [[9382, 9382], \"disallowed_STD3_mapped\", [40, 107, 41]], [[9383, 9383], \"disallowed_STD3_mapped\", [40, 108, 41]], [[9384, 9384], \"disallowed_STD3_mapped\", [40, 109, 41]], [[9385, 9385], \"disallowed_STD3_mapped\", [40, 110, 41]], [[9386, 9386], \"disallowed_STD3_mapped\", [40, 111, 41]], [[9387, 9387], \"disallowed_STD3_mapped\", [40, 112, 41]], [[9388, 9388], \"disallowed_STD3_mapped\", [40, 113, 41]], [[9389, 9389], \"disallowed_STD3_mapped\", [40, 114, 41]], [[9390, 9390], \"disallowed_STD3_mapped\", [40, 115, 41]], [[9391, 9391], \"disallowed_STD3_mapped\", [40, 116, 41]], [[9392, 9392], \"disallowed_STD3_mapped\", [40, 117, 41]], [[9393, 9393], \"disallowed_STD3_mapped\", [40, 118, 41]], [[9394, 9394], \"disallowed_STD3_mapped\", [40, 119, 41]], [[9395, 9395], \"disallowed_STD3_mapped\", [40, 120, 41]], [[9396, 9396], \"disallowed_STD3_mapped\", [40, 121, 41]], [[9397, 9397], \"disallowed_STD3_mapped\", [40, 122, 41]], [[9398, 9398], \"mapped\", [97]], [[9399, 9399], \"mapped\", [98]], [[9400, 9400], \"mapped\", [99]], [[9401, 9401], \"mapped\", [100]], [[9402, 9402], \"mapped\", [101]], [[9403, 9403], \"mapped\", [102]], [[9404, 9404], \"mapped\", [103]], [[9405, 9405], \"mapped\", [104]], [[9406, 9406], \"mapped\", [105]], [[9407, 9407], \"mapped\", [106]], [[9408, 9408], \"mapped\", [107]], [[9409, 9409], \"mapped\", [108]], [[9410, 9410], \"mapped\", [109]], [[9411, 9411], \"mapped\", [110]], [[9412, 9412], \"mapped\", [111]], [[9413, 9413], \"mapped\", [112]], [[9414, 9414], \"mapped\", [113]], [[9415, 9415], \"mapped\", [114]], [[9416, 9416], \"mapped\", [115]], [[9417, 9417], \"mapped\", [116]], [[9418, 9418], \"mapped\", [117]], [[9419, 9419], \"mapped\", [118]], [[9420, 9420], \"mapped\", [119]], [[9421, 9421], \"mapped\", [120]], [[9422, 9422], \"mapped\", [121]], [[9423, 9423], \"mapped\", [122]], [[9424, 9424], \"mapped\", [97]], [[9425, 9425], \"mapped\", [98]], [[9426, 9426], \"mapped\", [99]], [[9427, 9427], \"mapped\", [100]], [[9428, 9428], \"mapped\", [101]], [[9429, 9429], \"mapped\", [102]], [[9430, 9430], \"mapped\", [103]], [[9431, 9431], \"mapped\", [104]], [[9432, 9432], \"mapped\", [105]], [[9433, 9433], \"mapped\", [106]], [[9434, 9434], \"mapped\", [107]], [[9435, 9435], \"mapped\", [108]], [[9436, 9436], \"mapped\", [109]], [[9437, 9437], \"mapped\", [110]], [[9438, 9438], \"mapped\", [111]], [[9439, 9439], \"mapped\", [112]], [[9440, 9440], \"mapped\", [113]], [[9441, 9441], \"mapped\", [114]], [[9442, 9442], \"mapped\", [115]], [[9443, 9443], \"mapped\", [116]], [[9444, 9444], \"mapped\", [117]], [[9445, 9445], \"mapped\", [118]], [[9446, 9446], \"mapped\", [119]], [[9447, 9447], \"mapped\", [120]], [[9448, 9448], \"mapped\", [121]], [[9449, 9449], \"mapped\", [122]], [[9450, 9450], \"mapped\", [48]], [[9451, 9470], \"valid\", [], \"NV8\"], [[9471, 9471], \"valid\", [], \"NV8\"], [[9472, 9621], \"valid\", [], \"NV8\"], [[9622, 9631], \"valid\", [], \"NV8\"], [[9632, 9711], \"valid\", [], \"NV8\"], [[9712, 9719], \"valid\", [], \"NV8\"], [[9720, 9727], \"valid\", [], \"NV8\"], [[9728, 9747], \"valid\", [], \"NV8\"], [[9748, 9749], \"valid\", [], \"NV8\"], [[9750, 9751], \"valid\", [], \"NV8\"], [[9752, 9752], \"valid\", [], \"NV8\"], [[9753, 9753], \"valid\", [], \"NV8\"], [[9754, 9839], \"valid\", [], \"NV8\"], [[9840, 9841], \"valid\", [], \"NV8\"], [[9842, 9853], \"valid\", [], \"NV8\"], [[9854, 9855], \"valid\", [], \"NV8\"], [[9856, 9865], \"valid\", [], \"NV8\"], [[9866, 9873], \"valid\", [], \"NV8\"], [[9874, 9884], \"valid\", [], \"NV8\"], [[9885, 9885], \"valid\", [], \"NV8\"], [[9886, 9887], \"valid\", [], \"NV8\"], [[9888, 9889], \"valid\", [], \"NV8\"], [[9890, 9905], \"valid\", [], \"NV8\"], [[9906, 9906], \"valid\", [], \"NV8\"], [[9907, 9916], \"valid\", [], \"NV8\"], [[9917, 9919], \"valid\", [], \"NV8\"], [[9920, 9923], \"valid\", [], \"NV8\"], [[9924, 9933], \"valid\", [], \"NV8\"], [[9934, 9934], \"valid\", [], \"NV8\"], [[9935, 9953], \"valid\", [], \"NV8\"], [[9954, 9954], \"valid\", [], \"NV8\"], [[9955, 9955], \"valid\", [], \"NV8\"], [[9956, 9959], \"valid\", [], \"NV8\"], [[9960, 9983], \"valid\", [], \"NV8\"], [[9984, 9984], \"valid\", [], \"NV8\"], [[9985, 9988], \"valid\", [], \"NV8\"], [[9989, 9989], \"valid\", [], \"NV8\"], [[9990, 9993], \"valid\", [], \"NV8\"], [[9994, 9995], \"valid\", [], \"NV8\"], [[9996, 10023], \"valid\", [], \"NV8\"], [[10024, 10024], \"valid\", [], \"NV8\"], [[10025, 10059], \"valid\", [], \"NV8\"], [[10060, 10060], \"valid\", [], \"NV8\"], [[10061, 10061], \"valid\", [], \"NV8\"], [[10062, 10062], \"valid\", [], \"NV8\"], [[10063, 10066], \"valid\", [], \"NV8\"], [[10067, 10069], \"valid\", [], \"NV8\"], [[10070, 10070], \"valid\", [], \"NV8\"], [[10071, 10071], \"valid\", [], \"NV8\"], [[10072, 10078], \"valid\", [], \"NV8\"], [[10079, 10080], \"valid\", [], \"NV8\"], [[10081, 10087], \"valid\", [], \"NV8\"], [[10088, 10101], \"valid\", [], \"NV8\"], [[10102, 10132], \"valid\", [], \"NV8\"], [[10133, 10135], \"valid\", [], \"NV8\"], [[10136, 10159], \"valid\", [], \"NV8\"], [[10160, 10160], \"valid\", [], \"NV8\"], [[10161, 10174], \"valid\", [], \"NV8\"], [[10175, 10175], \"valid\", [], \"NV8\"], [[10176, 10182], \"valid\", [], \"NV8\"], [[10183, 10186], \"valid\", [], \"NV8\"], [[10187, 10187], \"valid\", [], \"NV8\"], [[10188, 10188], \"valid\", [], \"NV8\"], [[10189, 10189], \"valid\", [], \"NV8\"], [[10190, 10191], \"valid\", [], \"NV8\"], [[10192, 10219], \"valid\", [], \"NV8\"], [[10220, 10223], \"valid\", [], \"NV8\"], [[10224, 10239], \"valid\", [], \"NV8\"], [[10240, 10495], \"valid\", [], \"NV8\"], [[10496, 10763], \"valid\", [], \"NV8\"], [[10764, 10764], \"mapped\", [8747, 8747, 8747, 8747]], [[10765, 10867], \"valid\", [], \"NV8\"], [[10868, 10868], \"disallowed_STD3_mapped\", [58, 58, 61]], [[10869, 10869], \"disallowed_STD3_mapped\", [61, 61]], [[10870, 10870], \"disallowed_STD3_mapped\", [61, 61, 61]], [[10871, 10971], \"valid\", [], \"NV8\"], [[10972, 10972], \"mapped\", [10973, 824]], [[10973, 11007], \"valid\", [], \"NV8\"], [[11008, 11021], \"valid\", [], \"NV8\"], [[11022, 11027], \"valid\", [], \"NV8\"], [[11028, 11034], \"valid\", [], \"NV8\"], [[11035, 11039], \"valid\", [], \"NV8\"], [[11040, 11043], \"valid\", [], \"NV8\"], [[11044, 11084], \"valid\", [], \"NV8\"], [[11085, 11087], \"valid\", [], \"NV8\"], [[11088, 11092], \"valid\", [], \"NV8\"], [[11093, 11097], \"valid\", [], \"NV8\"], [[11098, 11123], \"valid\", [], \"NV8\"], [[11124, 11125], \"disallowed\"], [[11126, 11157], \"valid\", [], \"NV8\"], [[11158, 11159], \"disallowed\"], [[11160, 11193], \"valid\", [], \"NV8\"], [[11194, 11196], \"disallowed\"], [[11197, 11208], \"valid\", [], \"NV8\"], [[11209, 11209], \"disallowed\"], [[11210, 11217], \"valid\", [], \"NV8\"], [[11218, 11243], \"disallowed\"], [[11244, 11247], \"valid\", [], \"NV8\"], [[11248, 11263], \"disallowed\"], [[11264, 11264], \"mapped\", [11312]], [[11265, 11265], \"mapped\", [11313]], [[11266, 11266], \"mapped\", [11314]], [[11267, 11267], \"mapped\", [11315]], [[11268, 11268], \"mapped\", [11316]], [[11269, 11269], \"mapped\", [11317]], [[11270, 11270], \"mapped\", [11318]], [[11271, 11271], \"mapped\", [11319]], [[11272, 11272], \"mapped\", [11320]], [[11273, 11273], \"mapped\", [11321]], [[11274, 11274], \"mapped\", [11322]], [[11275, 11275], \"mapped\", [11323]], [[11276, 11276], \"mapped\", [11324]], [[11277, 11277], \"mapped\", [11325]], [[11278, 11278], \"mapped\", [11326]], [[11279, 11279], \"mapped\", [11327]], [[11280, 11280], \"mapped\", [11328]], [[11281, 11281], \"mapped\", [11329]], [[11282, 11282], \"mapped\", [11330]], [[11283, 11283], \"mapped\", [11331]], [[11284, 11284], \"mapped\", [11332]], [[11285, 11285], \"mapped\", [11333]], [[11286, 11286], \"mapped\", [11334]], [[11287, 11287], \"mapped\", [11335]], [[11288, 11288], \"mapped\", [11336]], [[11289, 11289], \"mapped\", [11337]], [[11290, 11290], \"mapped\", [11338]], [[11291, 11291], \"mapped\", [11339]], [[11292, 11292], \"mapped\", [11340]], [[11293, 11293], \"mapped\", [11341]], [[11294, 11294], \"mapped\", [11342]], [[11295, 11295], \"mapped\", [11343]], [[11296, 11296], \"mapped\", [11344]], [[11297, 11297], \"mapped\", [11345]], [[11298, 11298], \"mapped\", [11346]], [[11299, 11299], \"mapped\", [11347]], [[11300, 11300], \"mapped\", [11348]], [[11301, 11301], \"mapped\", [11349]], [[11302, 11302], \"mapped\", [11350]], [[11303, 11303], \"mapped\", [11351]], [[11304, 11304], \"mapped\", [11352]], [[11305, 11305], \"mapped\", [11353]], [[11306, 11306], \"mapped\", [11354]], [[11307, 11307], \"mapped\", [11355]], [[11308, 11308], \"mapped\", [11356]], [[11309, 11309], \"mapped\", [11357]], [[11310, 11310], \"mapped\", [11358]], [[11311, 11311], \"disallowed\"], [[11312, 11358], \"valid\"], [[11359, 11359], \"disallowed\"], [[11360, 11360], \"mapped\", [11361]], [[11361, 11361], \"valid\"], [[11362, 11362], \"mapped\", [619]], [[11363, 11363], \"mapped\", [7549]], [[11364, 11364], \"mapped\", [637]], [[11365, 11366], \"valid\"], [[11367, 11367], \"mapped\", [11368]], [[11368, 11368], \"valid\"], [[11369, 11369], \"mapped\", [11370]], [[11370, 11370], \"valid\"], [[11371, 11371], \"mapped\", [11372]], [[11372, 11372], \"valid\"], [[11373, 11373], \"mapped\", [593]], [[11374, 11374], \"mapped\", [625]], [[11375, 11375], \"mapped\", [592]], [[11376, 11376], \"mapped\", [594]], [[11377, 11377], \"valid\"], [[11378, 11378], \"mapped\", [11379]], [[11379, 11379], \"valid\"], [[11380, 11380], \"valid\"], [[11381, 11381], \"mapped\", [11382]], [[11382, 11383], \"valid\"], [[11384, 11387], \"valid\"], [[11388, 11388], \"mapped\", [106]], [[11389, 11389], \"mapped\", [118]], [[11390, 11390], \"mapped\", [575]], [[11391, 11391], \"mapped\", [576]], [[11392, 11392], \"mapped\", [11393]], [[11393, 11393], \"valid\"], [[11394, 11394], \"mapped\", [11395]], [[11395, 11395], \"valid\"], [[11396, 11396], \"mapped\", [11397]], [[11397, 11397], \"valid\"], [[11398, 11398], \"mapped\", [11399]], [[11399, 11399], \"valid\"], [[11400, 11400], \"mapped\", [11401]], [[11401, 11401], \"valid\"], [[11402, 11402], \"mapped\", [11403]], [[11403, 11403], \"valid\"], [[11404, 11404], \"mapped\", [11405]], [[11405, 11405], \"valid\"], [[11406, 11406], \"mapped\", [11407]], [[11407, 11407], \"valid\"], [[11408, 11408], \"mapped\", [11409]], [[11409, 11409], \"valid\"], [[11410, 11410], \"mapped\", [11411]], [[11411, 11411], \"valid\"], [[11412, 11412], \"mapped\", [11413]], [[11413, 11413], \"valid\"], [[11414, 11414], \"mapped\", [11415]], [[11415, 11415], \"valid\"], [[11416, 11416], \"mapped\", [11417]], [[11417, 11417], \"valid\"], [[11418, 11418], \"mapped\", [11419]], [[11419, 11419], \"valid\"], [[11420, 11420], \"mapped\", [11421]], [[11421, 11421], \"valid\"], [[11422, 11422], \"mapped\", [11423]], [[11423, 11423], \"valid\"], [[11424, 11424], \"mapped\", [11425]], [[11425, 11425], \"valid\"], [[11426, 11426], \"mapped\", [11427]], [[11427, 11427], \"valid\"], [[11428, 11428], \"mapped\", [11429]], [[11429, 11429], \"valid\"], [[11430, 11430], \"mapped\", [11431]], [[11431, 11431], \"valid\"], [[11432, 11432], \"mapped\", [11433]], [[11433, 11433], \"valid\"], [[11434, 11434], \"mapped\", [11435]], [[11435, 11435], \"valid\"], [[11436, 11436], \"mapped\", [11437]], [[11437, 11437], \"valid\"], [[11438, 11438], \"mapped\", [11439]], [[11439, 11439], \"valid\"], [[11440, 11440], \"mapped\", [11441]], [[11441, 11441], \"valid\"], [[11442, 11442], \"mapped\", [11443]], [[11443, 11443], \"valid\"], [[11444, 11444], \"mapped\", [11445]], [[11445, 11445], \"valid\"], [[11446, 11446], \"mapped\", [11447]], [[11447, 11447], \"valid\"], [[11448, 11448], \"mapped\", [11449]], [[11449, 11449], \"valid\"], [[11450, 11450], \"mapped\", [11451]], [[11451, 11451], \"valid\"], [[11452, 11452], \"mapped\", [11453]], [[11453, 11453], \"valid\"], [[11454, 11454], \"mapped\", [11455]], [[11455, 11455], \"valid\"], [[11456, 11456], \"mapped\", [11457]], [[11457, 11457], \"valid\"], [[11458, 11458], \"mapped\", [11459]], [[11459, 11459], \"valid\"], [[11460, 11460], \"mapped\", [11461]], [[11461, 11461], \"valid\"], [[11462, 11462], \"mapped\", [11463]], [[11463, 11463], \"valid\"], [[11464, 11464], \"mapped\", [11465]], [[11465, 11465], \"valid\"], [[11466, 11466], \"mapped\", [11467]], [[11467, 11467], \"valid\"], [[11468, 11468], \"mapped\", [11469]], [[11469, 11469], \"valid\"], [[11470, 11470], \"mapped\", [11471]], [[11471, 11471], \"valid\"], [[11472, 11472], \"mapped\", [11473]], [[11473, 11473], \"valid\"], [[11474, 11474], \"mapped\", [11475]], [[11475, 11475], \"valid\"], [[11476, 11476], \"mapped\", [11477]], [[11477, 11477], \"valid\"], [[11478, 11478], \"mapped\", [11479]], [[11479, 11479], \"valid\"], [[11480, 11480], \"mapped\", [11481]], [[11481, 11481], \"valid\"], [[11482, 11482], \"mapped\", [11483]], [[11483, 11483], \"valid\"], [[11484, 11484], \"mapped\", [11485]], [[11485, 11485], \"valid\"], [[11486, 11486], \"mapped\", [11487]], [[11487, 11487], \"valid\"], [[11488, 11488], \"mapped\", [11489]], [[11489, 11489], \"valid\"], [[11490, 11490], \"mapped\", [11491]], [[11491, 11492], \"valid\"], [[11493, 11498], \"valid\", [], \"NV8\"], [[11499, 11499], \"mapped\", [11500]], [[11500, 11500], \"valid\"], [[11501, 11501], \"mapped\", [11502]], [[11502, 11505], \"valid\"], [[11506, 11506], \"mapped\", [11507]], [[11507, 11507], \"valid\"], [[11508, 11512], \"disallowed\"], [[11513, 11519], \"valid\", [], \"NV8\"], [[11520, 11557], \"valid\"], [[11558, 11558], \"disallowed\"], [[11559, 11559], \"valid\"], [[11560, 11564], \"disallowed\"], [[11565, 11565], \"valid\"], [[11566, 11567], \"disallowed\"], [[11568, 11621], \"valid\"], [[11622, 11623], \"valid\"], [[11624, 11630], \"disallowed\"], [[11631, 11631], \"mapped\", [11617]], [[11632, 11632], \"valid\", [], \"NV8\"], [[11633, 11646], \"disallowed\"], [[11647, 11647], \"valid\"], [[11648, 11670], \"valid\"], [[11671, 11679], \"disallowed\"], [[11680, 11686], \"valid\"], [[11687, 11687], \"disallowed\"], [[11688, 11694], \"valid\"], [[11695, 11695], \"disallowed\"], [[11696, 11702], \"valid\"], [[11703, 11703], \"disallowed\"], [[11704, 11710], \"valid\"], [[11711, 11711], \"disallowed\"], [[11712, 11718], \"valid\"], [[11719, 11719], \"disallowed\"], [[11720, 11726], \"valid\"], [[11727, 11727], \"disallowed\"], [[11728, 11734], \"valid\"], [[11735, 11735], \"disallowed\"], [[11736, 11742], \"valid\"], [[11743, 11743], \"disallowed\"], [[11744, 11775], \"valid\"], [[11776, 11799], \"valid\", [], \"NV8\"], [[11800, 11803], \"valid\", [], \"NV8\"], [[11804, 11805], \"valid\", [], \"NV8\"], [[11806, 11822], \"valid\", [], \"NV8\"], [[11823, 11823], \"valid\"], [[11824, 11824], \"valid\", [], \"NV8\"], [[11825, 11825], \"valid\", [], \"NV8\"], [[11826, 11835], \"valid\", [], \"NV8\"], [[11836, 11842], \"valid\", [], \"NV8\"], [[11843, 11903], \"disallowed\"], [[11904, 11929], \"valid\", [], \"NV8\"], [[11930, 11930], \"disallowed\"], [[11931, 11934], \"valid\", [], \"NV8\"], [[11935, 11935], \"mapped\", [27597]], [[11936, 12018], \"valid\", [], \"NV8\"], [[12019, 12019], \"mapped\", [40863]], [[12020, 12031], \"disallowed\"], [[12032, 12032], \"mapped\", [19968]], [[12033, 12033], \"mapped\", [20008]], [[12034, 12034], \"mapped\", [20022]], [[12035, 12035], \"mapped\", [20031]], [[12036, 12036], \"mapped\", [20057]], [[12037, 12037], \"mapped\", [20101]], [[12038, 12038], \"mapped\", [20108]], [[12039, 12039], \"mapped\", [20128]], [[12040, 12040], \"mapped\", [20154]], [[12041, 12041], \"mapped\", [20799]], [[12042, 12042], \"mapped\", [20837]], [[12043, 12043], \"mapped\", [20843]], [[12044, 12044], \"mapped\", [20866]], [[12045, 12045], \"mapped\", [20886]], [[12046, 12046], \"mapped\", [20907]], [[12047, 12047], \"mapped\", [20960]], [[12048, 12048], \"mapped\", [20981]], [[12049, 12049], \"mapped\", [20992]], [[12050, 12050], \"mapped\", [21147]], [[12051, 12051], \"mapped\", [21241]], [[12052, 12052], \"mapped\", [21269]], [[12053, 12053], \"mapped\", [21274]], [[12054, 12054], \"mapped\", [21304]], [[12055, 12055], \"mapped\", [21313]], [[12056, 12056], \"mapped\", [21340]], [[12057, 12057], \"mapped\", [21353]], [[12058, 12058], \"mapped\", [21378]], [[12059, 12059], \"mapped\", [21430]], [[12060, 12060], \"mapped\", [21448]], [[12061, 12061], \"mapped\", [21475]], [[12062, 12062], \"mapped\", [22231]], [[12063, 12063], \"mapped\", [22303]], [[12064, 12064], \"mapped\", [22763]], [[12065, 12065], \"mapped\", [22786]], [[12066, 12066], \"mapped\", [22794]], [[12067, 12067], \"mapped\", [22805]], [[12068, 12068], \"mapped\", [22823]], [[12069, 12069], \"mapped\", [22899]], [[12070, 12070], \"mapped\", [23376]], [[12071, 12071], \"mapped\", [23424]], [[12072, 12072], \"mapped\", [23544]], [[12073, 12073], \"mapped\", [23567]], [[12074, 12074], \"mapped\", [23586]], [[12075, 12075], \"mapped\", [23608]], [[12076, 12076], \"mapped\", [23662]], [[12077, 12077], \"mapped\", [23665]], [[12078, 12078], \"mapped\", [24027]], [[12079, 12079], \"mapped\", [24037]], [[12080, 12080], \"mapped\", [24049]], [[12081, 12081], \"mapped\", [24062]], [[12082, 12082], \"mapped\", [24178]], [[12083, 12083], \"mapped\", [24186]], [[12084, 12084], \"mapped\", [24191]], [[12085, 12085], \"mapped\", [24308]], [[12086, 12086], \"mapped\", [24318]], [[12087, 12087], \"mapped\", [24331]], [[12088, 12088], \"mapped\", [24339]], [[12089, 12089], \"mapped\", [24400]], [[12090, 12090], \"mapped\", [24417]], [[12091, 12091], \"mapped\", [24435]], [[12092, 12092], \"mapped\", [24515]], [[12093, 12093], \"mapped\", [25096]], [[12094, 12094], \"mapped\", [25142]], [[12095, 12095], \"mapped\", [25163]], [[12096, 12096], \"mapped\", [25903]], [[12097, 12097], \"mapped\", [25908]], [[12098, 12098], \"mapped\", [25991]], [[12099, 12099], \"mapped\", [26007]], [[12100, 12100], \"mapped\", [26020]], [[12101, 12101], \"mapped\", [26041]], [[12102, 12102], \"mapped\", [26080]], [[12103, 12103], \"mapped\", [26085]], [[12104, 12104], \"mapped\", [26352]], [[12105, 12105], \"mapped\", [26376]], [[12106, 12106], \"mapped\", [26408]], [[12107, 12107], \"mapped\", [27424]], [[12108, 12108], \"mapped\", [27490]], [[12109, 12109], \"mapped\", [27513]], [[12110, 12110], \"mapped\", [27571]], [[12111, 12111], \"mapped\", [27595]], [[12112, 12112], \"mapped\", [27604]], [[12113, 12113], \"mapped\", [27611]], [[12114, 12114], \"mapped\", [27663]], [[12115, 12115], \"mapped\", [27668]], [[12116, 12116], \"mapped\", [27700]], [[12117, 12117], \"mapped\", [28779]], [[12118, 12118], \"mapped\", [29226]], [[12119, 12119], \"mapped\", [29238]], [[12120, 12120], \"mapped\", [29243]], [[12121, 12121], \"mapped\", [29247]], [[12122, 12122], \"mapped\", [29255]], [[12123, 12123], \"mapped\", [29273]], [[12124, 12124], \"mapped\", [29275]], [[12125, 12125], \"mapped\", [29356]], [[12126, 12126], \"mapped\", [29572]], [[12127, 12127], \"mapped\", [29577]], [[12128, 12128], \"mapped\", [29916]], [[12129, 12129], \"mapped\", [29926]], [[12130, 12130], \"mapped\", [29976]], [[12131, 12131], \"mapped\", [29983]], [[12132, 12132], \"mapped\", [29992]], [[12133, 12133], \"mapped\", [30000]], [[12134, 12134], \"mapped\", [30091]], [[12135, 12135], \"mapped\", [30098]], [[12136, 12136], \"mapped\", [30326]], [[12137, 12137], \"mapped\", [30333]], [[12138, 12138], \"mapped\", [30382]], [[12139, 12139], \"mapped\", [30399]], [[12140, 12140], \"mapped\", [30446]], [[12141, 12141], \"mapped\", [30683]], [[12142, 12142], \"mapped\", [30690]], [[12143, 12143], \"mapped\", [30707]], [[12144, 12144], \"mapped\", [31034]], [[12145, 12145], \"mapped\", [31160]], [[12146, 12146], \"mapped\", [31166]], [[12147, 12147], \"mapped\", [31348]], [[12148, 12148], \"mapped\", [31435]], [[12149, 12149], \"mapped\", [31481]], [[12150, 12150], \"mapped\", [31859]], [[12151, 12151], \"mapped\", [31992]], [[12152, 12152], \"mapped\", [32566]], [[12153, 12153], \"mapped\", [32593]], [[12154, 12154], \"mapped\", [32650]], [[12155, 12155], \"mapped\", [32701]], [[12156, 12156], \"mapped\", [32769]], [[12157, 12157], \"mapped\", [32780]], [[12158, 12158], \"mapped\", [32786]], [[12159, 12159], \"mapped\", [32819]], [[12160, 12160], \"mapped\", [32895]], [[12161, 12161], \"mapped\", [32905]], [[12162, 12162], \"mapped\", [33251]], [[12163, 12163], \"mapped\", [33258]], [[12164, 12164], \"mapped\", [33267]], [[12165, 12165], \"mapped\", [33276]], [[12166, 12166], \"mapped\", [33292]], [[12167, 12167], \"mapped\", [33307]], [[12168, 12168], \"mapped\", [33311]], [[12169, 12169], \"mapped\", [33390]], [[12170, 12170], \"mapped\", [33394]], [[12171, 12171], \"mapped\", [33400]], [[12172, 12172], \"mapped\", [34381]], [[12173, 12173], \"mapped\", [34411]], [[12174, 12174], \"mapped\", [34880]], [[12175, 12175], \"mapped\", [34892]], [[12176, 12176], \"mapped\", [34915]], [[12177, 12177], \"mapped\", [35198]], [[12178, 12178], \"mapped\", [35211]], [[12179, 12179], \"mapped\", [35282]], [[12180, 12180], \"mapped\", [35328]], [[12181, 12181], \"mapped\", [35895]], [[12182, 12182], \"mapped\", [35910]], [[12183, 12183], \"mapped\", [35925]], [[12184, 12184], \"mapped\", [35960]], [[12185, 12185], \"mapped\", [35997]], [[12186, 12186], \"mapped\", [36196]], [[12187, 12187], \"mapped\", [36208]], [[12188, 12188], \"mapped\", [36275]], [[12189, 12189], \"mapped\", [36523]], [[12190, 12190], \"mapped\", [36554]], [[12191, 12191], \"mapped\", [36763]], [[12192, 12192], \"mapped\", [36784]], [[12193, 12193], \"mapped\", [36789]], [[12194, 12194], \"mapped\", [37009]], [[12195, 12195], \"mapped\", [37193]], [[12196, 12196], \"mapped\", [37318]], [[12197, 12197], \"mapped\", [37324]], [[12198, 12198], \"mapped\", [37329]], [[12199, 12199], \"mapped\", [38263]], [[12200, 12200], \"mapped\", [38272]], [[12201, 12201], \"mapped\", [38428]], [[12202, 12202], \"mapped\", [38582]], [[12203, 12203], \"mapped\", [38585]], [[12204, 12204], \"mapped\", [38632]], [[12205, 12205], \"mapped\", [38737]], [[12206, 12206], \"mapped\", [38750]], [[12207, 12207], \"mapped\", [38754]], [[12208, 12208], \"mapped\", [38761]], [[12209, 12209], \"mapped\", [38859]], [[12210, 12210], \"mapped\", [38893]], [[12211, 12211], \"mapped\", [38899]], [[12212, 12212], \"mapped\", [38913]], [[12213, 12213], \"mapped\", [39080]], [[12214, 12214], \"mapped\", [39131]], [[12215, 12215], \"mapped\", [39135]], [[12216, 12216], \"mapped\", [39318]], [[12217, 12217], \"mapped\", [39321]], [[12218, 12218], \"mapped\", [39340]], [[12219, 12219], \"mapped\", [39592]], [[12220, 12220], \"mapped\", [39640]], [[12221, 12221], \"mapped\", [39647]], [[12222, 12222], \"mapped\", [39717]], [[12223, 12223], \"mapped\", [39727]], [[12224, 12224], \"mapped\", [39730]], [[12225, 12225], \"mapped\", [39740]], [[12226, 12226], \"mapped\", [39770]], [[12227, 12227], \"mapped\", [40165]], [[12228, 12228], \"mapped\", [40565]], [[12229, 12229], \"mapped\", [40575]], [[12230, 12230], \"mapped\", [40613]], [[12231, 12231], \"mapped\", [40635]], [[12232, 12232], \"mapped\", [40643]], [[12233, 12233], \"mapped\", [40653]], [[12234, 12234], \"mapped\", [40657]], [[12235, 12235], \"mapped\", [40697]], [[12236, 12236], \"mapped\", [40701]], [[12237, 12237], \"mapped\", [40718]], [[12238, 12238], \"mapped\", [40723]], [[12239, 12239], \"mapped\", [40736]], [[12240, 12240], \"mapped\", [40763]], [[12241, 12241], \"mapped\", [40778]], [[12242, 12242], \"mapped\", [40786]], [[12243, 12243], \"mapped\", [40845]], [[12244, 12244], \"mapped\", [40860]], [[12245, 12245], \"mapped\", [40864]], [[12246, 12271], \"disallowed\"], [[12272, 12283], \"disallowed\"], [[12284, 12287], \"disallowed\"], [[12288, 12288], \"disallowed_STD3_mapped\", [32]], [[12289, 12289], \"valid\", [], \"NV8\"], [[12290, 12290], \"mapped\", [46]], [[12291, 12292], \"valid\", [], \"NV8\"], [[12293, 12295], \"valid\"], [[12296, 12329], \"valid\", [], \"NV8\"], [[12330, 12333], \"valid\"], [[12334, 12341], \"valid\", [], \"NV8\"], [[12342, 12342], \"mapped\", [12306]], [[12343, 12343], \"valid\", [], \"NV8\"], [[12344, 12344], \"mapped\", [21313]], [[12345, 12345], \"mapped\", [21316]], [[12346, 12346], \"mapped\", [21317]], [[12347, 12347], \"valid\", [], \"NV8\"], [[12348, 12348], \"valid\"], [[12349, 12349], \"valid\", [], \"NV8\"], [[12350, 12350], \"valid\", [], \"NV8\"], [[12351, 12351], \"valid\", [], \"NV8\"], [[12352, 12352], \"disallowed\"], [[12353, 12436], \"valid\"], [[12437, 12438], \"valid\"], [[12439, 12440], \"disallowed\"], [[12441, 12442], \"valid\"], [[12443, 12443], \"disallowed_STD3_mapped\", [32, 12441]], [[12444, 12444], \"disallowed_STD3_mapped\", [32, 12442]], [[12445, 12446], \"valid\"], [[12447, 12447], \"mapped\", [12424, 12426]], [[12448, 12448], \"valid\", [], \"NV8\"], [[12449, 12542], \"valid\"], [[12543, 12543], \"mapped\", [12467, 12488]], [[12544, 12548], \"disallowed\"], [[12549, 12588], \"valid\"], [[12589, 12589], \"valid\"], [[12590, 12592], \"disallowed\"], [[12593, 12593], \"mapped\", [4352]], [[12594, 12594], \"mapped\", [4353]], [[12595, 12595], \"mapped\", [4522]], [[12596, 12596], \"mapped\", [4354]], [[12597, 12597], \"mapped\", [4524]], [[12598, 12598], \"mapped\", [4525]], [[12599, 12599], \"mapped\", [4355]], [[12600, 12600], \"mapped\", [4356]], [[12601, 12601], \"mapped\", [4357]], [[12602, 12602], \"mapped\", [4528]], [[12603, 12603], \"mapped\", [4529]], [[12604, 12604], \"mapped\", [4530]], [[12605, 12605], \"mapped\", [4531]], [[12606, 12606], \"mapped\", [4532]], [[12607, 12607], \"mapped\", [4533]], [[12608, 12608], \"mapped\", [4378]], [[12609, 12609], \"mapped\", [4358]], [[12610, 12610], \"mapped\", [4359]], [[12611, 12611], \"mapped\", [4360]], [[12612, 12612], \"mapped\", [4385]], [[12613, 12613], \"mapped\", [4361]], [[12614, 12614], \"mapped\", [4362]], [[12615, 12615], \"mapped\", [4363]], [[12616, 12616], \"mapped\", [4364]], [[12617, 12617], \"mapped\", [4365]], [[12618, 12618], \"mapped\", [4366]], [[12619, 12619], \"mapped\", [4367]], [[12620, 12620], \"mapped\", [4368]], [[12621, 12621], \"mapped\", [4369]], [[12622, 12622], \"mapped\", [4370]], [[12623, 12623], \"mapped\", [4449]], [[12624, 12624], \"mapped\", [4450]], [[12625, 12625], \"mapped\", [4451]], [[12626, 12626], \"mapped\", [4452]], [[12627, 12627], \"mapped\", [4453]], [[12628, 12628], \"mapped\", [4454]], [[12629, 12629], \"mapped\", [4455]], [[12630, 12630], \"mapped\", [4456]], [[12631, 12631], \"mapped\", [4457]], [[12632, 12632], \"mapped\", [4458]], [[12633, 12633], \"mapped\", [4459]], [[12634, 12634], \"mapped\", [4460]], [[12635, 12635], \"mapped\", [4461]], [[12636, 12636], \"mapped\", [4462]], [[12637, 12637], \"mapped\", [4463]], [[12638, 12638], \"mapped\", [4464]], [[12639, 12639], \"mapped\", [4465]], [[12640, 12640], \"mapped\", [4466]], [[12641, 12641], \"mapped\", [4467]], [[12642, 12642], \"mapped\", [4468]], [[12643, 12643], \"mapped\", [4469]], [[12644, 12644], \"disallowed\"], [[12645, 12645], \"mapped\", [4372]], [[12646, 12646], \"mapped\", [4373]], [[12647, 12647], \"mapped\", [4551]], [[12648, 12648], \"mapped\", [4552]], [[12649, 12649], \"mapped\", [4556]], [[12650, 12650], \"mapped\", [4558]], [[12651, 12651], \"mapped\", [4563]], [[12652, 12652], \"mapped\", [4567]], [[12653, 12653], \"mapped\", [4569]], [[12654, 12654], \"mapped\", [4380]], [[12655, 12655], \"mapped\", [4573]], [[12656, 12656], \"mapped\", [4575]], [[12657, 12657], \"mapped\", [4381]], [[12658, 12658], \"mapped\", [4382]], [[12659, 12659], \"mapped\", [4384]], [[12660, 12660], \"mapped\", [4386]], [[12661, 12661], \"mapped\", [4387]], [[12662, 12662], \"mapped\", [4391]], [[12663, 12663], \"mapped\", [4393]], [[12664, 12664], \"mapped\", [4395]], [[12665, 12665], \"mapped\", [4396]], [[12666, 12666], \"mapped\", [4397]], [[12667, 12667], \"mapped\", [4398]], [[12668, 12668], \"mapped\", [4399]], [[12669, 12669], \"mapped\", [4402]], [[12670, 12670], \"mapped\", [4406]], [[12671, 12671], \"mapped\", [4416]], [[12672, 12672], \"mapped\", [4423]], [[12673, 12673], \"mapped\", [4428]], [[12674, 12674], \"mapped\", [4593]], [[12675, 12675], \"mapped\", [4594]], [[12676, 12676], \"mapped\", [4439]], [[12677, 12677], \"mapped\", [4440]], [[12678, 12678], \"mapped\", [4441]], [[12679, 12679], \"mapped\", [4484]], [[12680, 12680], \"mapped\", [4485]], [[12681, 12681], \"mapped\", [4488]], [[12682, 12682], \"mapped\", [4497]], [[12683, 12683], \"mapped\", [4498]], [[12684, 12684], \"mapped\", [4500]], [[12685, 12685], \"mapped\", [4510]], [[12686, 12686], \"mapped\", [4513]], [[12687, 12687], \"disallowed\"], [[12688, 12689], \"valid\", [], \"NV8\"], [[12690, 12690], \"mapped\", [19968]], [[12691, 12691], \"mapped\", [20108]], [[12692, 12692], \"mapped\", [19977]], [[12693, 12693], \"mapped\", [22235]], [[12694, 12694], \"mapped\", [19978]], [[12695, 12695], \"mapped\", [20013]], [[12696, 12696], \"mapped\", [19979]], [[12697, 12697], \"mapped\", [30002]], [[12698, 12698], \"mapped\", [20057]], [[12699, 12699], \"mapped\", [19993]], [[12700, 12700], \"mapped\", [19969]], [[12701, 12701], \"mapped\", [22825]], [[12702, 12702], \"mapped\", [22320]], [[12703, 12703], \"mapped\", [20154]], [[12704, 12727], \"valid\"], [[12728, 12730], \"valid\"], [[12731, 12735], \"disallowed\"], [[12736, 12751], \"valid\", [], \"NV8\"], [[12752, 12771], \"valid\", [], \"NV8\"], [[12772, 12783], \"disallowed\"], [[12784, 12799], \"valid\"], [[12800, 12800], \"disallowed_STD3_mapped\", [40, 4352, 41]], [[12801, 12801], \"disallowed_STD3_mapped\", [40, 4354, 41]], [[12802, 12802], \"disallowed_STD3_mapped\", [40, 4355, 41]], [[12803, 12803], \"disallowed_STD3_mapped\", [40, 4357, 41]], [[12804, 12804], \"disallowed_STD3_mapped\", [40, 4358, 41]], [[12805, 12805], \"disallowed_STD3_mapped\", [40, 4359, 41]], [[12806, 12806], \"disallowed_STD3_mapped\", [40, 4361, 41]], [[12807, 12807], \"disallowed_STD3_mapped\", [40, 4363, 41]], [[12808, 12808], \"disallowed_STD3_mapped\", [40, 4364, 41]], [[12809, 12809], \"disallowed_STD3_mapped\", [40, 4366, 41]], [[12810, 12810], \"disallowed_STD3_mapped\", [40, 4367, 41]], [[12811, 12811], \"disallowed_STD3_mapped\", [40, 4368, 41]], [[12812, 12812], \"disallowed_STD3_mapped\", [40, 4369, 41]], [[12813, 12813], \"disallowed_STD3_mapped\", [40, 4370, 41]], [[12814, 12814], \"disallowed_STD3_mapped\", [40, 44032, 41]], [[12815, 12815], \"disallowed_STD3_mapped\", [40, 45208, 41]], [[12816, 12816], \"disallowed_STD3_mapped\", [40, 45796, 41]], [[12817, 12817], \"disallowed_STD3_mapped\", [40, 46972, 41]], [[12818, 12818], \"disallowed_STD3_mapped\", [40, 47560, 41]], [[12819, 12819], \"disallowed_STD3_mapped\", [40, 48148, 41]], [[12820, 12820], \"disallowed_STD3_mapped\", [40, 49324, 41]], [[12821, 12821], \"disallowed_STD3_mapped\", [40, 50500, 41]], [[12822, 12822], \"disallowed_STD3_mapped\", [40, 51088, 41]], [[12823, 12823], \"disallowed_STD3_mapped\", [40, 52264, 41]], [[12824, 12824], \"disallowed_STD3_mapped\", [40, 52852, 41]], [[12825, 12825], \"disallowed_STD3_mapped\", [40, 53440, 41]], [[12826, 12826], \"disallowed_STD3_mapped\", [40, 54028, 41]], [[12827, 12827], \"disallowed_STD3_mapped\", [40, 54616, 41]], [[12828, 12828], \"disallowed_STD3_mapped\", [40, 51452, 41]], [[12829, 12829], \"disallowed_STD3_mapped\", [40, 50724, 51204, 41]], [[12830, 12830], \"disallowed_STD3_mapped\", [40, 50724, 54980, 41]], [[12831, 12831], \"disallowed\"], [[12832, 12832], \"disallowed_STD3_mapped\", [40, 19968, 41]], [[12833, 12833], \"disallowed_STD3_mapped\", [40, 20108, 41]], [[12834, 12834], \"disallowed_STD3_mapped\", [40, 19977, 41]], [[12835, 12835], \"disallowed_STD3_mapped\", [40, 22235, 41]], [[12836, 12836], \"disallowed_STD3_mapped\", [40, 20116, 41]], [[12837, 12837], \"disallowed_STD3_mapped\", [40, 20845, 41]], [[12838, 12838], \"disallowed_STD3_mapped\", [40, 19971, 41]], [[12839, 12839], \"disallowed_STD3_mapped\", [40, 20843, 41]], [[12840, 12840], \"disallowed_STD3_mapped\", [40, 20061, 41]], [[12841, 12841], \"disallowed_STD3_mapped\", [40, 21313, 41]], [[12842, 12842], \"disallowed_STD3_mapped\", [40, 26376, 41]], [[12843, 12843], \"disallowed_STD3_mapped\", [40, 28779, 41]], [[12844, 12844], \"disallowed_STD3_mapped\", [40, 27700, 41]], [[12845, 12845], \"disallowed_STD3_mapped\", [40, 26408, 41]], [[12846, 12846], \"disallowed_STD3_mapped\", [40, 37329, 41]], [[12847, 12847], \"disallowed_STD3_mapped\", [40, 22303, 41]], [[12848, 12848], \"disallowed_STD3_mapped\", [40, 26085, 41]], [[12849, 12849], \"disallowed_STD3_mapped\", [40, 26666, 41]], [[12850, 12850], \"disallowed_STD3_mapped\", [40, 26377, 41]], [[12851, 12851], \"disallowed_STD3_mapped\", [40, 31038, 41]], [[12852, 12852], \"disallowed_STD3_mapped\", [40, 21517, 41]], [[12853, 12853], \"disallowed_STD3_mapped\", [40, 29305, 41]], [[12854, 12854], \"disallowed_STD3_mapped\", [40, 36001, 41]], [[12855, 12855], \"disallowed_STD3_mapped\", [40, 31069, 41]], [[12856, 12856], \"disallowed_STD3_mapped\", [40, 21172, 41]], [[12857, 12857], \"disallowed_STD3_mapped\", [40, 20195, 41]], [[12858, 12858], \"disallowed_STD3_mapped\", [40, 21628, 41]], [[12859, 12859], \"disallowed_STD3_mapped\", [40, 23398, 41]], [[12860, 12860], \"disallowed_STD3_mapped\", [40, 30435, 41]], [[12861, 12861], \"disallowed_STD3_mapped\", [40, 20225, 41]], [[12862, 12862], \"disallowed_STD3_mapped\", [40, 36039, 41]], [[12863, 12863], \"disallowed_STD3_mapped\", [40, 21332, 41]], [[12864, 12864], \"disallowed_STD3_mapped\", [40, 31085, 41]], [[12865, 12865], \"disallowed_STD3_mapped\", [40, 20241, 41]], [[12866, 12866], \"disallowed_STD3_mapped\", [40, 33258, 41]], [[12867, 12867], \"disallowed_STD3_mapped\", [40, 33267, 41]], [[12868, 12868], \"mapped\", [21839]], [[12869, 12869], \"mapped\", [24188]], [[12870, 12870], \"mapped\", [25991]], [[12871, 12871], \"mapped\", [31631]], [[12872, 12879], \"valid\", [], \"NV8\"], [[12880, 12880], \"mapped\", [112, 116, 101]], [[12881, 12881], \"mapped\", [50, 49]], [[12882, 12882], \"mapped\", [50, 50]], [[12883, 12883], \"mapped\", [50, 51]], [[12884, 12884], \"mapped\", [50, 52]], [[12885, 12885], \"mapped\", [50, 53]], [[12886, 12886], \"mapped\", [50, 54]], [[12887, 12887], \"mapped\", [50, 55]], [[12888, 12888], \"mapped\", [50, 56]], [[12889, 12889], \"mapped\", [50, 57]], [[12890, 12890], \"mapped\", [51, 48]], [[12891, 12891], \"mapped\", [51, 49]], [[12892, 12892], \"mapped\", [51, 50]], [[12893, 12893], \"mapped\", [51, 51]], [[12894, 12894], \"mapped\", [51, 52]], [[12895, 12895], \"mapped\", [51, 53]], [[12896, 12896], \"mapped\", [4352]], [[12897, 12897], \"mapped\", [4354]], [[12898, 12898], \"mapped\", [4355]], [[12899, 12899], \"mapped\", [4357]], [[12900, 12900], \"mapped\", [4358]], [[12901, 12901], \"mapped\", [4359]], [[12902, 12902], \"mapped\", [4361]], [[12903, 12903], \"mapped\", [4363]], [[12904, 12904], \"mapped\", [4364]], [[12905, 12905], \"mapped\", [4366]], [[12906, 12906], \"mapped\", [4367]], [[12907, 12907], \"mapped\", [4368]], [[12908, 12908], \"mapped\", [4369]], [[12909, 12909], \"mapped\", [4370]], [[12910, 12910], \"mapped\", [44032]], [[12911, 12911], \"mapped\", [45208]], [[12912, 12912], \"mapped\", [45796]], [[12913, 12913], \"mapped\", [46972]], [[12914, 12914], \"mapped\", [47560]], [[12915, 12915], \"mapped\", [48148]], [[12916, 12916], \"mapped\", [49324]], [[12917, 12917], \"mapped\", [50500]], [[12918, 12918], \"mapped\", [51088]], [[12919, 12919], \"mapped\", [52264]], [[12920, 12920], \"mapped\", [52852]], [[12921, 12921], \"mapped\", [53440]], [[12922, 12922], \"mapped\", [54028]], [[12923, 12923], \"mapped\", [54616]], [[12924, 12924], \"mapped\", [52280, 44256]], [[12925, 12925], \"mapped\", [51452, 51032]], [[12926, 12926], \"mapped\", [50864]], [[12927, 12927], \"valid\", [], \"NV8\"], [[12928, 12928], \"mapped\", [19968]], [[12929, 12929], \"mapped\", [20108]], [[12930, 12930], \"mapped\", [19977]], [[12931, 12931], \"mapped\", [22235]], [[12932, 12932], \"mapped\", [20116]], [[12933, 12933], \"mapped\", [20845]], [[12934, 12934], \"mapped\", [19971]], [[12935, 12935], \"mapped\", [20843]], [[12936, 12936], \"mapped\", [20061]], [[12937, 12937], \"mapped\", [21313]], [[12938, 12938], \"mapped\", [26376]], [[12939, 12939], \"mapped\", [28779]], [[12940, 12940], \"mapped\", [27700]], [[12941, 12941], \"mapped\", [26408]], [[12942, 12942], \"mapped\", [37329]], [[12943, 12943], \"mapped\", [22303]], [[12944, 12944], \"mapped\", [26085]], [[12945, 12945], \"mapped\", [26666]], [[12946, 12946], \"mapped\", [26377]], [[12947, 12947], \"mapped\", [31038]], [[12948, 12948], \"mapped\", [21517]], [[12949, 12949], \"mapped\", [29305]], [[12950, 12950], \"mapped\", [36001]], [[12951, 12951], \"mapped\", [31069]], [[12952, 12952], \"mapped\", [21172]], [[12953, 12953], \"mapped\", [31192]], [[12954, 12954], \"mapped\", [30007]], [[12955, 12955], \"mapped\", [22899]], [[12956, 12956], \"mapped\", [36969]], [[12957, 12957], \"mapped\", [20778]], [[12958, 12958], \"mapped\", [21360]], [[12959, 12959], \"mapped\", [27880]], [[12960, 12960], \"mapped\", [38917]], [[12961, 12961], \"mapped\", [20241]], [[12962, 12962], \"mapped\", [20889]], [[12963, 12963], \"mapped\", [27491]], [[12964, 12964], \"mapped\", [19978]], [[12965, 12965], \"mapped\", [20013]], [[12966, 12966], \"mapped\", [19979]], [[12967, 12967], \"mapped\", [24038]], [[12968, 12968], \"mapped\", [21491]], [[12969, 12969], \"mapped\", [21307]], [[12970, 12970], \"mapped\", [23447]], [[12971, 12971], \"mapped\", [23398]], [[12972, 12972], \"mapped\", [30435]], [[12973, 12973], \"mapped\", [20225]], [[12974, 12974], \"mapped\", [36039]], [[12975, 12975], \"mapped\", [21332]], [[12976, 12976], \"mapped\", [22812]], [[12977, 12977], \"mapped\", [51, 54]], [[12978, 12978], \"mapped\", [51, 55]], [[12979, 12979], \"mapped\", [51, 56]], [[12980, 12980], \"mapped\", [51, 57]], [[12981, 12981], \"mapped\", [52, 48]], [[12982, 12982], \"mapped\", [52, 49]], [[12983, 12983], \"mapped\", [52, 50]], [[12984, 12984], \"mapped\", [52, 51]], [[12985, 12985], \"mapped\", [52, 52]], [[12986, 12986], \"mapped\", [52, 53]], [[12987, 12987], \"mapped\", [52, 54]], [[12988, 12988], \"mapped\", [52, 55]], [[12989, 12989], \"mapped\", [52, 56]], [[12990, 12990], \"mapped\", [52, 57]], [[12991, 12991], \"mapped\", [53, 48]], [[12992, 12992], \"mapped\", [49, 26376]], [[12993, 12993], \"mapped\", [50, 26376]], [[12994, 12994], \"mapped\", [51, 26376]], [[12995, 12995], \"mapped\", [52, 26376]], [[12996, 12996], \"mapped\", [53, 26376]], [[12997, 12997], \"mapped\", [54, 26376]], [[12998, 12998], \"mapped\", [55, 26376]], [[12999, 12999], \"mapped\", [56, 26376]], [[13000, 13000], \"mapped\", [57, 26376]], [[13001, 13001], \"mapped\", [49, 48, 26376]], [[13002, 13002], \"mapped\", [49, 49, 26376]], [[13003, 13003], \"mapped\", [49, 50, 26376]], [[13004, 13004], \"mapped\", [104, 103]], [[13005, 13005], \"mapped\", [101, 114, 103]], [[13006, 13006], \"mapped\", [101, 118]], [[13007, 13007], \"mapped\", [108, 116, 100]], [[13008, 13008], \"mapped\", [12450]], [[13009, 13009], \"mapped\", [12452]], [[13010, 13010], \"mapped\", [12454]], [[13011, 13011], \"mapped\", [12456]], [[13012, 13012], \"mapped\", [12458]], [[13013, 13013], \"mapped\", [12459]], [[13014, 13014], \"mapped\", [12461]], [[13015, 13015], \"mapped\", [12463]], [[13016, 13016], \"mapped\", [12465]], [[13017, 13017], \"mapped\", [12467]], [[13018, 13018], \"mapped\", [12469]], [[13019, 13019], \"mapped\", [12471]], [[13020, 13020], \"mapped\", [12473]], [[13021, 13021], \"mapped\", [12475]], [[13022, 13022], \"mapped\", [12477]], [[13023, 13023], \"mapped\", [12479]], [[13024, 13024], \"mapped\", [12481]], [[13025, 13025], \"mapped\", [12484]], [[13026, 13026], \"mapped\", [12486]], [[13027, 13027], \"mapped\", [12488]], [[13028, 13028], \"mapped\", [12490]], [[13029, 13029], \"mapped\", [12491]], [[13030, 13030], \"mapped\", [12492]], [[13031, 13031], \"mapped\", [12493]], [[13032, 13032], \"mapped\", [12494]], [[13033, 13033], \"mapped\", [12495]], [[13034, 13034], \"mapped\", [12498]], [[13035, 13035], \"mapped\", [12501]], [[13036, 13036], \"mapped\", [12504]], [[13037, 13037], \"mapped\", [12507]], [[13038, 13038], \"mapped\", [12510]], [[13039, 13039], \"mapped\", [12511]], [[13040, 13040], \"mapped\", [12512]], [[13041, 13041], \"mapped\", [12513]], [[13042, 13042], \"mapped\", [12514]], [[13043, 13043], \"mapped\", [12516]], [[13044, 13044], \"mapped\", [12518]], [[13045, 13045], \"mapped\", [12520]], [[13046, 13046], \"mapped\", [12521]], [[13047, 13047], \"mapped\", [12522]], [[13048, 13048], \"mapped\", [12523]], [[13049, 13049], \"mapped\", [12524]], [[13050, 13050], \"mapped\", [12525]], [[13051, 13051], \"mapped\", [12527]], [[13052, 13052], \"mapped\", [12528]], [[13053, 13053], \"mapped\", [12529]], [[13054, 13054], \"mapped\", [12530]], [[13055, 13055], \"disallowed\"], [[13056, 13056], \"mapped\", [12450, 12497, 12540, 12488]], [[13057, 13057], \"mapped\", [12450, 12523, 12501, 12449]], [[13058, 13058], \"mapped\", [12450, 12531, 12506, 12450]], [[13059, 13059], \"mapped\", [12450, 12540, 12523]], [[13060, 13060], \"mapped\", [12452, 12491, 12531, 12464]], [[13061, 13061], \"mapped\", [12452, 12531, 12481]], [[13062, 13062], \"mapped\", [12454, 12457, 12531]], [[13063, 13063], \"mapped\", [12456, 12473, 12463, 12540, 12489]], [[13064, 13064], \"mapped\", [12456, 12540, 12459, 12540]], [[13065, 13065], \"mapped\", [12458, 12531, 12473]], [[13066, 13066], \"mapped\", [12458, 12540, 12512]], [[13067, 13067], \"mapped\", [12459, 12452, 12522]], [[13068, 13068], \"mapped\", [12459, 12521, 12483, 12488]], [[13069, 13069], \"mapped\", [12459, 12525, 12522, 12540]], [[13070, 13070], \"mapped\", [12460, 12525, 12531]], [[13071, 13071], \"mapped\", [12460, 12531, 12510]], [[13072, 13072], \"mapped\", [12462, 12460]], [[13073, 13073], \"mapped\", [12462, 12491, 12540]], [[13074, 13074], \"mapped\", [12461, 12517, 12522, 12540]], [[13075, 13075], \"mapped\", [12462, 12523, 12480, 12540]], [[13076, 13076], \"mapped\", [12461, 12525]], [[13077, 13077], \"mapped\", [12461, 12525, 12464, 12521, 12512]], [[13078, 13078], \"mapped\", [12461, 12525, 12513, 12540, 12488, 12523]], [[13079, 13079], \"mapped\", [12461, 12525, 12527, 12483, 12488]], [[13080, 13080], \"mapped\", [12464, 12521, 12512]], [[13081, 13081], \"mapped\", [12464, 12521, 12512, 12488, 12531]], [[13082, 13082], \"mapped\", [12463, 12523, 12476, 12452, 12525]], [[13083, 13083], \"mapped\", [12463, 12525, 12540, 12493]], [[13084, 13084], \"mapped\", [12465, 12540, 12473]], [[13085, 13085], \"mapped\", [12467, 12523, 12490]], [[13086, 13086], \"mapped\", [12467, 12540, 12509]], [[13087, 13087], \"mapped\", [12469, 12452, 12463, 12523]], [[13088, 13088], \"mapped\", [12469, 12531, 12481, 12540, 12512]], [[13089, 13089], \"mapped\", [12471, 12522, 12531, 12464]], [[13090, 13090], \"mapped\", [12475, 12531, 12481]], [[13091, 13091], \"mapped\", [12475, 12531, 12488]], [[13092, 13092], \"mapped\", [12480, 12540, 12473]], [[13093, 13093], \"mapped\", [12487, 12471]], [[13094, 13094], \"mapped\", [12489, 12523]], [[13095, 13095], \"mapped\", [12488, 12531]], [[13096, 13096], \"mapped\", [12490, 12494]], [[13097, 13097], \"mapped\", [12494, 12483, 12488]], [[13098, 13098], \"mapped\", [12495, 12452, 12484]], [[13099, 13099], \"mapped\", [12497, 12540, 12475, 12531, 12488]], [[13100, 13100], \"mapped\", [12497, 12540, 12484]], [[13101, 13101], \"mapped\", [12496, 12540, 12524, 12523]], [[13102, 13102], \"mapped\", [12500, 12450, 12473, 12488, 12523]], [[13103, 13103], \"mapped\", [12500, 12463, 12523]], [[13104, 13104], \"mapped\", [12500, 12467]], [[13105, 13105], \"mapped\", [12499, 12523]], [[13106, 13106], \"mapped\", [12501, 12449, 12521, 12483, 12489]], [[13107, 13107], \"mapped\", [12501, 12451, 12540, 12488]], [[13108, 13108], \"mapped\", [12502, 12483, 12471, 12455, 12523]], [[13109, 13109], \"mapped\", [12501, 12521, 12531]], [[13110, 13110], \"mapped\", [12504, 12463, 12479, 12540, 12523]], [[13111, 13111], \"mapped\", [12506, 12477]], [[13112, 13112], \"mapped\", [12506, 12491, 12498]], [[13113, 13113], \"mapped\", [12504, 12523, 12484]], [[13114, 13114], \"mapped\", [12506, 12531, 12473]], [[13115, 13115], \"mapped\", [12506, 12540, 12472]], [[13116, 13116], \"mapped\", [12505, 12540, 12479]], [[13117, 13117], \"mapped\", [12509, 12452, 12531, 12488]], [[13118, 13118], \"mapped\", [12508, 12523, 12488]], [[13119, 13119], \"mapped\", [12507, 12531]], [[13120, 13120], \"mapped\", [12509, 12531, 12489]], [[13121, 13121], \"mapped\", [12507, 12540, 12523]], [[13122, 13122], \"mapped\", [12507, 12540, 12531]], [[13123, 13123], \"mapped\", [12510, 12452, 12463, 12525]], [[13124, 13124], \"mapped\", [12510, 12452, 12523]], [[13125, 13125], \"mapped\", [12510, 12483, 12495]], [[13126, 13126], \"mapped\", [12510, 12523, 12463]], [[13127, 13127], \"mapped\", [12510, 12531, 12471, 12519, 12531]], [[13128, 13128], \"mapped\", [12511, 12463, 12525, 12531]], [[13129, 13129], \"mapped\", [12511, 12522]], [[13130, 13130], \"mapped\", [12511, 12522, 12496, 12540, 12523]], [[13131, 13131], \"mapped\", [12513, 12460]], [[13132, 13132], \"mapped\", [12513, 12460, 12488, 12531]], [[13133, 13133], \"mapped\", [12513, 12540, 12488, 12523]], [[13134, 13134], \"mapped\", [12516, 12540, 12489]], [[13135, 13135], \"mapped\", [12516, 12540, 12523]], [[13136, 13136], \"mapped\", [12518, 12450, 12531]], [[13137, 13137], \"mapped\", [12522, 12483, 12488, 12523]], [[13138, 13138], \"mapped\", [12522, 12521]], [[13139, 13139], \"mapped\", [12523, 12500, 12540]], [[13140, 13140], \"mapped\", [12523, 12540, 12502, 12523]], [[13141, 13141], \"mapped\", [12524, 12512]], [[13142, 13142], \"mapped\", [12524, 12531, 12488, 12466, 12531]], [[13143, 13143], \"mapped\", [12527, 12483, 12488]], [[13144, 13144], \"mapped\", [48, 28857]], [[13145, 13145], \"mapped\", [49, 28857]], [[13146, 13146], \"mapped\", [50, 28857]], [[13147, 13147], \"mapped\", [51, 28857]], [[13148, 13148], \"mapped\", [52, 28857]], [[13149, 13149], \"mapped\", [53, 28857]], [[13150, 13150], \"mapped\", [54, 28857]], [[13151, 13151], \"mapped\", [55, 28857]], [[13152, 13152], \"mapped\", [56, 28857]], [[13153, 13153], \"mapped\", [57, 28857]], [[13154, 13154], \"mapped\", [49, 48, 28857]], [[13155, 13155], \"mapped\", [49, 49, 28857]], [[13156, 13156], \"mapped\", [49, 50, 28857]], [[13157, 13157], \"mapped\", [49, 51, 28857]], [[13158, 13158], \"mapped\", [49, 52, 28857]], [[13159, 13159], \"mapped\", [49, 53, 28857]], [[13160, 13160], \"mapped\", [49, 54, 28857]], [[13161, 13161], \"mapped\", [49, 55, 28857]], [[13162, 13162], \"mapped\", [49, 56, 28857]], [[13163, 13163], \"mapped\", [49, 57, 28857]], [[13164, 13164], \"mapped\", [50, 48, 28857]], [[13165, 13165], \"mapped\", [50, 49, 28857]], [[13166, 13166], \"mapped\", [50, 50, 28857]], [[13167, 13167], \"mapped\", [50, 51, 28857]], [[13168, 13168], \"mapped\", [50, 52, 28857]], [[13169, 13169], \"mapped\", [104, 112, 97]], [[13170, 13170], \"mapped\", [100, 97]], [[13171, 13171], \"mapped\", [97, 117]], [[13172, 13172], \"mapped\", [98, 97, 114]], [[13173, 13173], \"mapped\", [111, 118]], [[13174, 13174], \"mapped\", [112, 99]], [[13175, 13175], \"mapped\", [100, 109]], [[13176, 13176], \"mapped\", [100, 109, 50]], [[13177, 13177], \"mapped\", [100, 109, 51]], [[13178, 13178], \"mapped\", [105, 117]], [[13179, 13179], \"mapped\", [24179, 25104]], [[13180, 13180], \"mapped\", [26157, 21644]], [[13181, 13181], \"mapped\", [22823, 27491]], [[13182, 13182], \"mapped\", [26126, 27835]], [[13183, 13183], \"mapped\", [26666, 24335, 20250, 31038]], [[13184, 13184], \"mapped\", [112, 97]], [[13185, 13185], \"mapped\", [110, 97]], [[13186, 13186], \"mapped\", [956, 97]], [[13187, 13187], \"mapped\", [109, 97]], [[13188, 13188], \"mapped\", [107, 97]], [[13189, 13189], \"mapped\", [107, 98]], [[13190, 13190], \"mapped\", [109, 98]], [[13191, 13191], \"mapped\", [103, 98]], [[13192, 13192], \"mapped\", [99, 97, 108]], [[13193, 13193], \"mapped\", [107, 99, 97, 108]], [[13194, 13194], \"mapped\", [112, 102]], [[13195, 13195], \"mapped\", [110, 102]], [[13196, 13196], \"mapped\", [956, 102]], [[13197, 13197], \"mapped\", [956, 103]], [[13198, 13198], \"mapped\", [109, 103]], [[13199, 13199], \"mapped\", [107, 103]], [[13200, 13200], \"mapped\", [104, 122]], [[13201, 13201], \"mapped\", [107, 104, 122]], [[13202, 13202], \"mapped\", [109, 104, 122]], [[13203, 13203], \"mapped\", [103, 104, 122]], [[13204, 13204], \"mapped\", [116, 104, 122]], [[13205, 13205], \"mapped\", [956, 108]], [[13206, 13206], \"mapped\", [109, 108]], [[13207, 13207], \"mapped\", [100, 108]], [[13208, 13208], \"mapped\", [107, 108]], [[13209, 13209], \"mapped\", [102, 109]], [[13210, 13210], \"mapped\", [110, 109]], [[13211, 13211], \"mapped\", [956, 109]], [[13212, 13212], \"mapped\", [109, 109]], [[13213, 13213], \"mapped\", [99, 109]], [[13214, 13214], \"mapped\", [107, 109]], [[13215, 13215], \"mapped\", [109, 109, 50]], [[13216, 13216], \"mapped\", [99, 109, 50]], [[13217, 13217], \"mapped\", [109, 50]], [[13218, 13218], \"mapped\", [107, 109, 50]], [[13219, 13219], \"mapped\", [109, 109, 51]], [[13220, 13220], \"mapped\", [99, 109, 51]], [[13221, 13221], \"mapped\", [109, 51]], [[13222, 13222], \"mapped\", [107, 109, 51]], [[13223, 13223], \"mapped\", [109, 8725, 115]], [[13224, 13224], \"mapped\", [109, 8725, 115, 50]], [[13225, 13225], \"mapped\", [112, 97]], [[13226, 13226], \"mapped\", [107, 112, 97]], [[13227, 13227], \"mapped\", [109, 112, 97]], [[13228, 13228], \"mapped\", [103, 112, 97]], [[13229, 13229], \"mapped\", [114, 97, 100]], [[13230, 13230], \"mapped\", [114, 97, 100, 8725, 115]], [[13231, 13231], \"mapped\", [114, 97, 100, 8725, 115, 50]], [[13232, 13232], \"mapped\", [112, 115]], [[13233, 13233], \"mapped\", [110, 115]], [[13234, 13234], \"mapped\", [956, 115]], [[13235, 13235], \"mapped\", [109, 115]], [[13236, 13236], \"mapped\", [112, 118]], [[13237, 13237], \"mapped\", [110, 118]], [[13238, 13238], \"mapped\", [956, 118]], [[13239, 13239], \"mapped\", [109, 118]], [[13240, 13240], \"mapped\", [107, 118]], [[13241, 13241], \"mapped\", [109, 118]], [[13242, 13242], \"mapped\", [112, 119]], [[13243, 13243], \"mapped\", [110, 119]], [[13244, 13244], \"mapped\", [956, 119]], [[13245, 13245], \"mapped\", [109, 119]], [[13246, 13246], \"mapped\", [107, 119]], [[13247, 13247], \"mapped\", [109, 119]], [[13248, 13248], \"mapped\", [107, 969]], [[13249, 13249], \"mapped\", [109, 969]], [[13250, 13250], \"disallowed\"], [[13251, 13251], \"mapped\", [98, 113]], [[13252, 13252], \"mapped\", [99, 99]], [[13253, 13253], \"mapped\", [99, 100]], [[13254, 13254], \"mapped\", [99, 8725, 107, 103]], [[13255, 13255], \"disallowed\"], [[13256, 13256], \"mapped\", [100, 98]], [[13257, 13257], \"mapped\", [103, 121]], [[13258, 13258], \"mapped\", [104, 97]], [[13259, 13259], \"mapped\", [104, 112]], [[13260, 13260], \"mapped\", [105, 110]], [[13261, 13261], \"mapped\", [107, 107]], [[13262, 13262], \"mapped\", [107, 109]], [[13263, 13263], \"mapped\", [107, 116]], [[13264, 13264], \"mapped\", [108, 109]], [[13265, 13265], \"mapped\", [108, 110]], [[13266, 13266], \"mapped\", [108, 111, 103]], [[13267, 13267], \"mapped\", [108, 120]], [[13268, 13268], \"mapped\", [109, 98]], [[13269, 13269], \"mapped\", [109, 105, 108]], [[13270, 13270], \"mapped\", [109, 111, 108]], [[13271, 13271], \"mapped\", [112, 104]], [[13272, 13272], \"disallowed\"], [[13273, 13273], \"mapped\", [112, 112, 109]], [[13274, 13274], \"mapped\", [112, 114]], [[13275, 13275], \"mapped\", [115, 114]], [[13276, 13276], \"mapped\", [115, 118]], [[13277, 13277], \"mapped\", [119, 98]], [[13278, 13278], \"mapped\", [118, 8725, 109]], [[13279, 13279], \"mapped\", [97, 8725, 109]], [[13280, 13280], \"mapped\", [49, 26085]], [[13281, 13281], \"mapped\", [50, 26085]], [[13282, 13282], \"mapped\", [51, 26085]], [[13283, 13283], \"mapped\", [52, 26085]], [[13284, 13284], \"mapped\", [53, 26085]], [[13285, 13285], \"mapped\", [54, 26085]], [[13286, 13286], \"mapped\", [55, 26085]], [[13287, 13287], \"mapped\", [56, 26085]], [[13288, 13288], \"mapped\", [57, 26085]], [[13289, 13289], \"mapped\", [49, 48, 26085]], [[13290, 13290], \"mapped\", [49, 49, 26085]], [[13291, 13291], \"mapped\", [49, 50, 26085]], [[13292, 13292], \"mapped\", [49, 51, 26085]], [[13293, 13293], \"mapped\", [49, 52, 26085]], [[13294, 13294], \"mapped\", [49, 53, 26085]], [[13295, 13295], \"mapped\", [49, 54, 26085]], [[13296, 13296], \"mapped\", [49, 55, 26085]], [[13297, 13297], \"mapped\", [49, 56, 26085]], [[13298, 13298], \"mapped\", [49, 57, 26085]], [[13299, 13299], \"mapped\", [50, 48, 26085]], [[13300, 13300], \"mapped\", [50, 49, 26085]], [[13301, 13301], \"mapped\", [50, 50, 26085]], [[13302, 13302], \"mapped\", [50, 51, 26085]], [[13303, 13303], \"mapped\", [50, 52, 26085]], [[13304, 13304], \"mapped\", [50, 53, 26085]], [[13305, 13305], \"mapped\", [50, 54, 26085]], [[13306, 13306], \"mapped\", [50, 55, 26085]], [[13307, 13307], \"mapped\", [50, 56, 26085]], [[13308, 13308], \"mapped\", [50, 57, 26085]], [[13309, 13309], \"mapped\", [51, 48, 26085]], [[13310, 13310], \"mapped\", [51, 49, 26085]], [[13311, 13311], \"mapped\", [103, 97, 108]], [[13312, 19893], \"valid\"], [[19894, 19903], \"disallowed\"], [[19904, 19967], \"valid\", [], \"NV8\"], [[19968, 40869], \"valid\"], [[40870, 40891], \"valid\"], [[40892, 40899], \"valid\"], [[40900, 40907], \"valid\"], [[40908, 40908], \"valid\"], [[40909, 40917], \"valid\"], [[40918, 40959], \"disallowed\"], [[40960, 42124], \"valid\"], [[42125, 42127], \"disallowed\"], [[42128, 42145], \"valid\", [], \"NV8\"], [[42146, 42147], \"valid\", [], \"NV8\"], [[42148, 42163], \"valid\", [], \"NV8\"], [[42164, 42164], \"valid\", [], \"NV8\"], [[42165, 42176], \"valid\", [], \"NV8\"], [[42177, 42177], \"valid\", [], \"NV8\"], [[42178, 42180], \"valid\", [], \"NV8\"], [[42181, 42181], \"valid\", [], \"NV8\"], [[42182, 42182], \"valid\", [], \"NV8\"], [[42183, 42191], \"disallowed\"], [[42192, 42237], \"valid\"], [[42238, 42239], \"valid\", [], \"NV8\"], [[42240, 42508], \"valid\"], [[42509, 42511], \"valid\", [], \"NV8\"], [[42512, 42539], \"valid\"], [[42540, 42559], \"disallowed\"], [[42560, 42560], \"mapped\", [42561]], [[42561, 42561], \"valid\"], [[42562, 42562], \"mapped\", [42563]], [[42563, 42563], \"valid\"], [[42564, 42564], \"mapped\", [42565]], [[42565, 42565], \"valid\"], [[42566, 42566], \"mapped\", [42567]], [[42567, 42567], \"valid\"], [[42568, 42568], \"mapped\", [42569]], [[42569, 42569], \"valid\"], [[42570, 42570], \"mapped\", [42571]], [[42571, 42571], \"valid\"], [[42572, 42572], \"mapped\", [42573]], [[42573, 42573], \"valid\"], [[42574, 42574], \"mapped\", [42575]], [[42575, 42575], \"valid\"], [[42576, 42576], \"mapped\", [42577]], [[42577, 42577], \"valid\"], [[42578, 42578], \"mapped\", [42579]], [[42579, 42579], \"valid\"], [[42580, 42580], \"mapped\", [42581]], [[42581, 42581], \"valid\"], [[42582, 42582], \"mapped\", [42583]], [[42583, 42583], \"valid\"], [[42584, 42584], \"mapped\", [42585]], [[42585, 42585], \"valid\"], [[42586, 42586], \"mapped\", [42587]], [[42587, 42587], \"valid\"], [[42588, 42588], \"mapped\", [42589]], [[42589, 42589], \"valid\"], [[42590, 42590], \"mapped\", [42591]], [[42591, 42591], \"valid\"], [[42592, 42592], \"mapped\", [42593]], [[42593, 42593], \"valid\"], [[42594, 42594], \"mapped\", [42595]], [[42595, 42595], \"valid\"], [[42596, 42596], \"mapped\", [42597]], [[42597, 42597], \"valid\"], [[42598, 42598], \"mapped\", [42599]], [[42599, 42599], \"valid\"], [[42600, 42600], \"mapped\", [42601]], [[42601, 42601], \"valid\"], [[42602, 42602], \"mapped\", [42603]], [[42603, 42603], \"valid\"], [[42604, 42604], \"mapped\", [42605]], [[42605, 42607], \"valid\"], [[42608, 42611], \"valid\", [], \"NV8\"], [[42612, 42619], \"valid\"], [[42620, 42621], \"valid\"], [[42622, 42622], \"valid\", [], \"NV8\"], [[42623, 42623], \"valid\"], [[42624, 42624], \"mapped\", [42625]], [[42625, 42625], \"valid\"], [[42626, 42626], \"mapped\", [42627]], [[42627, 42627], \"valid\"], [[42628, 42628], \"mapped\", [42629]], [[42629, 42629], \"valid\"], [[42630, 42630], \"mapped\", [42631]], [[42631, 42631], \"valid\"], [[42632, 42632], \"mapped\", [42633]], [[42633, 42633], \"valid\"], [[42634, 42634], \"mapped\", [42635]], [[42635, 42635], \"valid\"], [[42636, 42636], \"mapped\", [42637]], [[42637, 42637], \"valid\"], [[42638, 42638], \"mapped\", [42639]], [[42639, 42639], \"valid\"], [[42640, 42640], \"mapped\", [42641]], [[42641, 42641], \"valid\"], [[42642, 42642], \"mapped\", [42643]], [[42643, 42643], \"valid\"], [[42644, 42644], \"mapped\", [42645]], [[42645, 42645], \"valid\"], [[42646, 42646], \"mapped\", [42647]], [[42647, 42647], \"valid\"], [[42648, 42648], \"mapped\", [42649]], [[42649, 42649], \"valid\"], [[42650, 42650], \"mapped\", [42651]], [[42651, 42651], \"valid\"], [[42652, 42652], \"mapped\", [1098]], [[42653, 42653], \"mapped\", [1100]], [[42654, 42654], \"valid\"], [[42655, 42655], \"valid\"], [[42656, 42725], \"valid\"], [[42726, 42735], \"valid\", [], \"NV8\"], [[42736, 42737], \"valid\"], [[42738, 42743], \"valid\", [], \"NV8\"], [[42744, 42751], \"disallowed\"], [[42752, 42774], \"valid\", [], \"NV8\"], [[42775, 42778], \"valid\"], [[42779, 42783], \"valid\"], [[42784, 42785], \"valid\", [], \"NV8\"], [[42786, 42786], \"mapped\", [42787]], [[42787, 42787], \"valid\"], [[42788, 42788], \"mapped\", [42789]], [[42789, 42789], \"valid\"], [[42790, 42790], \"mapped\", [42791]], [[42791, 42791], \"valid\"], [[42792, 42792], \"mapped\", [42793]], [[42793, 42793], \"valid\"], [[42794, 42794], \"mapped\", [42795]], [[42795, 42795], \"valid\"], [[42796, 42796], \"mapped\", [42797]], [[42797, 42797], \"valid\"], [[42798, 42798], \"mapped\", [42799]], [[42799, 42801], \"valid\"], [[42802, 42802], \"mapped\", [42803]], [[42803, 42803], \"valid\"], [[42804, 42804], \"mapped\", [42805]], [[42805, 42805], \"valid\"], [[42806, 42806], \"mapped\", [42807]], [[42807, 42807], \"valid\"], [[42808, 42808], \"mapped\", [42809]], [[42809, 42809], \"valid\"], [[42810, 42810], \"mapped\", [42811]], [[42811, 42811], \"valid\"], [[42812, 42812], \"mapped\", [42813]], [[42813, 42813], \"valid\"], [[42814, 42814], \"mapped\", [42815]], [[42815, 42815], \"valid\"], [[42816, 42816], \"mapped\", [42817]], [[42817, 42817], \"valid\"], [[42818, 42818], \"mapped\", [42819]], [[42819, 42819], \"valid\"], [[42820, 42820], \"mapped\", [42821]], [[42821, 42821], \"valid\"], [[42822, 42822], \"mapped\", [42823]], [[42823, 42823], \"valid\"], [[42824, 42824], \"mapped\", [42825]], [[42825, 42825], \"valid\"], [[42826, 42826], \"mapped\", [42827]], [[42827, 42827], \"valid\"], [[42828, 42828], \"mapped\", [42829]], [[42829, 42829], \"valid\"], [[42830, 42830], \"mapped\", [42831]], [[42831, 42831], \"valid\"], [[42832, 42832], \"mapped\", [42833]], [[42833, 42833], \"valid\"], [[42834, 42834], \"mapped\", [42835]], [[42835, 42835], \"valid\"], [[42836, 42836], \"mapped\", [42837]], [[42837, 42837], \"valid\"], [[42838, 42838], \"mapped\", [42839]], [[42839, 42839], \"valid\"], [[42840, 42840], \"mapped\", [42841]], [[42841, 42841], \"valid\"], [[42842, 42842], \"mapped\", [42843]], [[42843, 42843], \"valid\"], [[42844, 42844], \"mapped\", [42845]], [[42845, 42845], \"valid\"], [[42846, 42846], \"mapped\", [42847]], [[42847, 42847], \"valid\"], [[42848, 42848], \"mapped\", [42849]], [[42849, 42849], \"valid\"], [[42850, 42850], \"mapped\", [42851]], [[42851, 42851], \"valid\"], [[42852, 42852], \"mapped\", [42853]], [[42853, 42853], \"valid\"], [[42854, 42854], \"mapped\", [42855]], [[42855, 42855], \"valid\"], [[42856, 42856], \"mapped\", [42857]], [[42857, 42857], \"valid\"], [[42858, 42858], \"mapped\", [42859]], [[42859, 42859], \"valid\"], [[42860, 42860], \"mapped\", [42861]], [[42861, 42861], \"valid\"], [[42862, 42862], \"mapped\", [42863]], [[42863, 42863], \"valid\"], [[42864, 42864], \"mapped\", [42863]], [[42865, 42872], \"valid\"], [[42873, 42873], \"mapped\", [42874]], [[42874, 42874], \"valid\"], [[42875, 42875], \"mapped\", [42876]], [[42876, 42876], \"valid\"], [[42877, 42877], \"mapped\", [7545]], [[42878, 42878], \"mapped\", [42879]], [[42879, 42879], \"valid\"], [[42880, 42880], \"mapped\", [42881]], [[42881, 42881], \"valid\"], [[42882, 42882], \"mapped\", [42883]], [[42883, 42883], \"valid\"], [[42884, 42884], \"mapped\", [42885]], [[42885, 42885], \"valid\"], [[42886, 42886], \"mapped\", [42887]], [[42887, 42888], \"valid\"], [[42889, 42890], \"valid\", [], \"NV8\"], [[42891, 42891], \"mapped\", [42892]], [[42892, 42892], \"valid\"], [[42893, 42893], \"mapped\", [613]], [[42894, 42894], \"valid\"], [[42895, 42895], \"valid\"], [[42896, 42896], \"mapped\", [42897]], [[42897, 42897], \"valid\"], [[42898, 42898], \"mapped\", [42899]], [[42899, 42899], \"valid\"], [[42900, 42901], \"valid\"], [[42902, 42902], \"mapped\", [42903]], [[42903, 42903], \"valid\"], [[42904, 42904], \"mapped\", [42905]], [[42905, 42905], \"valid\"], [[42906, 42906], \"mapped\", [42907]], [[42907, 42907], \"valid\"], [[42908, 42908], \"mapped\", [42909]], [[42909, 42909], \"valid\"], [[42910, 42910], \"mapped\", [42911]], [[42911, 42911], \"valid\"], [[42912, 42912], \"mapped\", [42913]], [[42913, 42913], \"valid\"], [[42914, 42914], \"mapped\", [42915]], [[42915, 42915], \"valid\"], [[42916, 42916], \"mapped\", [42917]], [[42917, 42917], \"valid\"], [[42918, 42918], \"mapped\", [42919]], [[42919, 42919], \"valid\"], [[42920, 42920], \"mapped\", [42921]], [[42921, 42921], \"valid\"], [[42922, 42922], \"mapped\", [614]], [[42923, 42923], \"mapped\", [604]], [[42924, 42924], \"mapped\", [609]], [[42925, 42925], \"mapped\", [620]], [[42926, 42927], \"disallowed\"], [[42928, 42928], \"mapped\", [670]], [[42929, 42929], \"mapped\", [647]], [[42930, 42930], \"mapped\", [669]], [[42931, 42931], \"mapped\", [43859]], [[42932, 42932], \"mapped\", [42933]], [[42933, 42933], \"valid\"], [[42934, 42934], \"mapped\", [42935]], [[42935, 42935], \"valid\"], [[42936, 42998], \"disallowed\"], [[42999, 42999], \"valid\"], [[43000, 43000], \"mapped\", [295]], [[43001, 43001], \"mapped\", [339]], [[43002, 43002], \"valid\"], [[43003, 43007], \"valid\"], [[43008, 43047], \"valid\"], [[43048, 43051], \"valid\", [], \"NV8\"], [[43052, 43055], \"disallowed\"], [[43056, 43065], \"valid\", [], \"NV8\"], [[43066, 43071], \"disallowed\"], [[43072, 43123], \"valid\"], [[43124, 43127], \"valid\", [], \"NV8\"], [[43128, 43135], \"disallowed\"], [[43136, 43204], \"valid\"], [[43205, 43213], \"disallowed\"], [[43214, 43215], \"valid\", [], \"NV8\"], [[43216, 43225], \"valid\"], [[43226, 43231], \"disallowed\"], [[43232, 43255], \"valid\"], [[43256, 43258], \"valid\", [], \"NV8\"], [[43259, 43259], \"valid\"], [[43260, 43260], \"valid\", [], \"NV8\"], [[43261, 43261], \"valid\"], [[43262, 43263], \"disallowed\"], [[43264, 43309], \"valid\"], [[43310, 43311], \"valid\", [], \"NV8\"], [[43312, 43347], \"valid\"], [[43348, 43358], \"disallowed\"], [[43359, 43359], \"valid\", [], \"NV8\"], [[43360, 43388], \"valid\", [], \"NV8\"], [[43389, 43391], \"disallowed\"], [[43392, 43456], \"valid\"], [[43457, 43469], \"valid\", [], \"NV8\"], [[43470, 43470], \"disallowed\"], [[43471, 43481], \"valid\"], [[43482, 43485], \"disallowed\"], [[43486, 43487], \"valid\", [], \"NV8\"], [[43488, 43518], \"valid\"], [[43519, 43519], \"disallowed\"], [[43520, 43574], \"valid\"], [[43575, 43583], \"disallowed\"], [[43584, 43597], \"valid\"], [[43598, 43599], \"disallowed\"], [[43600, 43609], \"valid\"], [[43610, 43611], \"disallowed\"], [[43612, 43615], \"valid\", [], \"NV8\"], [[43616, 43638], \"valid\"], [[43639, 43641], \"valid\", [], \"NV8\"], [[43642, 43643], \"valid\"], [[43644, 43647], \"valid\"], [[43648, 43714], \"valid\"], [[43715, 43738], \"disallowed\"], [[43739, 43741], \"valid\"], [[43742, 43743], \"valid\", [], \"NV8\"], [[43744, 43759], \"valid\"], [[43760, 43761], \"valid\", [], \"NV8\"], [[43762, 43766], \"valid\"], [[43767, 43776], \"disallowed\"], [[43777, 43782], \"valid\"], [[43783, 43784], \"disallowed\"], [[43785, 43790], \"valid\"], [[43791, 43792], \"disallowed\"], [[43793, 43798], \"valid\"], [[43799, 43807], \"disallowed\"], [[43808, 43814], \"valid\"], [[43815, 43815], \"disallowed\"], [[43816, 43822], \"valid\"], [[43823, 43823], \"disallowed\"], [[43824, 43866], \"valid\"], [[43867, 43867], \"valid\", [], \"NV8\"], [[43868, 43868], \"mapped\", [42791]], [[43869, 43869], \"mapped\", [43831]], [[43870, 43870], \"mapped\", [619]], [[43871, 43871], \"mapped\", [43858]], [[43872, 43875], \"valid\"], [[43876, 43877], \"valid\"], [[43878, 43887], \"disallowed\"], [[43888, 43888], \"mapped\", [5024]], [[43889, 43889], \"mapped\", [5025]], [[43890, 43890], \"mapped\", [5026]], [[43891, 43891], \"mapped\", [5027]], [[43892, 43892], \"mapped\", [5028]], [[43893, 43893], \"mapped\", [5029]], [[43894, 43894], \"mapped\", [5030]], [[43895, 43895], \"mapped\", [5031]], [[43896, 43896], \"mapped\", [5032]], [[43897, 43897], \"mapped\", [5033]], [[43898, 43898], \"mapped\", [5034]], [[43899, 43899], \"mapped\", [5035]], [[43900, 43900], \"mapped\", [5036]], [[43901, 43901], \"mapped\", [5037]], [[43902, 43902], \"mapped\", [5038]], [[43903, 43903], \"mapped\", [5039]], [[43904, 43904], \"mapped\", [5040]], [[43905, 43905], \"mapped\", [5041]], [[43906, 43906], \"mapped\", [5042]], [[43907, 43907], \"mapped\", [5043]], [[43908, 43908], \"mapped\", [5044]], [[43909, 43909], \"mapped\", [5045]], [[43910, 43910], \"mapped\", [5046]], [[43911, 43911], \"mapped\", [5047]], [[43912, 43912], \"mapped\", [5048]], [[43913, 43913], \"mapped\", [5049]], [[43914, 43914], \"mapped\", [5050]], [[43915, 43915], \"mapped\", [5051]], [[43916, 43916], \"mapped\", [5052]], [[43917, 43917], \"mapped\", [5053]], [[43918, 43918], \"mapped\", [5054]], [[43919, 43919], \"mapped\", [5055]], [[43920, 43920], \"mapped\", [5056]], [[43921, 43921], \"mapped\", [5057]], [[43922, 43922], \"mapped\", [5058]], [[43923, 43923], \"mapped\", [5059]], [[43924, 43924], \"mapped\", [5060]], [[43925, 43925], \"mapped\", [5061]], [[43926, 43926], \"mapped\", [5062]], [[43927, 43927], \"mapped\", [5063]], [[43928, 43928], \"mapped\", [5064]], [[43929, 43929], \"mapped\", [5065]], [[43930, 43930], \"mapped\", [5066]], [[43931, 43931], \"mapped\", [5067]], [[43932, 43932], \"mapped\", [5068]], [[43933, 43933], \"mapped\", [5069]], [[43934, 43934], \"mapped\", [5070]], [[43935, 43935], \"mapped\", [5071]], [[43936, 43936], \"mapped\", [5072]], [[43937, 43937], \"mapped\", [5073]], [[43938, 43938], \"mapped\", [5074]], [[43939, 43939], \"mapped\", [5075]], [[43940, 43940], \"mapped\", [5076]], [[43941, 43941], \"mapped\", [5077]], [[43942, 43942], \"mapped\", [5078]], [[43943, 43943], \"mapped\", [5079]], [[43944, 43944], \"mapped\", [5080]], [[43945, 43945], \"mapped\", [5081]], [[43946, 43946], \"mapped\", [5082]], [[43947, 43947], \"mapped\", [5083]], [[43948, 43948], \"mapped\", [5084]], [[43949, 43949], \"mapped\", [5085]], [[43950, 43950], \"mapped\", [5086]], [[43951, 43951], \"mapped\", [5087]], [[43952, 43952], \"mapped\", [5088]], [[43953, 43953], \"mapped\", [5089]], [[43954, 43954], \"mapped\", [5090]], [[43955, 43955], \"mapped\", [5091]], [[43956, 43956], \"mapped\", [5092]], [[43957, 43957], \"mapped\", [5093]], [[43958, 43958], \"mapped\", [5094]], [[43959, 43959], \"mapped\", [5095]], [[43960, 43960], \"mapped\", [5096]], [[43961, 43961], \"mapped\", [5097]], [[43962, 43962], \"mapped\", [5098]], [[43963, 43963], \"mapped\", [5099]], [[43964, 43964], \"mapped\", [5100]], [[43965, 43965], \"mapped\", [5101]], [[43966, 43966], \"mapped\", [5102]], [[43967, 43967], \"mapped\", [5103]], [[43968, 44010], \"valid\"], [[44011, 44011], \"valid\", [], \"NV8\"], [[44012, 44013], \"valid\"], [[44014, 44015], \"disallowed\"], [[44016, 44025], \"valid\"], [[44026, 44031], \"disallowed\"], [[44032, 55203], \"valid\"], [[55204, 55215], \"disallowed\"], [[55216, 55238], \"valid\", [], \"NV8\"], [[55239, 55242], \"disallowed\"], [[55243, 55291], \"valid\", [], \"NV8\"], [[55292, 55295], \"disallowed\"], [[55296, 57343], \"disallowed\"], [[57344, 63743], \"disallowed\"], [[63744, 63744], \"mapped\", [35912]], [[63745, 63745], \"mapped\", [26356]], [[63746, 63746], \"mapped\", [36554]], [[63747, 63747], \"mapped\", [36040]], [[63748, 63748], \"mapped\", [28369]], [[63749, 63749], \"mapped\", [20018]], [[63750, 63750], \"mapped\", [21477]], [[63751, 63752], \"mapped\", [40860]], [[63753, 63753], \"mapped\", [22865]], [[63754, 63754], \"mapped\", [37329]], [[63755, 63755], \"mapped\", [21895]], [[63756, 63756], \"mapped\", [22856]], [[63757, 63757], \"mapped\", [25078]], [[63758, 63758], \"mapped\", [30313]], [[63759, 63759], \"mapped\", [32645]], [[63760, 63760], \"mapped\", [34367]], [[63761, 63761], \"mapped\", [34746]], [[63762, 63762], \"mapped\", [35064]], [[63763, 63763], \"mapped\", [37007]], [[63764, 63764], \"mapped\", [27138]], [[63765, 63765], \"mapped\", [27931]], [[63766, 63766], \"mapped\", [28889]], [[63767, 63767], \"mapped\", [29662]], [[63768, 63768], \"mapped\", [33853]], [[63769, 63769], \"mapped\", [37226]], [[63770, 63770], \"mapped\", [39409]], [[63771, 63771], \"mapped\", [20098]], [[63772, 63772], \"mapped\", [21365]], [[63773, 63773], \"mapped\", [27396]], [[63774, 63774], \"mapped\", [29211]], [[63775, 63775], \"mapped\", [34349]], [[63776, 63776], \"mapped\", [40478]], [[63777, 63777], \"mapped\", [23888]], [[63778, 63778], \"mapped\", [28651]], [[63779, 63779], \"mapped\", [34253]], [[63780, 63780], \"mapped\", [35172]], [[63781, 63781], \"mapped\", [25289]], [[63782, 63782], \"mapped\", [33240]], [[63783, 63783], \"mapped\", [34847]], [[63784, 63784], \"mapped\", [24266]], [[63785, 63785], \"mapped\", [26391]], [[63786, 63786], \"mapped\", [28010]], [[63787, 63787], \"mapped\", [29436]], [[63788, 63788], \"mapped\", [37070]], [[63789, 63789], \"mapped\", [20358]], [[63790, 63790], \"mapped\", [20919]], [[63791, 63791], \"mapped\", [21214]], [[63792, 63792], \"mapped\", [25796]], [[63793, 63793], \"mapped\", [27347]], [[63794, 63794], \"mapped\", [29200]], [[63795, 63795], \"mapped\", [30439]], [[63796, 63796], \"mapped\", [32769]], [[63797, 63797], \"mapped\", [34310]], [[63798, 63798], \"mapped\", [34396]], [[63799, 63799], \"mapped\", [36335]], [[63800, 63800], \"mapped\", [38706]], [[63801, 63801], \"mapped\", [39791]], [[63802, 63802], \"mapped\", [40442]], [[63803, 63803], \"mapped\", [30860]], [[63804, 63804], \"mapped\", [31103]], [[63805, 63805], \"mapped\", [32160]], [[63806, 63806], \"mapped\", [33737]], [[63807, 63807], \"mapped\", [37636]], [[63808, 63808], \"mapped\", [40575]], [[63809, 63809], \"mapped\", [35542]], [[63810, 63810], \"mapped\", [22751]], [[63811, 63811], \"mapped\", [24324]], [[63812, 63812], \"mapped\", [31840]], [[63813, 63813], \"mapped\", [32894]], [[63814, 63814], \"mapped\", [29282]], [[63815, 63815], \"mapped\", [30922]], [[63816, 63816], \"mapped\", [36034]], [[63817, 63817], \"mapped\", [38647]], [[63818, 63818], \"mapped\", [22744]], [[63819, 63819], \"mapped\", [23650]], [[63820, 63820], \"mapped\", [27155]], [[63821, 63821], \"mapped\", [28122]], [[63822, 63822], \"mapped\", [28431]], [[63823, 63823], \"mapped\", [32047]], [[63824, 63824], \"mapped\", [32311]], [[63825, 63825], \"mapped\", [38475]], [[63826, 63826], \"mapped\", [21202]], [[63827, 63827], \"mapped\", [32907]], [[63828, 63828], \"mapped\", [20956]], [[63829, 63829], \"mapped\", [20940]], [[63830, 63830], \"mapped\", [31260]], [[63831, 63831], \"mapped\", [32190]], [[63832, 63832], \"mapped\", [33777]], [[63833, 63833], \"mapped\", [38517]], [[63834, 63834], \"mapped\", [35712]], [[63835, 63835], \"mapped\", [25295]], [[63836, 63836], \"mapped\", [27138]], [[63837, 63837], \"mapped\", [35582]], [[63838, 63838], \"mapped\", [20025]], [[63839, 63839], \"mapped\", [23527]], [[63840, 63840], \"mapped\", [24594]], [[63841, 63841], \"mapped\", [29575]], [[63842, 63842], \"mapped\", [30064]], [[63843, 63843], \"mapped\", [21271]], [[63844, 63844], \"mapped\", [30971]], [[63845, 63845], \"mapped\", [20415]], [[63846, 63846], \"mapped\", [24489]], [[63847, 63847], \"mapped\", [19981]], [[63848, 63848], \"mapped\", [27852]], [[63849, 63849], \"mapped\", [25976]], [[63850, 63850], \"mapped\", [32034]], [[63851, 63851], \"mapped\", [21443]], [[63852, 63852], \"mapped\", [22622]], [[63853, 63853], \"mapped\", [30465]], [[63854, 63854], \"mapped\", [33865]], [[63855, 63855], \"mapped\", [35498]], [[63856, 63856], \"mapped\", [27578]], [[63857, 63857], \"mapped\", [36784]], [[63858, 63858], \"mapped\", [27784]], [[63859, 63859], \"mapped\", [25342]], [[63860, 63860], \"mapped\", [33509]], [[63861, 63861], \"mapped\", [25504]], [[63862, 63862], \"mapped\", [30053]], [[63863, 63863], \"mapped\", [20142]], [[63864, 63864], \"mapped\", [20841]], [[63865, 63865], \"mapped\", [20937]], [[63866, 63866], \"mapped\", [26753]], [[63867, 63867], \"mapped\", [31975]], [[63868, 63868], \"mapped\", [33391]], [[63869, 63869], \"mapped\", [35538]], [[63870, 63870], \"mapped\", [37327]], [[63871, 63871], \"mapped\", [21237]], [[63872, 63872], \"mapped\", [21570]], [[63873, 63873], \"mapped\", [22899]], [[63874, 63874], \"mapped\", [24300]], [[63875, 63875], \"mapped\", [26053]], [[63876, 63876], \"mapped\", [28670]], [[63877, 63877], \"mapped\", [31018]], [[63878, 63878], \"mapped\", [38317]], [[63879, 63879], \"mapped\", [39530]], [[63880, 63880], \"mapped\", [40599]], [[63881, 63881], \"mapped\", [40654]], [[63882, 63882], \"mapped\", [21147]], [[63883, 63883], \"mapped\", [26310]], [[63884, 63884], \"mapped\", [27511]], [[63885, 63885], \"mapped\", [36706]], [[63886, 63886], \"mapped\", [24180]], [[63887, 63887], \"mapped\", [24976]], [[63888, 63888], \"mapped\", [25088]], [[63889, 63889], \"mapped\", [25754]], [[63890, 63890], \"mapped\", [28451]], [[63891, 63891], \"mapped\", [29001]], [[63892, 63892], \"mapped\", [29833]], [[63893, 63893], \"mapped\", [31178]], [[63894, 63894], \"mapped\", [32244]], [[63895, 63895], \"mapped\", [32879]], [[63896, 63896], \"mapped\", [36646]], [[63897, 63897], \"mapped\", [34030]], [[63898, 63898], \"mapped\", [36899]], [[63899, 63899], \"mapped\", [37706]], [[63900, 63900], \"mapped\", [21015]], [[63901, 63901], \"mapped\", [21155]], [[63902, 63902], \"mapped\", [21693]], [[63903, 63903], \"mapped\", [28872]], [[63904, 63904], \"mapped\", [35010]], [[63905, 63905], \"mapped\", [35498]], [[63906, 63906], \"mapped\", [24265]], [[63907, 63907], \"mapped\", [24565]], [[63908, 63908], \"mapped\", [25467]], [[63909, 63909], \"mapped\", [27566]], [[63910, 63910], \"mapped\", [31806]], [[63911, 63911], \"mapped\", [29557]], [[63912, 63912], \"mapped\", [20196]], [[63913, 63913], \"mapped\", [22265]], [[63914, 63914], \"mapped\", [23527]], [[63915, 63915], \"mapped\", [23994]], [[63916, 63916], \"mapped\", [24604]], [[63917, 63917], \"mapped\", [29618]], [[63918, 63918], \"mapped\", [29801]], [[63919, 63919], \"mapped\", [32666]], [[63920, 63920], \"mapped\", [32838]], [[63921, 63921], \"mapped\", [37428]], [[63922, 63922], \"mapped\", [38646]], [[63923, 63923], \"mapped\", [38728]], [[63924, 63924], \"mapped\", [38936]], [[63925, 63925], \"mapped\", [20363]], [[63926, 63926], \"mapped\", [31150]], [[63927, 63927], \"mapped\", [37300]], [[63928, 63928], \"mapped\", [38584]], [[63929, 63929], \"mapped\", [24801]], [[63930, 63930], \"mapped\", [20102]], [[63931, 63931], \"mapped\", [20698]], [[63932, 63932], \"mapped\", [23534]], [[63933, 63933], \"mapped\", [23615]], [[63934, 63934], \"mapped\", [26009]], [[63935, 63935], \"mapped\", [27138]], [[63936, 63936], \"mapped\", [29134]], [[63937, 63937], \"mapped\", [30274]], [[63938, 63938], \"mapped\", [34044]], [[63939, 63939], \"mapped\", [36988]], [[63940, 63940], \"mapped\", [40845]], [[63941, 63941], \"mapped\", [26248]], [[63942, 63942], \"mapped\", [38446]], [[63943, 63943], \"mapped\", [21129]], [[63944, 63944], \"mapped\", [26491]], [[63945, 63945], \"mapped\", [26611]], [[63946, 63946], \"mapped\", [27969]], [[63947, 63947], \"mapped\", [28316]], [[63948, 63948], \"mapped\", [29705]], [[63949, 63949], \"mapped\", [30041]], [[63950, 63950], \"mapped\", [30827]], [[63951, 63951], \"mapped\", [32016]], [[63952, 63952], \"mapped\", [39006]], [[63953, 63953], \"mapped\", [20845]], [[63954, 63954], \"mapped\", [25134]], [[63955, 63955], \"mapped\", [38520]], [[63956, 63956], \"mapped\", [20523]], [[63957, 63957], \"mapped\", [23833]], [[63958, 63958], \"mapped\", [28138]], [[63959, 63959], \"mapped\", [36650]], [[63960, 63960], \"mapped\", [24459]], [[63961, 63961], \"mapped\", [24900]], [[63962, 63962], \"mapped\", [26647]], [[63963, 63963], \"mapped\", [29575]], [[63964, 63964], \"mapped\", [38534]], [[63965, 63965], \"mapped\", [21033]], [[63966, 63966], \"mapped\", [21519]], [[63967, 63967], \"mapped\", [23653]], [[63968, 63968], \"mapped\", [26131]], [[63969, 63969], \"mapped\", [26446]], [[63970, 63970], \"mapped\", [26792]], [[63971, 63971], \"mapped\", [27877]], [[63972, 63972], \"mapped\", [29702]], [[63973, 63973], \"mapped\", [30178]], [[63974, 63974], \"mapped\", [32633]], [[63975, 63975], \"mapped\", [35023]], [[63976, 63976], \"mapped\", [35041]], [[63977, 63977], \"mapped\", [37324]], [[63978, 63978], \"mapped\", [38626]], [[63979, 63979], \"mapped\", [21311]], [[63980, 63980], \"mapped\", [28346]], [[63981, 63981], \"mapped\", [21533]], [[63982, 63982], \"mapped\", [29136]], [[63983, 63983], \"mapped\", [29848]], [[63984, 63984], \"mapped\", [34298]], [[63985, 63985], \"mapped\", [38563]], [[63986, 63986], \"mapped\", [40023]], [[63987, 63987], \"mapped\", [40607]], [[63988, 63988], \"mapped\", [26519]], [[63989, 63989], \"mapped\", [28107]], [[63990, 63990], \"mapped\", [33256]], [[63991, 63991], \"mapped\", [31435]], [[63992, 63992], \"mapped\", [31520]], [[63993, 63993], \"mapped\", [31890]], [[63994, 63994], \"mapped\", [29376]], [[63995, 63995], \"mapped\", [28825]], [[63996, 63996], \"mapped\", [35672]], [[63997, 63997], \"mapped\", [20160]], [[63998, 63998], \"mapped\", [33590]], [[63999, 63999], \"mapped\", [21050]], [[64000, 64000], \"mapped\", [20999]], [[64001, 64001], \"mapped\", [24230]], [[64002, 64002], \"mapped\", [25299]], [[64003, 64003], \"mapped\", [31958]], [[64004, 64004], \"mapped\", [23429]], [[64005, 64005], \"mapped\", [27934]], [[64006, 64006], \"mapped\", [26292]], [[64007, 64007], \"mapped\", [36667]], [[64008, 64008], \"mapped\", [34892]], [[64009, 64009], \"mapped\", [38477]], [[64010, 64010], \"mapped\", [35211]], [[64011, 64011], \"mapped\", [24275]], [[64012, 64012], \"mapped\", [20800]], [[64013, 64013], \"mapped\", [21952]], [[64014, 64015], \"valid\"], [[64016, 64016], \"mapped\", [22618]], [[64017, 64017], \"valid\"], [[64018, 64018], \"mapped\", [26228]], [[64019, 64020], \"valid\"], [[64021, 64021], \"mapped\", [20958]], [[64022, 64022], \"mapped\", [29482]], [[64023, 64023], \"mapped\", [30410]], [[64024, 64024], \"mapped\", [31036]], [[64025, 64025], \"mapped\", [31070]], [[64026, 64026], \"mapped\", [31077]], [[64027, 64027], \"mapped\", [31119]], [[64028, 64028], \"mapped\", [38742]], [[64029, 64029], \"mapped\", [31934]], [[64030, 64030], \"mapped\", [32701]], [[64031, 64031], \"valid\"], [[64032, 64032], \"mapped\", [34322]], [[64033, 64033], \"valid\"], [[64034, 64034], \"mapped\", [35576]], [[64035, 64036], \"valid\"], [[64037, 64037], \"mapped\", [36920]], [[64038, 64038], \"mapped\", [37117]], [[64039, 64041], \"valid\"], [[64042, 64042], \"mapped\", [39151]], [[64043, 64043], \"mapped\", [39164]], [[64044, 64044], \"mapped\", [39208]], [[64045, 64045], \"mapped\", [40372]], [[64046, 64046], \"mapped\", [37086]], [[64047, 64047], \"mapped\", [38583]], [[64048, 64048], \"mapped\", [20398]], [[64049, 64049], \"mapped\", [20711]], [[64050, 64050], \"mapped\", [20813]], [[64051, 64051], \"mapped\", [21193]], [[64052, 64052], \"mapped\", [21220]], [[64053, 64053], \"mapped\", [21329]], [[64054, 64054], \"mapped\", [21917]], [[64055, 64055], \"mapped\", [22022]], [[64056, 64056], \"mapped\", [22120]], [[64057, 64057], \"mapped\", [22592]], [[64058, 64058], \"mapped\", [22696]], [[64059, 64059], \"mapped\", [23652]], [[64060, 64060], \"mapped\", [23662]], [[64061, 64061], \"mapped\", [24724]], [[64062, 64062], \"mapped\", [24936]], [[64063, 64063], \"mapped\", [24974]], [[64064, 64064], \"mapped\", [25074]], [[64065, 64065], \"mapped\", [25935]], [[64066, 64066], \"mapped\", [26082]], [[64067, 64067], \"mapped\", [26257]], [[64068, 64068], \"mapped\", [26757]], [[64069, 64069], \"mapped\", [28023]], [[64070, 64070], \"mapped\", [28186]], [[64071, 64071], \"mapped\", [28450]], [[64072, 64072], \"mapped\", [29038]], [[64073, 64073], \"mapped\", [29227]], [[64074, 64074], \"mapped\", [29730]], [[64075, 64075], \"mapped\", [30865]], [[64076, 64076], \"mapped\", [31038]], [[64077, 64077], \"mapped\", [31049]], [[64078, 64078], \"mapped\", [31048]], [[64079, 64079], \"mapped\", [31056]], [[64080, 64080], \"mapped\", [31062]], [[64081, 64081], \"mapped\", [31069]], [[64082, 64082], \"mapped\", [31117]], [[64083, 64083], \"mapped\", [31118]], [[64084, 64084], \"mapped\", [31296]], [[64085, 64085], \"mapped\", [31361]], [[64086, 64086], \"mapped\", [31680]], [[64087, 64087], \"mapped\", [32244]], [[64088, 64088], \"mapped\", [32265]], [[64089, 64089], \"mapped\", [32321]], [[64090, 64090], \"mapped\", [32626]], [[64091, 64091], \"mapped\", [32773]], [[64092, 64092], \"mapped\", [33261]], [[64093, 64094], \"mapped\", [33401]], [[64095, 64095], \"mapped\", [33879]], [[64096, 64096], \"mapped\", [35088]], [[64097, 64097], \"mapped\", [35222]], [[64098, 64098], \"mapped\", [35585]], [[64099, 64099], \"mapped\", [35641]], [[64100, 64100], \"mapped\", [36051]], [[64101, 64101], \"mapped\", [36104]], [[64102, 64102], \"mapped\", [36790]], [[64103, 64103], \"mapped\", [36920]], [[64104, 64104], \"mapped\", [38627]], [[64105, 64105], \"mapped\", [38911]], [[64106, 64106], \"mapped\", [38971]], [[64107, 64107], \"mapped\", [24693]], [[64108, 64108], \"mapped\", [148206]], [[64109, 64109], \"mapped\", [33304]], [[64110, 64111], \"disallowed\"], [[64112, 64112], \"mapped\", [20006]], [[64113, 64113], \"mapped\", [20917]], [[64114, 64114], \"mapped\", [20840]], [[64115, 64115], \"mapped\", [20352]], [[64116, 64116], \"mapped\", [20805]], [[64117, 64117], \"mapped\", [20864]], [[64118, 64118], \"mapped\", [21191]], [[64119, 64119], \"mapped\", [21242]], [[64120, 64120], \"mapped\", [21917]], [[64121, 64121], \"mapped\", [21845]], [[64122, 64122], \"mapped\", [21913]], [[64123, 64123], \"mapped\", [21986]], [[64124, 64124], \"mapped\", [22618]], [[64125, 64125], \"mapped\", [22707]], [[64126, 64126], \"mapped\", [22852]], [[64127, 64127], \"mapped\", [22868]], [[64128, 64128], \"mapped\", [23138]], [[64129, 64129], \"mapped\", [23336]], [[64130, 64130], \"mapped\", [24274]], [[64131, 64131], \"mapped\", [24281]], [[64132, 64132], \"mapped\", [24425]], [[64133, 64133], \"mapped\", [24493]], [[64134, 64134], \"mapped\", [24792]], [[64135, 64135], \"mapped\", [24910]], [[64136, 64136], \"mapped\", [24840]], [[64137, 64137], \"mapped\", [24974]], [[64138, 64138], \"mapped\", [24928]], [[64139, 64139], \"mapped\", [25074]], [[64140, 64140], \"mapped\", [25140]], [[64141, 64141], \"mapped\", [25540]], [[64142, 64142], \"mapped\", [25628]], [[64143, 64143], \"mapped\", [25682]], [[64144, 64144], \"mapped\", [25942]], [[64145, 64145], \"mapped\", [26228]], [[64146, 64146], \"mapped\", [26391]], [[64147, 64147], \"mapped\", [26395]], [[64148, 64148], \"mapped\", [26454]], [[64149, 64149], \"mapped\", [27513]], [[64150, 64150], \"mapped\", [27578]], [[64151, 64151], \"mapped\", [27969]], [[64152, 64152], \"mapped\", [28379]], [[64153, 64153], \"mapped\", [28363]], [[64154, 64154], \"mapped\", [28450]], [[64155, 64155], \"mapped\", [28702]], [[64156, 64156], \"mapped\", [29038]], [[64157, 64157], \"mapped\", [30631]], [[64158, 64158], \"mapped\", [29237]], [[64159, 64159], \"mapped\", [29359]], [[64160, 64160], \"mapped\", [29482]], [[64161, 64161], \"mapped\", [29809]], [[64162, 64162], \"mapped\", [29958]], [[64163, 64163], \"mapped\", [30011]], [[64164, 64164], \"mapped\", [30237]], [[64165, 64165], \"mapped\", [30239]], [[64166, 64166], \"mapped\", [30410]], [[64167, 64167], \"mapped\", [30427]], [[64168, 64168], \"mapped\", [30452]], [[64169, 64169], \"mapped\", [30538]], [[64170, 64170], \"mapped\", [30528]], [[64171, 64171], \"mapped\", [30924]], [[64172, 64172], \"mapped\", [31409]], [[64173, 64173], \"mapped\", [31680]], [[64174, 64174], \"mapped\", [31867]], [[64175, 64175], \"mapped\", [32091]], [[64176, 64176], \"mapped\", [32244]], [[64177, 64177], \"mapped\", [32574]], [[64178, 64178], \"mapped\", [32773]], [[64179, 64179], \"mapped\", [33618]], [[64180, 64180], \"mapped\", [33775]], [[64181, 64181], \"mapped\", [34681]], [[64182, 64182], \"mapped\", [35137]], [[64183, 64183], \"mapped\", [35206]], [[64184, 64184], \"mapped\", [35222]], [[64185, 64185], \"mapped\", [35519]], [[64186, 64186], \"mapped\", [35576]], [[64187, 64187], \"mapped\", [35531]], [[64188, 64188], \"mapped\", [35585]], [[64189, 64189], \"mapped\", [35582]], [[64190, 64190], \"mapped\", [35565]], [[64191, 64191], \"mapped\", [35641]], [[64192, 64192], \"mapped\", [35722]], [[64193, 64193], \"mapped\", [36104]], [[64194, 64194], \"mapped\", [36664]], [[64195, 64195], \"mapped\", [36978]], [[64196, 64196], \"mapped\", [37273]], [[64197, 64197], \"mapped\", [37494]], [[64198, 64198], \"mapped\", [38524]], [[64199, 64199], \"mapped\", [38627]], [[64200, 64200], \"mapped\", [38742]], [[64201, 64201], \"mapped\", [38875]], [[64202, 64202], \"mapped\", [38911]], [[64203, 64203], \"mapped\", [38923]], [[64204, 64204], \"mapped\", [38971]], [[64205, 64205], \"mapped\", [39698]], [[64206, 64206], \"mapped\", [40860]], [[64207, 64207], \"mapped\", [141386]], [[64208, 64208], \"mapped\", [141380]], [[64209, 64209], \"mapped\", [144341]], [[64210, 64210], \"mapped\", [15261]], [[64211, 64211], \"mapped\", [16408]], [[64212, 64212], \"mapped\", [16441]], [[64213, 64213], \"mapped\", [152137]], [[64214, 64214], \"mapped\", [154832]], [[64215, 64215], \"mapped\", [163539]], [[64216, 64216], \"mapped\", [40771]], [[64217, 64217], \"mapped\", [40846]], [[64218, 64255], \"disallowed\"], [[64256, 64256], \"mapped\", [102, 102]], [[64257, 64257], \"mapped\", [102, 105]], [[64258, 64258], \"mapped\", [102, 108]], [[64259, 64259], \"mapped\", [102, 102, 105]], [[64260, 64260], \"mapped\", [102, 102, 108]], [[64261, 64262], \"mapped\", [115, 116]], [[64263, 64274], \"disallowed\"], [[64275, 64275], \"mapped\", [1396, 1398]], [[64276, 64276], \"mapped\", [1396, 1381]], [[64277, 64277], \"mapped\", [1396, 1387]], [[64278, 64278], \"mapped\", [1406, 1398]], [[64279, 64279], \"mapped\", [1396, 1389]], [[64280, 64284], \"disallowed\"], [[64285, 64285], \"mapped\", [1497, 1460]], [[64286, 64286], \"valid\"], [[64287, 64287], \"mapped\", [1522, 1463]], [[64288, 64288], \"mapped\", [1506]], [[64289, 64289], \"mapped\", [1488]], [[64290, 64290], \"mapped\", [1491]], [[64291, 64291], \"mapped\", [1492]], [[64292, 64292], \"mapped\", [1499]], [[64293, 64293], \"mapped\", [1500]], [[64294, 64294], \"mapped\", [1501]], [[64295, 64295], \"mapped\", [1512]], [[64296, 64296], \"mapped\", [1514]], [[64297, 64297], \"disallowed_STD3_mapped\", [43]], [[64298, 64298], \"mapped\", [1513, 1473]], [[64299, 64299], \"mapped\", [1513, 1474]], [[64300, 64300], \"mapped\", [1513, 1468, 1473]], [[64301, 64301], \"mapped\", [1513, 1468, 1474]], [[64302, 64302], \"mapped\", [1488, 1463]], [[64303, 64303], \"mapped\", [1488, 1464]], [[64304, 64304], \"mapped\", [1488, 1468]], [[64305, 64305], \"mapped\", [1489, 1468]], [[64306, 64306], \"mapped\", [1490, 1468]], [[64307, 64307], \"mapped\", [1491, 1468]], [[64308, 64308], \"mapped\", [1492, 1468]], [[64309, 64309], \"mapped\", [1493, 1468]], [[64310, 64310], \"mapped\", [1494, 1468]], [[64311, 64311], \"disallowed\"], [[64312, 64312], \"mapped\", [1496, 1468]], [[64313, 64313], \"mapped\", [1497, 1468]], [[64314, 64314], \"mapped\", [1498, 1468]], [[64315, 64315], \"mapped\", [1499, 1468]], [[64316, 64316], \"mapped\", [1500, 1468]], [[64317, 64317], \"disallowed\"], [[64318, 64318], \"mapped\", [1502, 1468]], [[64319, 64319], \"disallowed\"], [[64320, 64320], \"mapped\", [1504, 1468]], [[64321, 64321], \"mapped\", [1505, 1468]], [[64322, 64322], \"disallowed\"], [[64323, 64323], \"mapped\", [1507, 1468]], [[64324, 64324], \"mapped\", [1508, 1468]], [[64325, 64325], \"disallowed\"], [[64326, 64326], \"mapped\", [1510, 1468]], [[64327, 64327], \"mapped\", [1511, 1468]], [[64328, 64328], \"mapped\", [1512, 1468]], [[64329, 64329], \"mapped\", [1513, 1468]], [[64330, 64330], \"mapped\", [1514, 1468]], [[64331, 64331], \"mapped\", [1493, 1465]], [[64332, 64332], \"mapped\", [1489, 1471]], [[64333, 64333], \"mapped\", [1499, 1471]], [[64334, 64334], \"mapped\", [1508, 1471]], [[64335, 64335], \"mapped\", [1488, 1500]], [[64336, 64337], \"mapped\", [1649]], [[64338, 64341], \"mapped\", [1659]], [[64342, 64345], \"mapped\", [1662]], [[64346, 64349], \"mapped\", [1664]], [[64350, 64353], \"mapped\", [1658]], [[64354, 64357], \"mapped\", [1663]], [[64358, 64361], \"mapped\", [1657]], [[64362, 64365], \"mapped\", [1700]], [[64366, 64369], \"mapped\", [1702]], [[64370, 64373], \"mapped\", [1668]], [[64374, 64377], \"mapped\", [1667]], [[64378, 64381], \"mapped\", [1670]], [[64382, 64385], \"mapped\", [1671]], [[64386, 64387], \"mapped\", [1677]], [[64388, 64389], \"mapped\", [1676]], [[64390, 64391], \"mapped\", [1678]], [[64392, 64393], \"mapped\", [1672]], [[64394, 64395], \"mapped\", [1688]], [[64396, 64397], \"mapped\", [1681]], [[64398, 64401], \"mapped\", [1705]], [[64402, 64405], \"mapped\", [1711]], [[64406, 64409], \"mapped\", [1715]], [[64410, 64413], \"mapped\", [1713]], [[64414, 64415], \"mapped\", [1722]], [[64416, 64419], \"mapped\", [1723]], [[64420, 64421], \"mapped\", [1728]], [[64422, 64425], \"mapped\", [1729]], [[64426, 64429], \"mapped\", [1726]], [[64430, 64431], \"mapped\", [1746]], [[64432, 64433], \"mapped\", [1747]], [[64434, 64449], \"valid\", [], \"NV8\"], [[64450, 64466], \"disallowed\"], [[64467, 64470], \"mapped\", [1709]], [[64471, 64472], \"mapped\", [1735]], [[64473, 64474], \"mapped\", [1734]], [[64475, 64476], \"mapped\", [1736]], [[64477, 64477], \"mapped\", [1735, 1652]], [[64478, 64479], \"mapped\", [1739]], [[64480, 64481], \"mapped\", [1733]], [[64482, 64483], \"mapped\", [1737]], [[64484, 64487], \"mapped\", [1744]], [[64488, 64489], \"mapped\", [1609]], [[64490, 64491], \"mapped\", [1574, 1575]], [[64492, 64493], \"mapped\", [1574, 1749]], [[64494, 64495], \"mapped\", [1574, 1608]], [[64496, 64497], \"mapped\", [1574, 1735]], [[64498, 64499], \"mapped\", [1574, 1734]], [[64500, 64501], \"mapped\", [1574, 1736]], [[64502, 64504], \"mapped\", [1574, 1744]], [[64505, 64507], \"mapped\", [1574, 1609]], [[64508, 64511], \"mapped\", [1740]], [[64512, 64512], \"mapped\", [1574, 1580]], [[64513, 64513], \"mapped\", [1574, 1581]], [[64514, 64514], \"mapped\", [1574, 1605]], [[64515, 64515], \"mapped\", [1574, 1609]], [[64516, 64516], \"mapped\", [1574, 1610]], [[64517, 64517], \"mapped\", [1576, 1580]], [[64518, 64518], \"mapped\", [1576, 1581]], [[64519, 64519], \"mapped\", [1576, 1582]], [[64520, 64520], \"mapped\", [1576, 1605]], [[64521, 64521], \"mapped\", [1576, 1609]], [[64522, 64522], \"mapped\", [1576, 1610]], [[64523, 64523], \"mapped\", [1578, 1580]], [[64524, 64524], \"mapped\", [1578, 1581]], [[64525, 64525], \"mapped\", [1578, 1582]], [[64526, 64526], \"mapped\", [1578, 1605]], [[64527, 64527], \"mapped\", [1578, 1609]], [[64528, 64528], \"mapped\", [1578, 1610]], [[64529, 64529], \"mapped\", [1579, 1580]], [[64530, 64530], \"mapped\", [1579, 1605]], [[64531, 64531], \"mapped\", [1579, 1609]], [[64532, 64532], \"mapped\", [1579, 1610]], [[64533, 64533], \"mapped\", [1580, 1581]], [[64534, 64534], \"mapped\", [1580, 1605]], [[64535, 64535], \"mapped\", [1581, 1580]], [[64536, 64536], \"mapped\", [1581, 1605]], [[64537, 64537], \"mapped\", [1582, 1580]], [[64538, 64538], \"mapped\", [1582, 1581]], [[64539, 64539], \"mapped\", [1582, 1605]], [[64540, 64540], \"mapped\", [1587, 1580]], [[64541, 64541], \"mapped\", [1587, 1581]], [[64542, 64542], \"mapped\", [1587, 1582]], [[64543, 64543], \"mapped\", [1587, 1605]], [[64544, 64544], \"mapped\", [1589, 1581]], [[64545, 64545], \"mapped\", [1589, 1605]], [[64546, 64546], \"mapped\", [1590, 1580]], [[64547, 64547], \"mapped\", [1590, 1581]], [[64548, 64548], \"mapped\", [1590, 1582]], [[64549, 64549], \"mapped\", [1590, 1605]], [[64550, 64550], \"mapped\", [1591, 1581]], [[64551, 64551], \"mapped\", [1591, 1605]], [[64552, 64552], \"mapped\", [1592, 1605]], [[64553, 64553], \"mapped\", [1593, 1580]], [[64554, 64554], \"mapped\", [1593, 1605]], [[64555, 64555], \"mapped\", [1594, 1580]], [[64556, 64556], \"mapped\", [1594, 1605]], [[64557, 64557], \"mapped\", [1601, 1580]], [[64558, 64558], \"mapped\", [1601, 1581]], [[64559, 64559], \"mapped\", [1601, 1582]], [[64560, 64560], \"mapped\", [1601, 1605]], [[64561, 64561], \"mapped\", [1601, 1609]], [[64562, 64562], \"mapped\", [1601, 1610]], [[64563, 64563], \"mapped\", [1602, 1581]], [[64564, 64564], \"mapped\", [1602, 1605]], [[64565, 64565], \"mapped\", [1602, 1609]], [[64566, 64566], \"mapped\", [1602, 1610]], [[64567, 64567], \"mapped\", [1603, 1575]], [[64568, 64568], \"mapped\", [1603, 1580]], [[64569, 64569], \"mapped\", [1603, 1581]], [[64570, 64570], \"mapped\", [1603, 1582]], [[64571, 64571], \"mapped\", [1603, 1604]], [[64572, 64572], \"mapped\", [1603, 1605]], [[64573, 64573], \"mapped\", [1603, 1609]], [[64574, 64574], \"mapped\", [1603, 1610]], [[64575, 64575], \"mapped\", [1604, 1580]], [[64576, 64576], \"mapped\", [1604, 1581]], [[64577, 64577], \"mapped\", [1604, 1582]], [[64578, 64578], \"mapped\", [1604, 1605]], [[64579, 64579], \"mapped\", [1604, 1609]], [[64580, 64580], \"mapped\", [1604, 1610]], [[64581, 64581], \"mapped\", [1605, 1580]], [[64582, 64582], \"mapped\", [1605, 1581]], [[64583, 64583], \"mapped\", [1605, 1582]], [[64584, 64584], \"mapped\", [1605, 1605]], [[64585, 64585], \"mapped\", [1605, 1609]], [[64586, 64586], \"mapped\", [1605, 1610]], [[64587, 64587], \"mapped\", [1606, 1580]], [[64588, 64588], \"mapped\", [1606, 1581]], [[64589, 64589], \"mapped\", [1606, 1582]], [[64590, 64590], \"mapped\", [1606, 1605]], [[64591, 64591], \"mapped\", [1606, 1609]], [[64592, 64592], \"mapped\", [1606, 1610]], [[64593, 64593], \"mapped\", [1607, 1580]], [[64594, 64594], \"mapped\", [1607, 1605]], [[64595, 64595], \"mapped\", [1607, 1609]], [[64596, 64596], \"mapped\", [1607, 1610]], [[64597, 64597], \"mapped\", [1610, 1580]], [[64598, 64598], \"mapped\", [1610, 1581]], [[64599, 64599], \"mapped\", [1610, 1582]], [[64600, 64600], \"mapped\", [1610, 1605]], [[64601, 64601], \"mapped\", [1610, 1609]], [[64602, 64602], \"mapped\", [1610, 1610]], [[64603, 64603], \"mapped\", [1584, 1648]], [[64604, 64604], \"mapped\", [1585, 1648]], [[64605, 64605], \"mapped\", [1609, 1648]], [[64606, 64606], \"disallowed_STD3_mapped\", [32, 1612, 1617]], [[64607, 64607], \"disallowed_STD3_mapped\", [32, 1613, 1617]], [[64608, 64608], \"disallowed_STD3_mapped\", [32, 1614, 1617]], [[64609, 64609], \"disallowed_STD3_mapped\", [32, 1615, 1617]], [[64610, 64610], \"disallowed_STD3_mapped\", [32, 1616, 1617]], [[64611, 64611], \"disallowed_STD3_mapped\", [32, 1617, 1648]], [[64612, 64612], \"mapped\", [1574, 1585]], [[64613, 64613], \"mapped\", [1574, 1586]], [[64614, 64614], \"mapped\", [1574, 1605]], [[64615, 64615], \"mapped\", [1574, 1606]], [[64616, 64616], \"mapped\", [1574, 1609]], [[64617, 64617], \"mapped\", [1574, 1610]], [[64618, 64618], \"mapped\", [1576, 1585]], [[64619, 64619], \"mapped\", [1576, 1586]], [[64620, 64620], \"mapped\", [1576, 1605]], [[64621, 64621], \"mapped\", [1576, 1606]], [[64622, 64622], \"mapped\", [1576, 1609]], [[64623, 64623], \"mapped\", [1576, 1610]], [[64624, 64624], \"mapped\", [1578, 1585]], [[64625, 64625], \"mapped\", [1578, 1586]], [[64626, 64626], \"mapped\", [1578, 1605]], [[64627, 64627], \"mapped\", [1578, 1606]], [[64628, 64628], \"mapped\", [1578, 1609]], [[64629, 64629], \"mapped\", [1578, 1610]], [[64630, 64630], \"mapped\", [1579, 1585]], [[64631, 64631], \"mapped\", [1579, 1586]], [[64632, 64632], \"mapped\", [1579, 1605]], [[64633, 64633], \"mapped\", [1579, 1606]], [[64634, 64634], \"mapped\", [1579, 1609]], [[64635, 64635], \"mapped\", [1579, 1610]], [[64636, 64636], \"mapped\", [1601, 1609]], [[64637, 64637], \"mapped\", [1601, 1610]], [[64638, 64638], \"mapped\", [1602, 1609]], [[64639, 64639], \"mapped\", [1602, 1610]], [[64640, 64640], \"mapped\", [1603, 1575]], [[64641, 64641], \"mapped\", [1603, 1604]], [[64642, 64642], \"mapped\", [1603, 1605]], [[64643, 64643], \"mapped\", [1603, 1609]], [[64644, 64644], \"mapped\", [1603, 1610]], [[64645, 64645], \"mapped\", [1604, 1605]], [[64646, 64646], \"mapped\", [1604, 1609]], [[64647, 64647], \"mapped\", [1604, 1610]], [[64648, 64648], \"mapped\", [1605, 1575]], [[64649, 64649], \"mapped\", [1605, 1605]], [[64650, 64650], \"mapped\", [1606, 1585]], [[64651, 64651], \"mapped\", [1606, 1586]], [[64652, 64652], \"mapped\", [1606, 1605]], [[64653, 64653], \"mapped\", [1606, 1606]], [[64654, 64654], \"mapped\", [1606, 1609]], [[64655, 64655], \"mapped\", [1606, 1610]], [[64656, 64656], \"mapped\", [1609, 1648]], [[64657, 64657], \"mapped\", [1610, 1585]], [[64658, 64658], \"mapped\", [1610, 1586]], [[64659, 64659], \"mapped\", [1610, 1605]], [[64660, 64660], \"mapped\", [1610, 1606]], [[64661, 64661], \"mapped\", [1610, 1609]], [[64662, 64662], \"mapped\", [1610, 1610]], [[64663, 64663], \"mapped\", [1574, 1580]], [[64664, 64664], \"mapped\", [1574, 1581]], [[64665, 64665], \"mapped\", [1574, 1582]], [[64666, 64666], \"mapped\", [1574, 1605]], [[64667, 64667], \"mapped\", [1574, 1607]], [[64668, 64668], \"mapped\", [1576, 1580]], [[64669, 64669], \"mapped\", [1576, 1581]], [[64670, 64670], \"mapped\", [1576, 1582]], [[64671, 64671], \"mapped\", [1576, 1605]], [[64672, 64672], \"mapped\", [1576, 1607]], [[64673, 64673], \"mapped\", [1578, 1580]], [[64674, 64674], \"mapped\", [1578, 1581]], [[64675, 64675], \"mapped\", [1578, 1582]], [[64676, 64676], \"mapped\", [1578, 1605]], [[64677, 64677], \"mapped\", [1578, 1607]], [[64678, 64678], \"mapped\", [1579, 1605]], [[64679, 64679], \"mapped\", [1580, 1581]], [[64680, 64680], \"mapped\", [1580, 1605]], [[64681, 64681], \"mapped\", [1581, 1580]], [[64682, 64682], \"mapped\", [1581, 1605]], [[64683, 64683], \"mapped\", [1582, 1580]], [[64684, 64684], \"mapped\", [1582, 1605]], [[64685, 64685], \"mapped\", [1587, 1580]], [[64686, 64686], \"mapped\", [1587, 1581]], [[64687, 64687], \"mapped\", [1587, 1582]], [[64688, 64688], \"mapped\", [1587, 1605]], [[64689, 64689], \"mapped\", [1589, 1581]], [[64690, 64690], \"mapped\", [1589, 1582]], [[64691, 64691], \"mapped\", [1589, 1605]], [[64692, 64692], \"mapped\", [1590, 1580]], [[64693, 64693], \"mapped\", [1590, 1581]], [[64694, 64694], \"mapped\", [1590, 1582]], [[64695, 64695], \"mapped\", [1590, 1605]], [[64696, 64696], \"mapped\", [1591, 1581]], [[64697, 64697], \"mapped\", [1592, 1605]], [[64698, 64698], \"mapped\", [1593, 1580]], [[64699, 64699], \"mapped\", [1593, 1605]], [[64700, 64700], \"mapped\", [1594, 1580]], [[64701, 64701], \"mapped\", [1594, 1605]], [[64702, 64702], \"mapped\", [1601, 1580]], [[64703, 64703], \"mapped\", [1601, 1581]], [[64704, 64704], \"mapped\", [1601, 1582]], [[64705, 64705], \"mapped\", [1601, 1605]], [[64706, 64706], \"mapped\", [1602, 1581]], [[64707, 64707], \"mapped\", [1602, 1605]], [[64708, 64708], \"mapped\", [1603, 1580]], [[64709, 64709], \"mapped\", [1603, 1581]], [[64710, 64710], \"mapped\", [1603, 1582]], [[64711, 64711], \"mapped\", [1603, 1604]], [[64712, 64712], \"mapped\", [1603, 1605]], [[64713, 64713], \"mapped\", [1604, 1580]], [[64714, 64714], \"mapped\", [1604, 1581]], [[64715, 64715], \"mapped\", [1604, 1582]], [[64716, 64716], \"mapped\", [1604, 1605]], [[64717, 64717], \"mapped\", [1604, 1607]], [[64718, 64718], \"mapped\", [1605, 1580]], [[64719, 64719], \"mapped\", [1605, 1581]], [[64720, 64720], \"mapped\", [1605, 1582]], [[64721, 64721], \"mapped\", [1605, 1605]], [[64722, 64722], \"mapped\", [1606, 1580]], [[64723, 64723], \"mapped\", [1606, 1581]], [[64724, 64724], \"mapped\", [1606, 1582]], [[64725, 64725], \"mapped\", [1606, 1605]], [[64726, 64726], \"mapped\", [1606, 1607]], [[64727, 64727], \"mapped\", [1607, 1580]], [[64728, 64728], \"mapped\", [1607, 1605]], [[64729, 64729], \"mapped\", [1607, 1648]], [[64730, 64730], \"mapped\", [1610, 1580]], [[64731, 64731], \"mapped\", [1610, 1581]], [[64732, 64732], \"mapped\", [1610, 1582]], [[64733, 64733], \"mapped\", [1610, 1605]], [[64734, 64734], \"mapped\", [1610, 1607]], [[64735, 64735], \"mapped\", [1574, 1605]], [[64736, 64736], \"mapped\", [1574, 1607]], [[64737, 64737], \"mapped\", [1576, 1605]], [[64738, 64738], \"mapped\", [1576, 1607]], [[64739, 64739], \"mapped\", [1578, 1605]], [[64740, 64740], \"mapped\", [1578, 1607]], [[64741, 64741], \"mapped\", [1579, 1605]], [[64742, 64742], \"mapped\", [1579, 1607]], [[64743, 64743], \"mapped\", [1587, 1605]], [[64744, 64744], \"mapped\", [1587, 1607]], [[64745, 64745], \"mapped\", [1588, 1605]], [[64746, 64746], \"mapped\", [1588, 1607]], [[64747, 64747], \"mapped\", [1603, 1604]], [[64748, 64748], \"mapped\", [1603, 1605]], [[64749, 64749], \"mapped\", [1604, 1605]], [[64750, 64750], \"mapped\", [1606, 1605]], [[64751, 64751], \"mapped\", [1606, 1607]], [[64752, 64752], \"mapped\", [1610, 1605]], [[64753, 64753], \"mapped\", [1610, 1607]], [[64754, 64754], \"mapped\", [1600, 1614, 1617]], [[64755, 64755], \"mapped\", [1600, 1615, 1617]], [[64756, 64756], \"mapped\", [1600, 1616, 1617]], [[64757, 64757], \"mapped\", [1591, 1609]], [[64758, 64758], \"mapped\", [1591, 1610]], [[64759, 64759], \"mapped\", [1593, 1609]], [[64760, 64760], \"mapped\", [1593, 1610]], [[64761, 64761], \"mapped\", [1594, 1609]], [[64762, 64762], \"mapped\", [1594, 1610]], [[64763, 64763], \"mapped\", [1587, 1609]], [[64764, 64764], \"mapped\", [1587, 1610]], [[64765, 64765], \"mapped\", [1588, 1609]], [[64766, 64766], \"mapped\", [1588, 1610]], [[64767, 64767], \"mapped\", [1581, 1609]], [[64768, 64768], \"mapped\", [1581, 1610]], [[64769, 64769], \"mapped\", [1580, 1609]], [[64770, 64770], \"mapped\", [1580, 1610]], [[64771, 64771], \"mapped\", [1582, 1609]], [[64772, 64772], \"mapped\", [1582, 1610]], [[64773, 64773], \"mapped\", [1589, 1609]], [[64774, 64774], \"mapped\", [1589, 1610]], [[64775, 64775], \"mapped\", [1590, 1609]], [[64776, 64776], \"mapped\", [1590, 1610]], [[64777, 64777], \"mapped\", [1588, 1580]], [[64778, 64778], \"mapped\", [1588, 1581]], [[64779, 64779], \"mapped\", [1588, 1582]], [[64780, 64780], \"mapped\", [1588, 1605]], [[64781, 64781], \"mapped\", [1588, 1585]], [[64782, 64782], \"mapped\", [1587, 1585]], [[64783, 64783], \"mapped\", [1589, 1585]], [[64784, 64784], \"mapped\", [1590, 1585]], [[64785, 64785], \"mapped\", [1591, 1609]], [[64786, 64786], \"mapped\", [1591, 1610]], [[64787, 64787], \"mapped\", [1593, 1609]], [[64788, 64788], \"mapped\", [1593, 1610]], [[64789, 64789], \"mapped\", [1594, 1609]], [[64790, 64790], \"mapped\", [1594, 1610]], [[64791, 64791], \"mapped\", [1587, 1609]], [[64792, 64792], \"mapped\", [1587, 1610]], [[64793, 64793], \"mapped\", [1588, 1609]], [[64794, 64794], \"mapped\", [1588, 1610]], [[64795, 64795], \"mapped\", [1581, 1609]], [[64796, 64796], \"mapped\", [1581, 1610]], [[64797, 64797], \"mapped\", [1580, 1609]], [[64798, 64798], \"mapped\", [1580, 1610]], [[64799, 64799], \"mapped\", [1582, 1609]], [[64800, 64800], \"mapped\", [1582, 1610]], [[64801, 64801], \"mapped\", [1589, 1609]], [[64802, 64802], \"mapped\", [1589, 1610]], [[64803, 64803], \"mapped\", [1590, 1609]], [[64804, 64804], \"mapped\", [1590, 1610]], [[64805, 64805], \"mapped\", [1588, 1580]], [[64806, 64806], \"mapped\", [1588, 1581]], [[64807, 64807], \"mapped\", [1588, 1582]], [[64808, 64808], \"mapped\", [1588, 1605]], [[64809, 64809], \"mapped\", [1588, 1585]], [[64810, 64810], \"mapped\", [1587, 1585]], [[64811, 64811], \"mapped\", [1589, 1585]], [[64812, 64812], \"mapped\", [1590, 1585]], [[64813, 64813], \"mapped\", [1588, 1580]], [[64814, 64814], \"mapped\", [1588, 1581]], [[64815, 64815], \"mapped\", [1588, 1582]], [[64816, 64816], \"mapped\", [1588, 1605]], [[64817, 64817], \"mapped\", [1587, 1607]], [[64818, 64818], \"mapped\", [1588, 1607]], [[64819, 64819], \"mapped\", [1591, 1605]], [[64820, 64820], \"mapped\", [1587, 1580]], [[64821, 64821], \"mapped\", [1587, 1581]], [[64822, 64822], \"mapped\", [1587, 1582]], [[64823, 64823], \"mapped\", [1588, 1580]], [[64824, 64824], \"mapped\", [1588, 1581]], [[64825, 64825], \"mapped\", [1588, 1582]], [[64826, 64826], \"mapped\", [1591, 1605]], [[64827, 64827], \"mapped\", [1592, 1605]], [[64828, 64829], \"mapped\", [1575, 1611]], [[64830, 64831], \"valid\", [], \"NV8\"], [[64832, 64847], \"disallowed\"], [[64848, 64848], \"mapped\", [1578, 1580, 1605]], [[64849, 64850], \"mapped\", [1578, 1581, 1580]], [[64851, 64851], \"mapped\", [1578, 1581, 1605]], [[64852, 64852], \"mapped\", [1578, 1582, 1605]], [[64853, 64853], \"mapped\", [1578, 1605, 1580]], [[64854, 64854], \"mapped\", [1578, 1605, 1581]], [[64855, 64855], \"mapped\", [1578, 1605, 1582]], [[64856, 64857], \"mapped\", [1580, 1605, 1581]], [[64858, 64858], \"mapped\", [1581, 1605, 1610]], [[64859, 64859], \"mapped\", [1581, 1605, 1609]], [[64860, 64860], \"mapped\", [1587, 1581, 1580]], [[64861, 64861], \"mapped\", [1587, 1580, 1581]], [[64862, 64862], \"mapped\", [1587, 1580, 1609]], [[64863, 64864], \"mapped\", [1587, 1605, 1581]], [[64865, 64865], \"mapped\", [1587, 1605, 1580]], [[64866, 64867], \"mapped\", [1587, 1605, 1605]], [[64868, 64869], \"mapped\", [1589, 1581, 1581]], [[64870, 64870], \"mapped\", [1589, 1605, 1605]], [[64871, 64872], \"mapped\", [1588, 1581, 1605]], [[64873, 64873], \"mapped\", [1588, 1580, 1610]], [[64874, 64875], \"mapped\", [1588, 1605, 1582]], [[64876, 64877], \"mapped\", [1588, 1605, 1605]], [[64878, 64878], \"mapped\", [1590, 1581, 1609]], [[64879, 64880], \"mapped\", [1590, 1582, 1605]], [[64881, 64882], \"mapped\", [1591, 1605, 1581]], [[64883, 64883], \"mapped\", [1591, 1605, 1605]], [[64884, 64884], \"mapped\", [1591, 1605, 1610]], [[64885, 64885], \"mapped\", [1593, 1580, 1605]], [[64886, 64887], \"mapped\", [1593, 1605, 1605]], [[64888, 64888], \"mapped\", [1593, 1605, 1609]], [[64889, 64889], \"mapped\", [1594, 1605, 1605]], [[64890, 64890], \"mapped\", [1594, 1605, 1610]], [[64891, 64891], \"mapped\", [1594, 1605, 1609]], [[64892, 64893], \"mapped\", [1601, 1582, 1605]], [[64894, 64894], \"mapped\", [1602, 1605, 1581]], [[64895, 64895], \"mapped\", [1602, 1605, 1605]], [[64896, 64896], \"mapped\", [1604, 1581, 1605]], [[64897, 64897], \"mapped\", [1604, 1581, 1610]], [[64898, 64898], \"mapped\", [1604, 1581, 1609]], [[64899, 64900], \"mapped\", [1604, 1580, 1580]], [[64901, 64902], \"mapped\", [1604, 1582, 1605]], [[64903, 64904], \"mapped\", [1604, 1605, 1581]], [[64905, 64905], \"mapped\", [1605, 1581, 1580]], [[64906, 64906], \"mapped\", [1605, 1581, 1605]], [[64907, 64907], \"mapped\", [1605, 1581, 1610]], [[64908, 64908], \"mapped\", [1605, 1580, 1581]], [[64909, 64909], \"mapped\", [1605, 1580, 1605]], [[64910, 64910], \"mapped\", [1605, 1582, 1580]], [[64911, 64911], \"mapped\", [1605, 1582, 1605]], [[64912, 64913], \"disallowed\"], [[64914, 64914], \"mapped\", [1605, 1580, 1582]], [[64915, 64915], \"mapped\", [1607, 1605, 1580]], [[64916, 64916], \"mapped\", [1607, 1605, 1605]], [[64917, 64917], \"mapped\", [1606, 1581, 1605]], [[64918, 64918], \"mapped\", [1606, 1581, 1609]], [[64919, 64920], \"mapped\", [1606, 1580, 1605]], [[64921, 64921], \"mapped\", [1606, 1580, 1609]], [[64922, 64922], \"mapped\", [1606, 1605, 1610]], [[64923, 64923], \"mapped\", [1606, 1605, 1609]], [[64924, 64925], \"mapped\", [1610, 1605, 1605]], [[64926, 64926], \"mapped\", [1576, 1582, 1610]], [[64927, 64927], \"mapped\", [1578, 1580, 1610]], [[64928, 64928], \"mapped\", [1578, 1580, 1609]], [[64929, 64929], \"mapped\", [1578, 1582, 1610]], [[64930, 64930], \"mapped\", [1578, 1582, 1609]], [[64931, 64931], \"mapped\", [1578, 1605, 1610]], [[64932, 64932], \"mapped\", [1578, 1605, 1609]], [[64933, 64933], \"mapped\", [1580, 1605, 1610]], [[64934, 64934], \"mapped\", [1580, 1581, 1609]], [[64935, 64935], \"mapped\", [1580, 1605, 1609]], [[64936, 64936], \"mapped\", [1587, 1582, 1609]], [[64937, 64937], \"mapped\", [1589, 1581, 1610]], [[64938, 64938], \"mapped\", [1588, 1581, 1610]], [[64939, 64939], \"mapped\", [1590, 1581, 1610]], [[64940, 64940], \"mapped\", [1604, 1580, 1610]], [[64941, 64941], \"mapped\", [1604, 1605, 1610]], [[64942, 64942], \"mapped\", [1610, 1581, 1610]], [[64943, 64943], \"mapped\", [1610, 1580, 1610]], [[64944, 64944], \"mapped\", [1610, 1605, 1610]], [[64945, 64945], \"mapped\", [1605, 1605, 1610]], [[64946, 64946], \"mapped\", [1602, 1605, 1610]], [[64947, 64947], \"mapped\", [1606, 1581, 1610]], [[64948, 64948], \"mapped\", [1602, 1605, 1581]], [[64949, 64949], \"mapped\", [1604, 1581, 1605]], [[64950, 64950], \"mapped\", [1593, 1605, 1610]], [[64951, 64951], \"mapped\", [1603, 1605, 1610]], [[64952, 64952], \"mapped\", [1606, 1580, 1581]], [[64953, 64953], \"mapped\", [1605, 1582, 1610]], [[64954, 64954], \"mapped\", [1604, 1580, 1605]], [[64955, 64955], \"mapped\", [1603, 1605, 1605]], [[64956, 64956], \"mapped\", [1604, 1580, 1605]], [[64957, 64957], \"mapped\", [1606, 1580, 1581]], [[64958, 64958], \"mapped\", [1580, 1581, 1610]], [[64959, 64959], \"mapped\", [1581, 1580, 1610]], [[64960, 64960], \"mapped\", [1605, 1580, 1610]], [[64961, 64961], \"mapped\", [1601, 1605, 1610]], [[64962, 64962], \"mapped\", [1576, 1581, 1610]], [[64963, 64963], \"mapped\", [1603, 1605, 1605]], [[64964, 64964], \"mapped\", [1593, 1580, 1605]], [[64965, 64965], \"mapped\", [1589, 1605, 1605]], [[64966, 64966], \"mapped\", [1587, 1582, 1610]], [[64967, 64967], \"mapped\", [1606, 1580, 1610]], [[64968, 64975], \"disallowed\"], [[64976, 65007], \"disallowed\"], [[65008, 65008], \"mapped\", [1589, 1604, 1746]], [[65009, 65009], \"mapped\", [1602, 1604, 1746]], [[65010, 65010], \"mapped\", [1575, 1604, 1604, 1607]], [[65011, 65011], \"mapped\", [1575, 1603, 1576, 1585]], [[65012, 65012], \"mapped\", [1605, 1581, 1605, 1583]], [[65013, 65013], \"mapped\", [1589, 1604, 1593, 1605]], [[65014, 65014], \"mapped\", [1585, 1587, 1608, 1604]], [[65015, 65015], \"mapped\", [1593, 1604, 1610, 1607]], [[65016, 65016], \"mapped\", [1608, 1587, 1604, 1605]], [[65017, 65017], \"mapped\", [1589, 1604, 1609]], [[65018, 65018], \"disallowed_STD3_mapped\", [1589, 1604, 1609, 32, 1575, 1604, 1604, 1607, 32, 1593, 1604, 1610, 1607, 32, 1608, 1587, 1604, 1605]], [[65019, 65019], \"disallowed_STD3_mapped\", [1580, 1604, 32, 1580, 1604, 1575, 1604, 1607]], [[65020, 65020], \"mapped\", [1585, 1740, 1575, 1604]], [[65021, 65021], \"valid\", [], \"NV8\"], [[65022, 65023], \"disallowed\"], [[65024, 65039], \"ignored\"], [[65040, 65040], \"disallowed_STD3_mapped\", [44]], [[65041, 65041], \"mapped\", [12289]], [[65042, 65042], \"disallowed\"], [[65043, 65043], \"disallowed_STD3_mapped\", [58]], [[65044, 65044], \"disallowed_STD3_mapped\", [59]], [[65045, 65045], \"disallowed_STD3_mapped\", [33]], [[65046, 65046], \"disallowed_STD3_mapped\", [63]], [[65047, 65047], \"mapped\", [12310]], [[65048, 65048], \"mapped\", [12311]], [[65049, 65049], \"disallowed\"], [[65050, 65055], \"disallowed\"], [[65056, 65059], \"valid\"], [[65060, 65062], \"valid\"], [[65063, 65069], \"valid\"], [[65070, 65071], \"valid\"], [[65072, 65072], \"disallowed\"], [[65073, 65073], \"mapped\", [8212]], [[65074, 65074], \"mapped\", [8211]], [[65075, 65076], \"disallowed_STD3_mapped\", [95]], [[65077, 65077], \"disallowed_STD3_mapped\", [40]], [[65078, 65078], \"disallowed_STD3_mapped\", [41]], [[65079, 65079], \"disallowed_STD3_mapped\", [123]], [[65080, 65080], \"disallowed_STD3_mapped\", [125]], [[65081, 65081], \"mapped\", [12308]], [[65082, 65082], \"mapped\", [12309]], [[65083, 65083], \"mapped\", [12304]], [[65084, 65084], \"mapped\", [12305]], [[65085, 65085], \"mapped\", [12298]], [[65086, 65086], \"mapped\", [12299]], [[65087, 65087], \"mapped\", [12296]], [[65088, 65088], \"mapped\", [12297]], [[65089, 65089], \"mapped\", [12300]], [[65090, 65090], \"mapped\", [12301]], [[65091, 65091], \"mapped\", [12302]], [[65092, 65092], \"mapped\", [12303]], [[65093, 65094], \"valid\", [], \"NV8\"], [[65095, 65095], \"disallowed_STD3_mapped\", [91]], [[65096, 65096], \"disallowed_STD3_mapped\", [93]], [[65097, 65100], \"disallowed_STD3_mapped\", [32, 773]], [[65101, 65103], \"disallowed_STD3_mapped\", [95]], [[65104, 65104], \"disallowed_STD3_mapped\", [44]], [[65105, 65105], \"mapped\", [12289]], [[65106, 65106], \"disallowed\"], [[65107, 65107], \"disallowed\"], [[65108, 65108], \"disallowed_STD3_mapped\", [59]], [[65109, 65109], \"disallowed_STD3_mapped\", [58]], [[65110, 65110], \"disallowed_STD3_mapped\", [63]], [[65111, 65111], \"disallowed_STD3_mapped\", [33]], [[65112, 65112], \"mapped\", [8212]], [[65113, 65113], \"disallowed_STD3_mapped\", [40]], [[65114, 65114], \"disallowed_STD3_mapped\", [41]], [[65115, 65115], \"disallowed_STD3_mapped\", [123]], [[65116, 65116], \"disallowed_STD3_mapped\", [125]], [[65117, 65117], \"mapped\", [12308]], [[65118, 65118], \"mapped\", [12309]], [[65119, 65119], \"disallowed_STD3_mapped\", [35]], [[65120, 65120], \"disallowed_STD3_mapped\", [38]], [[65121, 65121], \"disallowed_STD3_mapped\", [42]], [[65122, 65122], \"disallowed_STD3_mapped\", [43]], [[65123, 65123], \"mapped\", [45]], [[65124, 65124], \"disallowed_STD3_mapped\", [60]], [[65125, 65125], \"disallowed_STD3_mapped\", [62]], [[65126, 65126], \"disallowed_STD3_mapped\", [61]], [[65127, 65127], \"disallowed\"], [[65128, 65128], \"disallowed_STD3_mapped\", [92]], [[65129, 65129], \"disallowed_STD3_mapped\", [36]], [[65130, 65130], \"disallowed_STD3_mapped\", [37]], [[65131, 65131], \"disallowed_STD3_mapped\", [64]], [[65132, 65135], \"disallowed\"], [[65136, 65136], \"disallowed_STD3_mapped\", [32, 1611]], [[65137, 65137], \"mapped\", [1600, 1611]], [[65138, 65138], \"disallowed_STD3_mapped\", [32, 1612]], [[65139, 65139], \"valid\"], [[65140, 65140], \"disallowed_STD3_mapped\", [32, 1613]], [[65141, 65141], \"disallowed\"], [[65142, 65142], \"disallowed_STD3_mapped\", [32, 1614]], [[65143, 65143], \"mapped\", [1600, 1614]], [[65144, 65144], \"disallowed_STD3_mapped\", [32, 1615]], [[65145, 65145], \"mapped\", [1600, 1615]], [[65146, 65146], \"disallowed_STD3_mapped\", [32, 1616]], [[65147, 65147], \"mapped\", [1600, 1616]], [[65148, 65148], \"disallowed_STD3_mapped\", [32, 1617]], [[65149, 65149], \"mapped\", [1600, 1617]], [[65150, 65150], \"disallowed_STD3_mapped\", [32, 1618]], [[65151, 65151], \"mapped\", [1600, 1618]], [[65152, 65152], \"mapped\", [1569]], [[65153, 65154], \"mapped\", [1570]], [[65155, 65156], \"mapped\", [1571]], [[65157, 65158], \"mapped\", [1572]], [[65159, 65160], \"mapped\", [1573]], [[65161, 65164], \"mapped\", [1574]], [[65165, 65166], \"mapped\", [1575]], [[65167, 65170], \"mapped\", [1576]], [[65171, 65172], \"mapped\", [1577]], [[65173, 65176], \"mapped\", [1578]], [[65177, 65180], \"mapped\", [1579]], [[65181, 65184], \"mapped\", [1580]], [[65185, 65188], \"mapped\", [1581]], [[65189, 65192], \"mapped\", [1582]], [[65193, 65194], \"mapped\", [1583]], [[65195, 65196], \"mapped\", [1584]], [[65197, 65198], \"mapped\", [1585]], [[65199, 65200], \"mapped\", [1586]], [[65201, 65204], \"mapped\", [1587]], [[65205, 65208], \"mapped\", [1588]], [[65209, 65212], \"mapped\", [1589]], [[65213, 65216], \"mapped\", [1590]], [[65217, 65220], \"mapped\", [1591]], [[65221, 65224], \"mapped\", [1592]], [[65225, 65228], \"mapped\", [1593]], [[65229, 65232], \"mapped\", [1594]], [[65233, 65236], \"mapped\", [1601]], [[65237, 65240], \"mapped\", [1602]], [[65241, 65244], \"mapped\", [1603]], [[65245, 65248], \"mapped\", [1604]], [[65249, 65252], \"mapped\", [1605]], [[65253, 65256], \"mapped\", [1606]], [[65257, 65260], \"mapped\", [1607]], [[65261, 65262], \"mapped\", [1608]], [[65263, 65264], \"mapped\", [1609]], [[65265, 65268], \"mapped\", [1610]], [[65269, 65270], \"mapped\", [1604, 1570]], [[65271, 65272], \"mapped\", [1604, 1571]], [[65273, 65274], \"mapped\", [1604, 1573]], [[65275, 65276], \"mapped\", [1604, 1575]], [[65277, 65278], \"disallowed\"], [[65279, 65279], \"ignored\"], [[65280, 65280], \"disallowed\"], [[65281, 65281], \"disallowed_STD3_mapped\", [33]], [[65282, 65282], \"disallowed_STD3_mapped\", [34]], [[65283, 65283], \"disallowed_STD3_mapped\", [35]], [[65284, 65284], \"disallowed_STD3_mapped\", [36]], [[65285, 65285], \"disallowed_STD3_mapped\", [37]], [[65286, 65286], \"disallowed_STD3_mapped\", [38]], [[65287, 65287], \"disallowed_STD3_mapped\", [39]], [[65288, 65288], \"disallowed_STD3_mapped\", [40]], [[65289, 65289], \"disallowed_STD3_mapped\", [41]], [[65290, 65290], \"disallowed_STD3_mapped\", [42]], [[65291, 65291], \"disallowed_STD3_mapped\", [43]], [[65292, 65292], \"disallowed_STD3_mapped\", [44]], [[65293, 65293], \"mapped\", [45]], [[65294, 65294], \"mapped\", [46]], [[65295, 65295], \"disallowed_STD3_mapped\", [47]], [[65296, 65296], \"mapped\", [48]], [[65297, 65297], \"mapped\", [49]], [[65298, 65298], \"mapped\", [50]], [[65299, 65299], \"mapped\", [51]], [[65300, 65300], \"mapped\", [52]], [[65301, 65301], \"mapped\", [53]], [[65302, 65302], \"mapped\", [54]], [[65303, 65303], \"mapped\", [55]], [[65304, 65304], \"mapped\", [56]], [[65305, 65305], \"mapped\", [57]], [[65306, 65306], \"disallowed_STD3_mapped\", [58]], [[65307, 65307], \"disallowed_STD3_mapped\", [59]], [[65308, 65308], \"disallowed_STD3_mapped\", [60]], [[65309, 65309], \"disallowed_STD3_mapped\", [61]], [[65310, 65310], \"disallowed_STD3_mapped\", [62]], [[65311, 65311], \"disallowed_STD3_mapped\", [63]], [[65312, 65312], \"disallowed_STD3_mapped\", [64]], [[65313, 65313], \"mapped\", [97]], [[65314, 65314], \"mapped\", [98]], [[65315, 65315], \"mapped\", [99]], [[65316, 65316], \"mapped\", [100]], [[65317, 65317], \"mapped\", [101]], [[65318, 65318], \"mapped\", [102]], [[65319, 65319], \"mapped\", [103]], [[65320, 65320], \"mapped\", [104]], [[65321, 65321], \"mapped\", [105]], [[65322, 65322], \"mapped\", [106]], [[65323, 65323], \"mapped\", [107]], [[65324, 65324], \"mapped\", [108]], [[65325, 65325], \"mapped\", [109]], [[65326, 65326], \"mapped\", [110]], [[65327, 65327], \"mapped\", [111]], [[65328, 65328], \"mapped\", [112]], [[65329, 65329], \"mapped\", [113]], [[65330, 65330], \"mapped\", [114]], [[65331, 65331], \"mapped\", [115]], [[65332, 65332], \"mapped\", [116]], [[65333, 65333], \"mapped\", [117]], [[65334, 65334], \"mapped\", [118]], [[65335, 65335], \"mapped\", [119]], [[65336, 65336], \"mapped\", [120]], [[65337, 65337], \"mapped\", [121]], [[65338, 65338], \"mapped\", [122]], [[65339, 65339], \"disallowed_STD3_mapped\", [91]], [[65340, 65340], \"disallowed_STD3_mapped\", [92]], [[65341, 65341], \"disallowed_STD3_mapped\", [93]], [[65342, 65342], \"disallowed_STD3_mapped\", [94]], [[65343, 65343], \"disallowed_STD3_mapped\", [95]], [[65344, 65344], \"disallowed_STD3_mapped\", [96]], [[65345, 65345], \"mapped\", [97]], [[65346, 65346], \"mapped\", [98]], [[65347, 65347], \"mapped\", [99]], [[65348, 65348], \"mapped\", [100]], [[65349, 65349], \"mapped\", [101]], [[65350, 65350], \"mapped\", [102]], [[65351, 65351], \"mapped\", [103]], [[65352, 65352], \"mapped\", [104]], [[65353, 65353], \"mapped\", [105]], [[65354, 65354], \"mapped\", [106]], [[65355, 65355], \"mapped\", [107]], [[65356, 65356], \"mapped\", [108]], [[65357, 65357], \"mapped\", [109]], [[65358, 65358], \"mapped\", [110]], [[65359, 65359], \"mapped\", [111]], [[65360, 65360], \"mapped\", [112]], [[65361, 65361], \"mapped\", [113]], [[65362, 65362], \"mapped\", [114]], [[65363, 65363], \"mapped\", [115]], [[65364, 65364], \"mapped\", [116]], [[65365, 65365], \"mapped\", [117]], [[65366, 65366], \"mapped\", [118]], [[65367, 65367], \"mapped\", [119]], [[65368, 65368], \"mapped\", [120]], [[65369, 65369], \"mapped\", [121]], [[65370, 65370], \"mapped\", [122]], [[65371, 65371], \"disallowed_STD3_mapped\", [123]], [[65372, 65372], \"disallowed_STD3_mapped\", [124]], [[65373, 65373], \"disallowed_STD3_mapped\", [125]], [[65374, 65374], \"disallowed_STD3_mapped\", [126]], [[65375, 65375], \"mapped\", [10629]], [[65376, 65376], \"mapped\", [10630]], [[65377, 65377], \"mapped\", [46]], [[65378, 65378], \"mapped\", [12300]], [[65379, 65379], \"mapped\", [12301]], [[65380, 65380], \"mapped\", [12289]], [[65381, 65381], \"mapped\", [12539]], [[65382, 65382], \"mapped\", [12530]], [[65383, 65383], \"mapped\", [12449]], [[65384, 65384], \"mapped\", [12451]], [[65385, 65385], \"mapped\", [12453]], [[65386, 65386], \"mapped\", [12455]], [[65387, 65387], \"mapped\", [12457]], [[65388, 65388], \"mapped\", [12515]], [[65389, 65389], \"mapped\", [12517]], [[65390, 65390], \"mapped\", [12519]], [[65391, 65391], \"mapped\", [12483]], [[65392, 65392], \"mapped\", [12540]], [[65393, 65393], \"mapped\", [12450]], [[65394, 65394], \"mapped\", [12452]], [[65395, 65395], \"mapped\", [12454]], [[65396, 65396], \"mapped\", [12456]], [[65397, 65397], \"mapped\", [12458]], [[65398, 65398], \"mapped\", [12459]], [[65399, 65399], \"mapped\", [12461]], [[65400, 65400], \"mapped\", [12463]], [[65401, 65401], \"mapped\", [12465]], [[65402, 65402], \"mapped\", [12467]], [[65403, 65403], \"mapped\", [12469]], [[65404, 65404], \"mapped\", [12471]], [[65405, 65405], \"mapped\", [12473]], [[65406, 65406], \"mapped\", [12475]], [[65407, 65407], \"mapped\", [12477]], [[65408, 65408], \"mapped\", [12479]], [[65409, 65409], \"mapped\", [12481]], [[65410, 65410], \"mapped\", [12484]], [[65411, 65411], \"mapped\", [12486]], [[65412, 65412], \"mapped\", [12488]], [[65413, 65413], \"mapped\", [12490]], [[65414, 65414], \"mapped\", [12491]], [[65415, 65415], \"mapped\", [12492]], [[65416, 65416], \"mapped\", [12493]], [[65417, 65417], \"mapped\", [12494]], [[65418, 65418], \"mapped\", [12495]], [[65419, 65419], \"mapped\", [12498]], [[65420, 65420], \"mapped\", [12501]], [[65421, 65421], \"mapped\", [12504]], [[65422, 65422], \"mapped\", [12507]], [[65423, 65423], \"mapped\", [12510]], [[65424, 65424], \"mapped\", [12511]], [[65425, 65425], \"mapped\", [12512]], [[65426, 65426], \"mapped\", [12513]], [[65427, 65427], \"mapped\", [12514]], [[65428, 65428], \"mapped\", [12516]], [[65429, 65429], \"mapped\", [12518]], [[65430, 65430], \"mapped\", [12520]], [[65431, 65431], \"mapped\", [12521]], [[65432, 65432], \"mapped\", [12522]], [[65433, 65433], \"mapped\", [12523]], [[65434, 65434], \"mapped\", [12524]], [[65435, 65435], \"mapped\", [12525]], [[65436, 65436], \"mapped\", [12527]], [[65437, 65437], \"mapped\", [12531]], [[65438, 65438], \"mapped\", [12441]], [[65439, 65439], \"mapped\", [12442]], [[65440, 65440], \"disallowed\"], [[65441, 65441], \"mapped\", [4352]], [[65442, 65442], \"mapped\", [4353]], [[65443, 65443], \"mapped\", [4522]], [[65444, 65444], \"mapped\", [4354]], [[65445, 65445], \"mapped\", [4524]], [[65446, 65446], \"mapped\", [4525]], [[65447, 65447], \"mapped\", [4355]], [[65448, 65448], \"mapped\", [4356]], [[65449, 65449], \"mapped\", [4357]], [[65450, 65450], \"mapped\", [4528]], [[65451, 65451], \"mapped\", [4529]], [[65452, 65452], \"mapped\", [4530]], [[65453, 65453], \"mapped\", [4531]], [[65454, 65454], \"mapped\", [4532]], [[65455, 65455], \"mapped\", [4533]], [[65456, 65456], \"mapped\", [4378]], [[65457, 65457], \"mapped\", [4358]], [[65458, 65458], \"mapped\", [4359]], [[65459, 65459], \"mapped\", [4360]], [[65460, 65460], \"mapped\", [4385]], [[65461, 65461], \"mapped\", [4361]], [[65462, 65462], \"mapped\", [4362]], [[65463, 65463], \"mapped\", [4363]], [[65464, 65464], \"mapped\", [4364]], [[65465, 65465], \"mapped\", [4365]], [[65466, 65466], \"mapped\", [4366]], [[65467, 65467], \"mapped\", [4367]], [[65468, 65468], \"mapped\", [4368]], [[65469, 65469], \"mapped\", [4369]], [[65470, 65470], \"mapped\", [4370]], [[65471, 65473], \"disallowed\"], [[65474, 65474], \"mapped\", [4449]], [[65475, 65475], \"mapped\", [4450]], [[65476, 65476], \"mapped\", [4451]], [[65477, 65477], \"mapped\", [4452]], [[65478, 65478], \"mapped\", [4453]], [[65479, 65479], \"mapped\", [4454]], [[65480, 65481], \"disallowed\"], [[65482, 65482], \"mapped\", [4455]], [[65483, 65483], \"mapped\", [4456]], [[65484, 65484], \"mapped\", [4457]], [[65485, 65485], \"mapped\", [4458]], [[65486, 65486], \"mapped\", [4459]], [[65487, 65487], \"mapped\", [4460]], [[65488, 65489], \"disallowed\"], [[65490, 65490], \"mapped\", [4461]], [[65491, 65491], \"mapped\", [4462]], [[65492, 65492], \"mapped\", [4463]], [[65493, 65493], \"mapped\", [4464]], [[65494, 65494], \"mapped\", [4465]], [[65495, 65495], \"mapped\", [4466]], [[65496, 65497], \"disallowed\"], [[65498, 65498], \"mapped\", [4467]], [[65499, 65499], \"mapped\", [4468]], [[65500, 65500], \"mapped\", [4469]], [[65501, 65503], \"disallowed\"], [[65504, 65504], \"mapped\", [162]], [[65505, 65505], \"mapped\", [163]], [[65506, 65506], \"mapped\", [172]], [[65507, 65507], \"disallowed_STD3_mapped\", [32, 772]], [[65508, 65508], \"mapped\", [166]], [[65509, 65509], \"mapped\", [165]], [[65510, 65510], \"mapped\", [8361]], [[65511, 65511], \"disallowed\"], [[65512, 65512], \"mapped\", [9474]], [[65513, 65513], \"mapped\", [8592]], [[65514, 65514], \"mapped\", [8593]], [[65515, 65515], \"mapped\", [8594]], [[65516, 65516], \"mapped\", [8595]], [[65517, 65517], \"mapped\", [9632]], [[65518, 65518], \"mapped\", [9675]], [[65519, 65528], \"disallowed\"], [[65529, 65531], \"disallowed\"], [[65532, 65532], \"disallowed\"], [[65533, 65533], \"disallowed\"], [[65534, 65535], \"disallowed\"], [[65536, 65547], \"valid\"], [[65548, 65548], \"disallowed\"], [[65549, 65574], \"valid\"], [[65575, 65575], \"disallowed\"], [[65576, 65594], \"valid\"], [[65595, 65595], \"disallowed\"], [[65596, 65597], \"valid\"], [[65598, 65598], \"disallowed\"], [[65599, 65613], \"valid\"], [[65614, 65615], \"disallowed\"], [[65616, 65629], \"valid\"], [[65630, 65663], \"disallowed\"], [[65664, 65786], \"valid\"], [[65787, 65791], \"disallowed\"], [[65792, 65794], \"valid\", [], \"NV8\"], [[65795, 65798], \"disallowed\"], [[65799, 65843], \"valid\", [], \"NV8\"], [[65844, 65846], \"disallowed\"], [[65847, 65855], \"valid\", [], \"NV8\"], [[65856, 65930], \"valid\", [], \"NV8\"], [[65931, 65932], \"valid\", [], \"NV8\"], [[65933, 65935], \"disallowed\"], [[65936, 65947], \"valid\", [], \"NV8\"], [[65948, 65951], \"disallowed\"], [[65952, 65952], \"valid\", [], \"NV8\"], [[65953, 65999], \"disallowed\"], [[66000, 66044], \"valid\", [], \"NV8\"], [[66045, 66045], \"valid\"], [[66046, 66175], \"disallowed\"], [[66176, 66204], \"valid\"], [[66205, 66207], \"disallowed\"], [[66208, 66256], \"valid\"], [[66257, 66271], \"disallowed\"], [[66272, 66272], \"valid\"], [[66273, 66299], \"valid\", [], \"NV8\"], [[66300, 66303], \"disallowed\"], [[66304, 66334], \"valid\"], [[66335, 66335], \"valid\"], [[66336, 66339], \"valid\", [], \"NV8\"], [[66340, 66351], \"disallowed\"], [[66352, 66368], \"valid\"], [[66369, 66369], \"valid\", [], \"NV8\"], [[66370, 66377], \"valid\"], [[66378, 66378], \"valid\", [], \"NV8\"], [[66379, 66383], \"disallowed\"], [[66384, 66426], \"valid\"], [[66427, 66431], \"disallowed\"], [[66432, 66461], \"valid\"], [[66462, 66462], \"disallowed\"], [[66463, 66463], \"valid\", [], \"NV8\"], [[66464, 66499], \"valid\"], [[66500, 66503], \"disallowed\"], [[66504, 66511], \"valid\"], [[66512, 66517], \"valid\", [], \"NV8\"], [[66518, 66559], \"disallowed\"], [[66560, 66560], \"mapped\", [66600]], [[66561, 66561], \"mapped\", [66601]], [[66562, 66562], \"mapped\", [66602]], [[66563, 66563], \"mapped\", [66603]], [[66564, 66564], \"mapped\", [66604]], [[66565, 66565], \"mapped\", [66605]], [[66566, 66566], \"mapped\", [66606]], [[66567, 66567], \"mapped\", [66607]], [[66568, 66568], \"mapped\", [66608]], [[66569, 66569], \"mapped\", [66609]], [[66570, 66570], \"mapped\", [66610]], [[66571, 66571], \"mapped\", [66611]], [[66572, 66572], \"mapped\", [66612]], [[66573, 66573], \"mapped\", [66613]], [[66574, 66574], \"mapped\", [66614]], [[66575, 66575], \"mapped\", [66615]], [[66576, 66576], \"mapped\", [66616]], [[66577, 66577], \"mapped\", [66617]], [[66578, 66578], \"mapped\", [66618]], [[66579, 66579], \"mapped\", [66619]], [[66580, 66580], \"mapped\", [66620]], [[66581, 66581], \"mapped\", [66621]], [[66582, 66582], \"mapped\", [66622]], [[66583, 66583], \"mapped\", [66623]], [[66584, 66584], \"mapped\", [66624]], [[66585, 66585], \"mapped\", [66625]], [[66586, 66586], \"mapped\", [66626]], [[66587, 66587], \"mapped\", [66627]], [[66588, 66588], \"mapped\", [66628]], [[66589, 66589], \"mapped\", [66629]], [[66590, 66590], \"mapped\", [66630]], [[66591, 66591], \"mapped\", [66631]], [[66592, 66592], \"mapped\", [66632]], [[66593, 66593], \"mapped\", [66633]], [[66594, 66594], \"mapped\", [66634]], [[66595, 66595], \"mapped\", [66635]], [[66596, 66596], \"mapped\", [66636]], [[66597, 66597], \"mapped\", [66637]], [[66598, 66598], \"mapped\", [66638]], [[66599, 66599], \"mapped\", [66639]], [[66600, 66637], \"valid\"], [[66638, 66717], \"valid\"], [[66718, 66719], \"disallowed\"], [[66720, 66729], \"valid\"], [[66730, 66815], \"disallowed\"], [[66816, 66855], \"valid\"], [[66856, 66863], \"disallowed\"], [[66864, 66915], \"valid\"], [[66916, 66926], \"disallowed\"], [[66927, 66927], \"valid\", [], \"NV8\"], [[66928, 67071], \"disallowed\"], [[67072, 67382], \"valid\"], [[67383, 67391], \"disallowed\"], [[67392, 67413], \"valid\"], [[67414, 67423], \"disallowed\"], [[67424, 67431], \"valid\"], [[67432, 67583], \"disallowed\"], [[67584, 67589], \"valid\"], [[67590, 67591], \"disallowed\"], [[67592, 67592], \"valid\"], [[67593, 67593], \"disallowed\"], [[67594, 67637], \"valid\"], [[67638, 67638], \"disallowed\"], [[67639, 67640], \"valid\"], [[67641, 67643], \"disallowed\"], [[67644, 67644], \"valid\"], [[67645, 67646], \"disallowed\"], [[67647, 67647], \"valid\"], [[67648, 67669], \"valid\"], [[67670, 67670], \"disallowed\"], [[67671, 67679], \"valid\", [], \"NV8\"], [[67680, 67702], \"valid\"], [[67703, 67711], \"valid\", [], \"NV8\"], [[67712, 67742], \"valid\"], [[67743, 67750], \"disallowed\"], [[67751, 67759], \"valid\", [], \"NV8\"], [[67760, 67807], \"disallowed\"], [[67808, 67826], \"valid\"], [[67827, 67827], \"disallowed\"], [[67828, 67829], \"valid\"], [[67830, 67834], \"disallowed\"], [[67835, 67839], \"valid\", [], \"NV8\"], [[67840, 67861], \"valid\"], [[67862, 67865], \"valid\", [], \"NV8\"], [[67866, 67867], \"valid\", [], \"NV8\"], [[67868, 67870], \"disallowed\"], [[67871, 67871], \"valid\", [], \"NV8\"], [[67872, 67897], \"valid\"], [[67898, 67902], \"disallowed\"], [[67903, 67903], \"valid\", [], \"NV8\"], [[67904, 67967], \"disallowed\"], [[67968, 68023], \"valid\"], [[68024, 68027], \"disallowed\"], [[68028, 68029], \"valid\", [], \"NV8\"], [[68030, 68031], \"valid\"], [[68032, 68047], \"valid\", [], \"NV8\"], [[68048, 68049], \"disallowed\"], [[68050, 68095], \"valid\", [], \"NV8\"], [[68096, 68099], \"valid\"], [[68100, 68100], \"disallowed\"], [[68101, 68102], \"valid\"], [[68103, 68107], \"disallowed\"], [[68108, 68115], \"valid\"], [[68116, 68116], \"disallowed\"], [[68117, 68119], \"valid\"], [[68120, 68120], \"disallowed\"], [[68121, 68147], \"valid\"], [[68148, 68151], \"disallowed\"], [[68152, 68154], \"valid\"], [[68155, 68158], \"disallowed\"], [[68159, 68159], \"valid\"], [[68160, 68167], \"valid\", [], \"NV8\"], [[68168, 68175], \"disallowed\"], [[68176, 68184], \"valid\", [], \"NV8\"], [[68185, 68191], \"disallowed\"], [[68192, 68220], \"valid\"], [[68221, 68223], \"valid\", [], \"NV8\"], [[68224, 68252], \"valid\"], [[68253, 68255], \"valid\", [], \"NV8\"], [[68256, 68287], \"disallowed\"], [[68288, 68295], \"valid\"], [[68296, 68296], \"valid\", [], \"NV8\"], [[68297, 68326], \"valid\"], [[68327, 68330], \"disallowed\"], [[68331, 68342], \"valid\", [], \"NV8\"], [[68343, 68351], \"disallowed\"], [[68352, 68405], \"valid\"], [[68406, 68408], \"disallowed\"], [[68409, 68415], \"valid\", [], \"NV8\"], [[68416, 68437], \"valid\"], [[68438, 68439], \"disallowed\"], [[68440, 68447], \"valid\", [], \"NV8\"], [[68448, 68466], \"valid\"], [[68467, 68471], \"disallowed\"], [[68472, 68479], \"valid\", [], \"NV8\"], [[68480, 68497], \"valid\"], [[68498, 68504], \"disallowed\"], [[68505, 68508], \"valid\", [], \"NV8\"], [[68509, 68520], \"disallowed\"], [[68521, 68527], \"valid\", [], \"NV8\"], [[68528, 68607], \"disallowed\"], [[68608, 68680], \"valid\"], [[68681, 68735], \"disallowed\"], [[68736, 68736], \"mapped\", [68800]], [[68737, 68737], \"mapped\", [68801]], [[68738, 68738], \"mapped\", [68802]], [[68739, 68739], \"mapped\", [68803]], [[68740, 68740], \"mapped\", [68804]], [[68741, 68741], \"mapped\", [68805]], [[68742, 68742], \"mapped\", [68806]], [[68743, 68743], \"mapped\", [68807]], [[68744, 68744], \"mapped\", [68808]], [[68745, 68745], \"mapped\", [68809]], [[68746, 68746], \"mapped\", [68810]], [[68747, 68747], \"mapped\", [68811]], [[68748, 68748], \"mapped\", [68812]], [[68749, 68749], \"mapped\", [68813]], [[68750, 68750], \"mapped\", [68814]], [[68751, 68751], \"mapped\", [68815]], [[68752, 68752], \"mapped\", [68816]], [[68753, 68753], \"mapped\", [68817]], [[68754, 68754], \"mapped\", [68818]], [[68755, 68755], \"mapped\", [68819]], [[68756, 68756], \"mapped\", [68820]], [[68757, 68757], \"mapped\", [68821]], [[68758, 68758], \"mapped\", [68822]], [[68759, 68759], \"mapped\", [68823]], [[68760, 68760], \"mapped\", [68824]], [[68761, 68761], \"mapped\", [68825]], [[68762, 68762], \"mapped\", [68826]], [[68763, 68763], \"mapped\", [68827]], [[68764, 68764], \"mapped\", [68828]], [[68765, 68765], \"mapped\", [68829]], [[68766, 68766], \"mapped\", [68830]], [[68767, 68767], \"mapped\", [68831]], [[68768, 68768], \"mapped\", [68832]], [[68769, 68769], \"mapped\", [68833]], [[68770, 68770], \"mapped\", [68834]], [[68771, 68771], \"mapped\", [68835]], [[68772, 68772], \"mapped\", [68836]], [[68773, 68773], \"mapped\", [68837]], [[68774, 68774], \"mapped\", [68838]], [[68775, 68775], \"mapped\", [68839]], [[68776, 68776], \"mapped\", [68840]], [[68777, 68777], \"mapped\", [68841]], [[68778, 68778], \"mapped\", [68842]], [[68779, 68779], \"mapped\", [68843]], [[68780, 68780], \"mapped\", [68844]], [[68781, 68781], \"mapped\", [68845]], [[68782, 68782], \"mapped\", [68846]], [[68783, 68783], \"mapped\", [68847]], [[68784, 68784], \"mapped\", [68848]], [[68785, 68785], \"mapped\", [68849]], [[68786, 68786], \"mapped\", [68850]], [[68787, 68799], \"disallowed\"], [[68800, 68850], \"valid\"], [[68851, 68857], \"disallowed\"], [[68858, 68863], \"valid\", [], \"NV8\"], [[68864, 69215], \"disallowed\"], [[69216, 69246], \"valid\", [], \"NV8\"], [[69247, 69631], \"disallowed\"], [[69632, 69702], \"valid\"], [[69703, 69709], \"valid\", [], \"NV8\"], [[69710, 69713], \"disallowed\"], [[69714, 69733], \"valid\", [], \"NV8\"], [[69734, 69743], \"valid\"], [[69744, 69758], \"disallowed\"], [[69759, 69759], \"valid\"], [[69760, 69818], \"valid\"], [[69819, 69820], \"valid\", [], \"NV8\"], [[69821, 69821], \"disallowed\"], [[69822, 69825], \"valid\", [], \"NV8\"], [[69826, 69839], \"disallowed\"], [[69840, 69864], \"valid\"], [[69865, 69871], \"disallowed\"], [[69872, 69881], \"valid\"], [[69882, 69887], \"disallowed\"], [[69888, 69940], \"valid\"], [[69941, 69941], \"disallowed\"], [[69942, 69951], \"valid\"], [[69952, 69955], \"valid\", [], \"NV8\"], [[69956, 69967], \"disallowed\"], [[69968, 70003], \"valid\"], [[70004, 70005], \"valid\", [], \"NV8\"], [[70006, 70006], \"valid\"], [[70007, 70015], \"disallowed\"], [[70016, 70084], \"valid\"], [[70085, 70088], \"valid\", [], \"NV8\"], [[70089, 70089], \"valid\", [], \"NV8\"], [[70090, 70092], \"valid\"], [[70093, 70093], \"valid\", [], \"NV8\"], [[70094, 70095], \"disallowed\"], [[70096, 70105], \"valid\"], [[70106, 70106], \"valid\"], [[70107, 70107], \"valid\", [], \"NV8\"], [[70108, 70108], \"valid\"], [[70109, 70111], \"valid\", [], \"NV8\"], [[70112, 70112], \"disallowed\"], [[70113, 70132], \"valid\", [], \"NV8\"], [[70133, 70143], \"disallowed\"], [[70144, 70161], \"valid\"], [[70162, 70162], \"disallowed\"], [[70163, 70199], \"valid\"], [[70200, 70205], \"valid\", [], \"NV8\"], [[70206, 70271], \"disallowed\"], [[70272, 70278], \"valid\"], [[70279, 70279], \"disallowed\"], [[70280, 70280], \"valid\"], [[70281, 70281], \"disallowed\"], [[70282, 70285], \"valid\"], [[70286, 70286], \"disallowed\"], [[70287, 70301], \"valid\"], [[70302, 70302], \"disallowed\"], [[70303, 70312], \"valid\"], [[70313, 70313], \"valid\", [], \"NV8\"], [[70314, 70319], \"disallowed\"], [[70320, 70378], \"valid\"], [[70379, 70383], \"disallowed\"], [[70384, 70393], \"valid\"], [[70394, 70399], \"disallowed\"], [[70400, 70400], \"valid\"], [[70401, 70403], \"valid\"], [[70404, 70404], \"disallowed\"], [[70405, 70412], \"valid\"], [[70413, 70414], \"disallowed\"], [[70415, 70416], \"valid\"], [[70417, 70418], \"disallowed\"], [[70419, 70440], \"valid\"], [[70441, 70441], \"disallowed\"], [[70442, 70448], \"valid\"], [[70449, 70449], \"disallowed\"], [[70450, 70451], \"valid\"], [[70452, 70452], \"disallowed\"], [[70453, 70457], \"valid\"], [[70458, 70459], \"disallowed\"], [[70460, 70468], \"valid\"], [[70469, 70470], \"disallowed\"], [[70471, 70472], \"valid\"], [[70473, 70474], \"disallowed\"], [[70475, 70477], \"valid\"], [[70478, 70479], \"disallowed\"], [[70480, 70480], \"valid\"], [[70481, 70486], \"disallowed\"], [[70487, 70487], \"valid\"], [[70488, 70492], \"disallowed\"], [[70493, 70499], \"valid\"], [[70500, 70501], \"disallowed\"], [[70502, 70508], \"valid\"], [[70509, 70511], \"disallowed\"], [[70512, 70516], \"valid\"], [[70517, 70783], \"disallowed\"], [[70784, 70853], \"valid\"], [[70854, 70854], \"valid\", [], \"NV8\"], [[70855, 70855], \"valid\"], [[70856, 70863], \"disallowed\"], [[70864, 70873], \"valid\"], [[70874, 71039], \"disallowed\"], [[71040, 71093], \"valid\"], [[71094, 71095], \"disallowed\"], [[71096, 71104], \"valid\"], [[71105, 71113], \"valid\", [], \"NV8\"], [[71114, 71127], \"valid\", [], \"NV8\"], [[71128, 71133], \"valid\"], [[71134, 71167], \"disallowed\"], [[71168, 71232], \"valid\"], [[71233, 71235], \"valid\", [], \"NV8\"], [[71236, 71236], \"valid\"], [[71237, 71247], \"disallowed\"], [[71248, 71257], \"valid\"], [[71258, 71295], \"disallowed\"], [[71296, 71351], \"valid\"], [[71352, 71359], \"disallowed\"], [[71360, 71369], \"valid\"], [[71370, 71423], \"disallowed\"], [[71424, 71449], \"valid\"], [[71450, 71452], \"disallowed\"], [[71453, 71467], \"valid\"], [[71468, 71471], \"disallowed\"], [[71472, 71481], \"valid\"], [[71482, 71487], \"valid\", [], \"NV8\"], [[71488, 71839], \"disallowed\"], [[71840, 71840], \"mapped\", [71872]], [[71841, 71841], \"mapped\", [71873]], [[71842, 71842], \"mapped\", [71874]], [[71843, 71843], \"mapped\", [71875]], [[71844, 71844], \"mapped\", [71876]], [[71845, 71845], \"mapped\", [71877]], [[71846, 71846], \"mapped\", [71878]], [[71847, 71847], \"mapped\", [71879]], [[71848, 71848], \"mapped\", [71880]], [[71849, 71849], \"mapped\", [71881]], [[71850, 71850], \"mapped\", [71882]], [[71851, 71851], \"mapped\", [71883]], [[71852, 71852], \"mapped\", [71884]], [[71853, 71853], \"mapped\", [71885]], [[71854, 71854], \"mapped\", [71886]], [[71855, 71855], \"mapped\", [71887]], [[71856, 71856], \"mapped\", [71888]], [[71857, 71857], \"mapped\", [71889]], [[71858, 71858], \"mapped\", [71890]], [[71859, 71859], \"mapped\", [71891]], [[71860, 71860], \"mapped\", [71892]], [[71861, 71861], \"mapped\", [71893]], [[71862, 71862], \"mapped\", [71894]], [[71863, 71863], \"mapped\", [71895]], [[71864, 71864], \"mapped\", [71896]], [[71865, 71865], \"mapped\", [71897]], [[71866, 71866], \"mapped\", [71898]], [[71867, 71867], \"mapped\", [71899]], [[71868, 71868], \"mapped\", [71900]], [[71869, 71869], \"mapped\", [71901]], [[71870, 71870], \"mapped\", [71902]], [[71871, 71871], \"mapped\", [71903]], [[71872, 71913], \"valid\"], [[71914, 71922], \"valid\", [], \"NV8\"], [[71923, 71934], \"disallowed\"], [[71935, 71935], \"valid\"], [[71936, 72383], \"disallowed\"], [[72384, 72440], \"valid\"], [[72441, 73727], \"disallowed\"], [[73728, 74606], \"valid\"], [[74607, 74648], \"valid\"], [[74649, 74649], \"valid\"], [[74650, 74751], \"disallowed\"], [[74752, 74850], \"valid\", [], \"NV8\"], [[74851, 74862], \"valid\", [], \"NV8\"], [[74863, 74863], \"disallowed\"], [[74864, 74867], \"valid\", [], \"NV8\"], [[74868, 74868], \"valid\", [], \"NV8\"], [[74869, 74879], \"disallowed\"], [[74880, 75075], \"valid\"], [[75076, 77823], \"disallowed\"], [[77824, 78894], \"valid\"], [[78895, 82943], \"disallowed\"], [[82944, 83526], \"valid\"], [[83527, 92159], \"disallowed\"], [[92160, 92728], \"valid\"], [[92729, 92735], \"disallowed\"], [[92736, 92766], \"valid\"], [[92767, 92767], \"disallowed\"], [[92768, 92777], \"valid\"], [[92778, 92781], \"disallowed\"], [[92782, 92783], \"valid\", [], \"NV8\"], [[92784, 92879], \"disallowed\"], [[92880, 92909], \"valid\"], [[92910, 92911], \"disallowed\"], [[92912, 92916], \"valid\"], [[92917, 92917], \"valid\", [], \"NV8\"], [[92918, 92927], \"disallowed\"], [[92928, 92982], \"valid\"], [[92983, 92991], \"valid\", [], \"NV8\"], [[92992, 92995], \"valid\"], [[92996, 92997], \"valid\", [], \"NV8\"], [[92998, 93007], \"disallowed\"], [[93008, 93017], \"valid\"], [[93018, 93018], \"disallowed\"], [[93019, 93025], \"valid\", [], \"NV8\"], [[93026, 93026], \"disallowed\"], [[93027, 93047], \"valid\"], [[93048, 93052], \"disallowed\"], [[93053, 93071], \"valid\"], [[93072, 93951], \"disallowed\"], [[93952, 94020], \"valid\"], [[94021, 94031], \"disallowed\"], [[94032, 94078], \"valid\"], [[94079, 94094], \"disallowed\"], [[94095, 94111], \"valid\"], [[94112, 110591], \"disallowed\"], [[110592, 110593], \"valid\"], [[110594, 113663], \"disallowed\"], [[113664, 113770], \"valid\"], [[113771, 113775], \"disallowed\"], [[113776, 113788], \"valid\"], [[113789, 113791], \"disallowed\"], [[113792, 113800], \"valid\"], [[113801, 113807], \"disallowed\"], [[113808, 113817], \"valid\"], [[113818, 113819], \"disallowed\"], [[113820, 113820], \"valid\", [], \"NV8\"], [[113821, 113822], \"valid\"], [[113823, 113823], \"valid\", [], \"NV8\"], [[113824, 113827], \"ignored\"], [[113828, 118783], \"disallowed\"], [[118784, 119029], \"valid\", [], \"NV8\"], [[119030, 119039], \"disallowed\"], [[119040, 119078], \"valid\", [], \"NV8\"], [[119079, 119080], \"disallowed\"], [[119081, 119081], \"valid\", [], \"NV8\"], [[119082, 119133], \"valid\", [], \"NV8\"], [[119134, 119134], \"mapped\", [119127, 119141]], [[119135, 119135], \"mapped\", [119128, 119141]], [[119136, 119136], \"mapped\", [119128, 119141, 119150]], [[119137, 119137], \"mapped\", [119128, 119141, 119151]], [[119138, 119138], \"mapped\", [119128, 119141, 119152]], [[119139, 119139], \"mapped\", [119128, 119141, 119153]], [[119140, 119140], \"mapped\", [119128, 119141, 119154]], [[119141, 119154], \"valid\", [], \"NV8\"], [[119155, 119162], \"disallowed\"], [[119163, 119226], \"valid\", [], \"NV8\"], [[119227, 119227], \"mapped\", [119225, 119141]], [[119228, 119228], \"mapped\", [119226, 119141]], [[119229, 119229], \"mapped\", [119225, 119141, 119150]], [[119230, 119230], \"mapped\", [119226, 119141, 119150]], [[119231, 119231], \"mapped\", [119225, 119141, 119151]], [[119232, 119232], \"mapped\", [119226, 119141, 119151]], [[119233, 119261], \"valid\", [], \"NV8\"], [[119262, 119272], \"valid\", [], \"NV8\"], [[119273, 119295], \"disallowed\"], [[119296, 119365], \"valid\", [], \"NV8\"], [[119366, 119551], \"disallowed\"], [[119552, 119638], \"valid\", [], \"NV8\"], [[119639, 119647], \"disallowed\"], [[119648, 119665], \"valid\", [], \"NV8\"], [[119666, 119807], \"disallowed\"], [[119808, 119808], \"mapped\", [97]], [[119809, 119809], \"mapped\", [98]], [[119810, 119810], \"mapped\", [99]], [[119811, 119811], \"mapped\", [100]], [[119812, 119812], \"mapped\", [101]], [[119813, 119813], \"mapped\", [102]], [[119814, 119814], \"mapped\", [103]], [[119815, 119815], \"mapped\", [104]], [[119816, 119816], \"mapped\", [105]], [[119817, 119817], \"mapped\", [106]], [[119818, 119818], \"mapped\", [107]], [[119819, 119819], \"mapped\", [108]], [[119820, 119820], \"mapped\", [109]], [[119821, 119821], \"mapped\", [110]], [[119822, 119822], \"mapped\", [111]], [[119823, 119823], \"mapped\", [112]], [[119824, 119824], \"mapped\", [113]], [[119825, 119825], \"mapped\", [114]], [[119826, 119826], \"mapped\", [115]], [[119827, 119827], \"mapped\", [116]], [[119828, 119828], \"mapped\", [117]], [[119829, 119829], \"mapped\", [118]], [[119830, 119830], \"mapped\", [119]], [[119831, 119831], \"mapped\", [120]], [[119832, 119832], \"mapped\", [121]], [[119833, 119833], \"mapped\", [122]], [[119834, 119834], \"mapped\", [97]], [[119835, 119835], \"mapped\", [98]], [[119836, 119836], \"mapped\", [99]], [[119837, 119837], \"mapped\", [100]], [[119838, 119838], \"mapped\", [101]], [[119839, 119839], \"mapped\", [102]], [[119840, 119840], \"mapped\", [103]], [[119841, 119841], \"mapped\", [104]], [[119842, 119842], \"mapped\", [105]], [[119843, 119843], \"mapped\", [106]], [[119844, 119844], \"mapped\", [107]], [[119845, 119845], \"mapped\", [108]], [[119846, 119846], \"mapped\", [109]], [[119847, 119847], \"mapped\", [110]], [[119848, 119848], \"mapped\", [111]], [[119849, 119849], \"mapped\", [112]], [[119850, 119850], \"mapped\", [113]], [[119851, 119851], \"mapped\", [114]], [[119852, 119852], \"mapped\", [115]], [[119853, 119853], \"mapped\", [116]], [[119854, 119854], \"mapped\", [117]], [[119855, 119855], \"mapped\", [118]], [[119856, 119856], \"mapped\", [119]], [[119857, 119857], \"mapped\", [120]], [[119858, 119858], \"mapped\", [121]], [[119859, 119859], \"mapped\", [122]], [[119860, 119860], \"mapped\", [97]], [[119861, 119861], \"mapped\", [98]], [[119862, 119862], \"mapped\", [99]], [[119863, 119863], \"mapped\", [100]], [[119864, 119864], \"mapped\", [101]], [[119865, 119865], \"mapped\", [102]], [[119866, 119866], \"mapped\", [103]], [[119867, 119867], \"mapped\", [104]], [[119868, 119868], \"mapped\", [105]], [[119869, 119869], \"mapped\", [106]], [[119870, 119870], \"mapped\", [107]], [[119871, 119871], \"mapped\", [108]], [[119872, 119872], \"mapped\", [109]], [[119873, 119873], \"mapped\", [110]], [[119874, 119874], \"mapped\", [111]], [[119875, 119875], \"mapped\", [112]], [[119876, 119876], \"mapped\", [113]], [[119877, 119877], \"mapped\", [114]], [[119878, 119878], \"mapped\", [115]], [[119879, 119879], \"mapped\", [116]], [[119880, 119880], \"mapped\", [117]], [[119881, 119881], \"mapped\", [118]], [[119882, 119882], \"mapped\", [119]], [[119883, 119883], \"mapped\", [120]], [[119884, 119884], \"mapped\", [121]], [[119885, 119885], \"mapped\", [122]], [[119886, 119886], \"mapped\", [97]], [[119887, 119887], \"mapped\", [98]], [[119888, 119888], \"mapped\", [99]], [[119889, 119889], \"mapped\", [100]], [[119890, 119890], \"mapped\", [101]], [[119891, 119891], \"mapped\", [102]], [[119892, 119892], \"mapped\", [103]], [[119893, 119893], \"disallowed\"], [[119894, 119894], \"mapped\", [105]], [[119895, 119895], \"mapped\", [106]], [[119896, 119896], \"mapped\", [107]], [[119897, 119897], \"mapped\", [108]], [[119898, 119898], \"mapped\", [109]], [[119899, 119899], \"mapped\", [110]], [[119900, 119900], \"mapped\", [111]], [[119901, 119901], \"mapped\", [112]], [[119902, 119902], \"mapped\", [113]], [[119903, 119903], \"mapped\", [114]], [[119904, 119904], \"mapped\", [115]], [[119905, 119905], \"mapped\", [116]], [[119906, 119906], \"mapped\", [117]], [[119907, 119907], \"mapped\", [118]], [[119908, 119908], \"mapped\", [119]], [[119909, 119909], \"mapped\", [120]], [[119910, 119910], \"mapped\", [121]], [[119911, 119911], \"mapped\", [122]], [[119912, 119912], \"mapped\", [97]], [[119913, 119913], \"mapped\", [98]], [[119914, 119914], \"mapped\", [99]], [[119915, 119915], \"mapped\", [100]], [[119916, 119916], \"mapped\", [101]], [[119917, 119917], \"mapped\", [102]], [[119918, 119918], \"mapped\", [103]], [[119919, 119919], \"mapped\", [104]], [[119920, 119920], \"mapped\", [105]], [[119921, 119921], \"mapped\", [106]], [[119922, 119922], \"mapped\", [107]], [[119923, 119923], \"mapped\", [108]], [[119924, 119924], \"mapped\", [109]], [[119925, 119925], \"mapped\", [110]], [[119926, 119926], \"mapped\", [111]], [[119927, 119927], \"mapped\", [112]], [[119928, 119928], \"mapped\", [113]], [[119929, 119929], \"mapped\", [114]], [[119930, 119930], \"mapped\", [115]], [[119931, 119931], \"mapped\", [116]], [[119932, 119932], \"mapped\", [117]], [[119933, 119933], \"mapped\", [118]], [[119934, 119934], \"mapped\", [119]], [[119935, 119935], \"mapped\", [120]], [[119936, 119936], \"mapped\", [121]], [[119937, 119937], \"mapped\", [122]], [[119938, 119938], \"mapped\", [97]], [[119939, 119939], \"mapped\", [98]], [[119940, 119940], \"mapped\", [99]], [[119941, 119941], \"mapped\", [100]], [[119942, 119942], \"mapped\", [101]], [[119943, 119943], \"mapped\", [102]], [[119944, 119944], \"mapped\", [103]], [[119945, 119945], \"mapped\", [104]], [[119946, 119946], \"mapped\", [105]], [[119947, 119947], \"mapped\", [106]], [[119948, 119948], \"mapped\", [107]], [[119949, 119949], \"mapped\", [108]], [[119950, 119950], \"mapped\", [109]], [[119951, 119951], \"mapped\", [110]], [[119952, 119952], \"mapped\", [111]], [[119953, 119953], \"mapped\", [112]], [[119954, 119954], \"mapped\", [113]], [[119955, 119955], \"mapped\", [114]], [[119956, 119956], \"mapped\", [115]], [[119957, 119957], \"mapped\", [116]], [[119958, 119958], \"mapped\", [117]], [[119959, 119959], \"mapped\", [118]], [[119960, 119960], \"mapped\", [119]], [[119961, 119961], \"mapped\", [120]], [[119962, 119962], \"mapped\", [121]], [[119963, 119963], \"mapped\", [122]], [[119964, 119964], \"mapped\", [97]], [[119965, 119965], \"disallowed\"], [[119966, 119966], \"mapped\", [99]], [[119967, 119967], \"mapped\", [100]], [[119968, 119969], \"disallowed\"], [[119970, 119970], \"mapped\", [103]], [[119971, 119972], \"disallowed\"], [[119973, 119973], \"mapped\", [106]], [[119974, 119974], \"mapped\", [107]], [[119975, 119976], \"disallowed\"], [[119977, 119977], \"mapped\", [110]], [[119978, 119978], \"mapped\", [111]], [[119979, 119979], \"mapped\", [112]], [[119980, 119980], \"mapped\", [113]], [[119981, 119981], \"disallowed\"], [[119982, 119982], \"mapped\", [115]], [[119983, 119983], \"mapped\", [116]], [[119984, 119984], \"mapped\", [117]], [[119985, 119985], \"mapped\", [118]], [[119986, 119986], \"mapped\", [119]], [[119987, 119987], \"mapped\", [120]], [[119988, 119988], \"mapped\", [121]], [[119989, 119989], \"mapped\", [122]], [[119990, 119990], \"mapped\", [97]], [[119991, 119991], \"mapped\", [98]], [[119992, 119992], \"mapped\", [99]], [[119993, 119993], \"mapped\", [100]], [[119994, 119994], \"disallowed\"], [[119995, 119995], \"mapped\", [102]], [[119996, 119996], \"disallowed\"], [[119997, 119997], \"mapped\", [104]], [[119998, 119998], \"mapped\", [105]], [[119999, 119999], \"mapped\", [106]], [[120000, 120000], \"mapped\", [107]], [[120001, 120001], \"mapped\", [108]], [[120002, 120002], \"mapped\", [109]], [[120003, 120003], \"mapped\", [110]], [[120004, 120004], \"disallowed\"], [[120005, 120005], \"mapped\", [112]], [[120006, 120006], \"mapped\", [113]], [[120007, 120007], \"mapped\", [114]], [[120008, 120008], \"mapped\", [115]], [[120009, 120009], \"mapped\", [116]], [[120010, 120010], \"mapped\", [117]], [[120011, 120011], \"mapped\", [118]], [[120012, 120012], \"mapped\", [119]], [[120013, 120013], \"mapped\", [120]], [[120014, 120014], \"mapped\", [121]], [[120015, 120015], \"mapped\", [122]], [[120016, 120016], \"mapped\", [97]], [[120017, 120017], \"mapped\", [98]], [[120018, 120018], \"mapped\", [99]], [[120019, 120019], \"mapped\", [100]], [[120020, 120020], \"mapped\", [101]], [[120021, 120021], \"mapped\", [102]], [[120022, 120022], \"mapped\", [103]], [[120023, 120023], \"mapped\", [104]], [[120024, 120024], \"mapped\", [105]], [[120025, 120025], \"mapped\", [106]], [[120026, 120026], \"mapped\", [107]], [[120027, 120027], \"mapped\", [108]], [[120028, 120028], \"mapped\", [109]], [[120029, 120029], \"mapped\", [110]], [[120030, 120030], \"mapped\", [111]], [[120031, 120031], \"mapped\", [112]], [[120032, 120032], \"mapped\", [113]], [[120033, 120033], \"mapped\", [114]], [[120034, 120034], \"mapped\", [115]], [[120035, 120035], \"mapped\", [116]], [[120036, 120036], \"mapped\", [117]], [[120037, 120037], \"mapped\", [118]], [[120038, 120038], \"mapped\", [119]], [[120039, 120039], \"mapped\", [120]], [[120040, 120040], \"mapped\", [121]], [[120041, 120041], \"mapped\", [122]], [[120042, 120042], \"mapped\", [97]], [[120043, 120043], \"mapped\", [98]], [[120044, 120044], \"mapped\", [99]], [[120045, 120045], \"mapped\", [100]], [[120046, 120046], \"mapped\", [101]], [[120047, 120047], \"mapped\", [102]], [[120048, 120048], \"mapped\", [103]], [[120049, 120049], \"mapped\", [104]], [[120050, 120050], \"mapped\", [105]], [[120051, 120051], \"mapped\", [106]], [[120052, 120052], \"mapped\", [107]], [[120053, 120053], \"mapped\", [108]], [[120054, 120054], \"mapped\", [109]], [[120055, 120055], \"mapped\", [110]], [[120056, 120056], \"mapped\", [111]], [[120057, 120057], \"mapped\", [112]], [[120058, 120058], \"mapped\", [113]], [[120059, 120059], \"mapped\", [114]], [[120060, 120060], \"mapped\", [115]], [[120061, 120061], \"mapped\", [116]], [[120062, 120062], \"mapped\", [117]], [[120063, 120063], \"mapped\", [118]], [[120064, 120064], \"mapped\", [119]], [[120065, 120065], \"mapped\", [120]], [[120066, 120066], \"mapped\", [121]], [[120067, 120067], \"mapped\", [122]], [[120068, 120068], \"mapped\", [97]], [[120069, 120069], \"mapped\", [98]], [[120070, 120070], \"disallowed\"], [[120071, 120071], \"mapped\", [100]], [[120072, 120072], \"mapped\", [101]], [[120073, 120073], \"mapped\", [102]], [[120074, 120074], \"mapped\", [103]], [[120075, 120076], \"disallowed\"], [[120077, 120077], \"mapped\", [106]], [[120078, 120078], \"mapped\", [107]], [[120079, 120079], \"mapped\", [108]], [[120080, 120080], \"mapped\", [109]], [[120081, 120081], \"mapped\", [110]], [[120082, 120082], \"mapped\", [111]], [[120083, 120083], \"mapped\", [112]], [[120084, 120084], \"mapped\", [113]], [[120085, 120085], \"disallowed\"], [[120086, 120086], \"mapped\", [115]], [[120087, 120087], \"mapped\", [116]], [[120088, 120088], \"mapped\", [117]], [[120089, 120089], \"mapped\", [118]], [[120090, 120090], \"mapped\", [119]], [[120091, 120091], \"mapped\", [120]], [[120092, 120092], \"mapped\", [121]], [[120093, 120093], \"disallowed\"], [[120094, 120094], \"mapped\", [97]], [[120095, 120095], \"mapped\", [98]], [[120096, 120096], \"mapped\", [99]], [[120097, 120097], \"mapped\", [100]], [[120098, 120098], \"mapped\", [101]], [[120099, 120099], \"mapped\", [102]], [[120100, 120100], \"mapped\", [103]], [[120101, 120101], \"mapped\", [104]], [[120102, 120102], \"mapped\", [105]], [[120103, 120103], \"mapped\", [106]], [[120104, 120104], \"mapped\", [107]], [[120105, 120105], \"mapped\", [108]], [[120106, 120106], \"mapped\", [109]], [[120107, 120107], \"mapped\", [110]], [[120108, 120108], \"mapped\", [111]], [[120109, 120109], \"mapped\", [112]], [[120110, 120110], \"mapped\", [113]], [[120111, 120111], \"mapped\", [114]], [[120112, 120112], \"mapped\", [115]], [[120113, 120113], \"mapped\", [116]], [[120114, 120114], \"mapped\", [117]], [[120115, 120115], \"mapped\", [118]], [[120116, 120116], \"mapped\", [119]], [[120117, 120117], \"mapped\", [120]], [[120118, 120118], \"mapped\", [121]], [[120119, 120119], \"mapped\", [122]], [[120120, 120120], \"mapped\", [97]], [[120121, 120121], \"mapped\", [98]], [[120122, 120122], \"disallowed\"], [[120123, 120123], \"mapped\", [100]], [[120124, 120124], \"mapped\", [101]], [[120125, 120125], \"mapped\", [102]], [[120126, 120126], \"mapped\", [103]], [[120127, 120127], \"disallowed\"], [[120128, 120128], \"mapped\", [105]], [[120129, 120129], \"mapped\", [106]], [[120130, 120130], \"mapped\", [107]], [[120131, 120131], \"mapped\", [108]], [[120132, 120132], \"mapped\", [109]], [[120133, 120133], \"disallowed\"], [[120134, 120134], \"mapped\", [111]], [[120135, 120137], \"disallowed\"], [[120138, 120138], \"mapped\", [115]], [[120139, 120139], \"mapped\", [116]], [[120140, 120140], \"mapped\", [117]], [[120141, 120141], \"mapped\", [118]], [[120142, 120142], \"mapped\", [119]], [[120143, 120143], \"mapped\", [120]], [[120144, 120144], \"mapped\", [121]], [[120145, 120145], \"disallowed\"], [[120146, 120146], \"mapped\", [97]], [[120147, 120147], \"mapped\", [98]], [[120148, 120148], \"mapped\", [99]], [[120149, 120149], \"mapped\", [100]], [[120150, 120150], \"mapped\", [101]], [[120151, 120151], \"mapped\", [102]], [[120152, 120152], \"mapped\", [103]], [[120153, 120153], \"mapped\", [104]], [[120154, 120154], \"mapped\", [105]], [[120155, 120155], \"mapped\", [106]], [[120156, 120156], \"mapped\", [107]], [[120157, 120157], \"mapped\", [108]], [[120158, 120158], \"mapped\", [109]], [[120159, 120159], \"mapped\", [110]], [[120160, 120160], \"mapped\", [111]], [[120161, 120161], \"mapped\", [112]], [[120162, 120162], \"mapped\", [113]], [[120163, 120163], \"mapped\", [114]], [[120164, 120164], \"mapped\", [115]], [[120165, 120165], \"mapped\", [116]], [[120166, 120166], \"mapped\", [117]], [[120167, 120167], \"mapped\", [118]], [[120168, 120168], \"mapped\", [119]], [[120169, 120169], \"mapped\", [120]], [[120170, 120170], \"mapped\", [121]], [[120171, 120171], \"mapped\", [122]], [[120172, 120172], \"mapped\", [97]], [[120173, 120173], \"mapped\", [98]], [[120174, 120174], \"mapped\", [99]], [[120175, 120175], \"mapped\", [100]], [[120176, 120176], \"mapped\", [101]], [[120177, 120177], \"mapped\", [102]], [[120178, 120178], \"mapped\", [103]], [[120179, 120179], \"mapped\", [104]], [[120180, 120180], \"mapped\", [105]], [[120181, 120181], \"mapped\", [106]], [[120182, 120182], \"mapped\", [107]], [[120183, 120183], \"mapped\", [108]], [[120184, 120184], \"mapped\", [109]], [[120185, 120185], \"mapped\", [110]], [[120186, 120186], \"mapped\", [111]], [[120187, 120187], \"mapped\", [112]], [[120188, 120188], \"mapped\", [113]], [[120189, 120189], \"mapped\", [114]], [[120190, 120190], \"mapped\", [115]], [[120191, 120191], \"mapped\", [116]], [[120192, 120192], \"mapped\", [117]], [[120193, 120193], \"mapped\", [118]], [[120194, 120194], \"mapped\", [119]], [[120195, 120195], \"mapped\", [120]], [[120196, 120196], \"mapped\", [121]], [[120197, 120197], \"mapped\", [122]], [[120198, 120198], \"mapped\", [97]], [[120199, 120199], \"mapped\", [98]], [[120200, 120200], \"mapped\", [99]], [[120201, 120201], \"mapped\", [100]], [[120202, 120202], \"mapped\", [101]], [[120203, 120203], \"mapped\", [102]], [[120204, 120204], \"mapped\", [103]], [[120205, 120205], \"mapped\", [104]], [[120206, 120206], \"mapped\", [105]], [[120207, 120207], \"mapped\", [106]], [[120208, 120208], \"mapped\", [107]], [[120209, 120209], \"mapped\", [108]], [[120210, 120210], \"mapped\", [109]], [[120211, 120211], \"mapped\", [110]], [[120212, 120212], \"mapped\", [111]], [[120213, 120213], \"mapped\", [112]], [[120214, 120214], \"mapped\", [113]], [[120215, 120215], \"mapped\", [114]], [[120216, 120216], \"mapped\", [115]], [[120217, 120217], \"mapped\", [116]], [[120218, 120218], \"mapped\", [117]], [[120219, 120219], \"mapped\", [118]], [[120220, 120220], \"mapped\", [119]], [[120221, 120221], \"mapped\", [120]], [[120222, 120222], \"mapped\", [121]], [[120223, 120223], \"mapped\", [122]], [[120224, 120224], \"mapped\", [97]], [[120225, 120225], \"mapped\", [98]], [[120226, 120226], \"mapped\", [99]], [[120227, 120227], \"mapped\", [100]], [[120228, 120228], \"mapped\", [101]], [[120229, 120229], \"mapped\", [102]], [[120230, 120230], \"mapped\", [103]], [[120231, 120231], \"mapped\", [104]], [[120232, 120232], \"mapped\", [105]], [[120233, 120233], \"mapped\", [106]], [[120234, 120234], \"mapped\", [107]], [[120235, 120235], \"mapped\", [108]], [[120236, 120236], \"mapped\", [109]], [[120237, 120237], \"mapped\", [110]], [[120238, 120238], \"mapped\", [111]], [[120239, 120239], \"mapped\", [112]], [[120240, 120240], \"mapped\", [113]], [[120241, 120241], \"mapped\", [114]], [[120242, 120242], \"mapped\", [115]], [[120243, 120243], \"mapped\", [116]], [[120244, 120244], \"mapped\", [117]], [[120245, 120245], \"mapped\", [118]], [[120246, 120246], \"mapped\", [119]], [[120247, 120247], \"mapped\", [120]], [[120248, 120248], \"mapped\", [121]], [[120249, 120249], \"mapped\", [122]], [[120250, 120250], \"mapped\", [97]], [[120251, 120251], \"mapped\", [98]], [[120252, 120252], \"mapped\", [99]], [[120253, 120253], \"mapped\", [100]], [[120254, 120254], \"mapped\", [101]], [[120255, 120255], \"mapped\", [102]], [[120256, 120256], \"mapped\", [103]], [[120257, 120257], \"mapped\", [104]], [[120258, 120258], \"mapped\", [105]], [[120259, 120259], \"mapped\", [106]], [[120260, 120260], \"mapped\", [107]], [[120261, 120261], \"mapped\", [108]], [[120262, 120262], \"mapped\", [109]], [[120263, 120263], \"mapped\", [110]], [[120264, 120264], \"mapped\", [111]], [[120265, 120265], \"mapped\", [112]], [[120266, 120266], \"mapped\", [113]], [[120267, 120267], \"mapped\", [114]], [[120268, 120268], \"mapped\", [115]], [[120269, 120269], \"mapped\", [116]], [[120270, 120270], \"mapped\", [117]], [[120271, 120271], \"mapped\", [118]], [[120272, 120272], \"mapped\", [119]], [[120273, 120273], \"mapped\", [120]], [[120274, 120274], \"mapped\", [121]], [[120275, 120275], \"mapped\", [122]], [[120276, 120276], \"mapped\", [97]], [[120277, 120277], \"mapped\", [98]], [[120278, 120278], \"mapped\", [99]], [[120279, 120279], \"mapped\", [100]], [[120280, 120280], \"mapped\", [101]], [[120281, 120281], \"mapped\", [102]], [[120282, 120282], \"mapped\", [103]], [[120283, 120283], \"mapped\", [104]], [[120284, 120284], \"mapped\", [105]], [[120285, 120285], \"mapped\", [106]], [[120286, 120286], \"mapped\", [107]], [[120287, 120287], \"mapped\", [108]], [[120288, 120288], \"mapped\", [109]], [[120289, 120289], \"mapped\", [110]], [[120290, 120290], \"mapped\", [111]], [[120291, 120291], \"mapped\", [112]], [[120292, 120292], \"mapped\", [113]], [[120293, 120293], \"mapped\", [114]], [[120294, 120294], \"mapped\", [115]], [[120295, 120295], \"mapped\", [116]], [[120296, 120296], \"mapped\", [117]], [[120297, 120297], \"mapped\", [118]], [[120298, 120298], \"mapped\", [119]], [[120299, 120299], \"mapped\", [120]], [[120300, 120300], \"mapped\", [121]], [[120301, 120301], \"mapped\", [122]], [[120302, 120302], \"mapped\", [97]], [[120303, 120303], \"mapped\", [98]], [[120304, 120304], \"mapped\", [99]], [[120305, 120305], \"mapped\", [100]], [[120306, 120306], \"mapped\", [101]], [[120307, 120307], \"mapped\", [102]], [[120308, 120308], \"mapped\", [103]], [[120309, 120309], \"mapped\", [104]], [[120310, 120310], \"mapped\", [105]], [[120311, 120311], \"mapped\", [106]], [[120312, 120312], \"mapped\", [107]], [[120313, 120313], \"mapped\", [108]], [[120314, 120314], \"mapped\", [109]], [[120315, 120315], \"mapped\", [110]], [[120316, 120316], \"mapped\", [111]], [[120317, 120317], \"mapped\", [112]], [[120318, 120318], \"mapped\", [113]], [[120319, 120319], \"mapped\", [114]], [[120320, 120320], \"mapped\", [115]], [[120321, 120321], \"mapped\", [116]], [[120322, 120322], \"mapped\", [117]], [[120323, 120323], \"mapped\", [118]], [[120324, 120324], \"mapped\", [119]], [[120325, 120325], \"mapped\", [120]], [[120326, 120326], \"mapped\", [121]], [[120327, 120327], \"mapped\", [122]], [[120328, 120328], \"mapped\", [97]], [[120329, 120329], \"mapped\", [98]], [[120330, 120330], \"mapped\", [99]], [[120331, 120331], \"mapped\", [100]], [[120332, 120332], \"mapped\", [101]], [[120333, 120333], \"mapped\", [102]], [[120334, 120334], \"mapped\", [103]], [[120335, 120335], \"mapped\", [104]], [[120336, 120336], \"mapped\", [105]], [[120337, 120337], \"mapped\", [106]], [[120338, 120338], \"mapped\", [107]], [[120339, 120339], \"mapped\", [108]], [[120340, 120340], \"mapped\", [109]], [[120341, 120341], \"mapped\", [110]], [[120342, 120342], \"mapped\", [111]], [[120343, 120343], \"mapped\", [112]], [[120344, 120344], \"mapped\", [113]], [[120345, 120345], \"mapped\", [114]], [[120346, 120346], \"mapped\", [115]], [[120347, 120347], \"mapped\", [116]], [[120348, 120348], \"mapped\", [117]], [[120349, 120349], \"mapped\", [118]], [[120350, 120350], \"mapped\", [119]], [[120351, 120351], \"mapped\", [120]], [[120352, 120352], \"mapped\", [121]], [[120353, 120353], \"mapped\", [122]], [[120354, 120354], \"mapped\", [97]], [[120355, 120355], \"mapped\", [98]], [[120356, 120356], \"mapped\", [99]], [[120357, 120357], \"mapped\", [100]], [[120358, 120358], \"mapped\", [101]], [[120359, 120359], \"mapped\", [102]], [[120360, 120360], \"mapped\", [103]], [[120361, 120361], \"mapped\", [104]], [[120362, 120362], \"mapped\", [105]], [[120363, 120363], \"mapped\", [106]], [[120364, 120364], \"mapped\", [107]], [[120365, 120365], \"mapped\", [108]], [[120366, 120366], \"mapped\", [109]], [[120367, 120367], \"mapped\", [110]], [[120368, 120368], \"mapped\", [111]], [[120369, 120369], \"mapped\", [112]], [[120370, 120370], \"mapped\", [113]], [[120371, 120371], \"mapped\", [114]], [[120372, 120372], \"mapped\", [115]], [[120373, 120373], \"mapped\", [116]], [[120374, 120374], \"mapped\", [117]], [[120375, 120375], \"mapped\", [118]], [[120376, 120376], \"mapped\", [119]], [[120377, 120377], \"mapped\", [120]], [[120378, 120378], \"mapped\", [121]], [[120379, 120379], \"mapped\", [122]], [[120380, 120380], \"mapped\", [97]], [[120381, 120381], \"mapped\", [98]], [[120382, 120382], \"mapped\", [99]], [[120383, 120383], \"mapped\", [100]], [[120384, 120384], \"mapped\", [101]], [[120385, 120385], \"mapped\", [102]], [[120386, 120386], \"mapped\", [103]], [[120387, 120387], \"mapped\", [104]], [[120388, 120388], \"mapped\", [105]], [[120389, 120389], \"mapped\", [106]], [[120390, 120390], \"mapped\", [107]], [[120391, 120391], \"mapped\", [108]], [[120392, 120392], \"mapped\", [109]], [[120393, 120393], \"mapped\", [110]], [[120394, 120394], \"mapped\", [111]], [[120395, 120395], \"mapped\", [112]], [[120396, 120396], \"mapped\", [113]], [[120397, 120397], \"mapped\", [114]], [[120398, 120398], \"mapped\", [115]], [[120399, 120399], \"mapped\", [116]], [[120400, 120400], \"mapped\", [117]], [[120401, 120401], \"mapped\", [118]], [[120402, 120402], \"mapped\", [119]], [[120403, 120403], \"mapped\", [120]], [[120404, 120404], \"mapped\", [121]], [[120405, 120405], \"mapped\", [122]], [[120406, 120406], \"mapped\", [97]], [[120407, 120407], \"mapped\", [98]], [[120408, 120408], \"mapped\", [99]], [[120409, 120409], \"mapped\", [100]], [[120410, 120410], \"mapped\", [101]], [[120411, 120411], \"mapped\", [102]], [[120412, 120412], \"mapped\", [103]], [[120413, 120413], \"mapped\", [104]], [[120414, 120414], \"mapped\", [105]], [[120415, 120415], \"mapped\", [106]], [[120416, 120416], \"mapped\", [107]], [[120417, 120417], \"mapped\", [108]], [[120418, 120418], \"mapped\", [109]], [[120419, 120419], \"mapped\", [110]], [[120420, 120420], \"mapped\", [111]], [[120421, 120421], \"mapped\", [112]], [[120422, 120422], \"mapped\", [113]], [[120423, 120423], \"mapped\", [114]], [[120424, 120424], \"mapped\", [115]], [[120425, 120425], \"mapped\", [116]], [[120426, 120426], \"mapped\", [117]], [[120427, 120427], \"mapped\", [118]], [[120428, 120428], \"mapped\", [119]], [[120429, 120429], \"mapped\", [120]], [[120430, 120430], \"mapped\", [121]], [[120431, 120431], \"mapped\", [122]], [[120432, 120432], \"mapped\", [97]], [[120433, 120433], \"mapped\", [98]], [[120434, 120434], \"mapped\", [99]], [[120435, 120435], \"mapped\", [100]], [[120436, 120436], \"mapped\", [101]], [[120437, 120437], \"mapped\", [102]], [[120438, 120438], \"mapped\", [103]], [[120439, 120439], \"mapped\", [104]], [[120440, 120440], \"mapped\", [105]], [[120441, 120441], \"mapped\", [106]], [[120442, 120442], \"mapped\", [107]], [[120443, 120443], \"mapped\", [108]], [[120444, 120444], \"mapped\", [109]], [[120445, 120445], \"mapped\", [110]], [[120446, 120446], \"mapped\", [111]], [[120447, 120447], \"mapped\", [112]], [[120448, 120448], \"mapped\", [113]], [[120449, 120449], \"mapped\", [114]], [[120450, 120450], \"mapped\", [115]], [[120451, 120451], \"mapped\", [116]], [[120452, 120452], \"mapped\", [117]], [[120453, 120453], \"mapped\", [118]], [[120454, 120454], \"mapped\", [119]], [[120455, 120455], \"mapped\", [120]], [[120456, 120456], \"mapped\", [121]], [[120457, 120457], \"mapped\", [122]], [[120458, 120458], \"mapped\", [97]], [[120459, 120459], \"mapped\", [98]], [[120460, 120460], \"mapped\", [99]], [[120461, 120461], \"mapped\", [100]], [[120462, 120462], \"mapped\", [101]], [[120463, 120463], \"mapped\", [102]], [[120464, 120464], \"mapped\", [103]], [[120465, 120465], \"mapped\", [104]], [[120466, 120466], \"mapped\", [105]], [[120467, 120467], \"mapped\", [106]], [[120468, 120468], \"mapped\", [107]], [[120469, 120469], \"mapped\", [108]], [[120470, 120470], \"mapped\", [109]], [[120471, 120471], \"mapped\", [110]], [[120472, 120472], \"mapped\", [111]], [[120473, 120473], \"mapped\", [112]], [[120474, 120474], \"mapped\", [113]], [[120475, 120475], \"mapped\", [114]], [[120476, 120476], \"mapped\", [115]], [[120477, 120477], \"mapped\", [116]], [[120478, 120478], \"mapped\", [117]], [[120479, 120479], \"mapped\", [118]], [[120480, 120480], \"mapped\", [119]], [[120481, 120481], \"mapped\", [120]], [[120482, 120482], \"mapped\", [121]], [[120483, 120483], \"mapped\", [122]], [[120484, 120484], \"mapped\", [305]], [[120485, 120485], \"mapped\", [567]], [[120486, 120487], \"disallowed\"], [[120488, 120488], \"mapped\", [945]], [[120489, 120489], \"mapped\", [946]], [[120490, 120490], \"mapped\", [947]], [[120491, 120491], \"mapped\", [948]], [[120492, 120492], \"mapped\", [949]], [[120493, 120493], \"mapped\", [950]], [[120494, 120494], \"mapped\", [951]], [[120495, 120495], \"mapped\", [952]], [[120496, 120496], \"mapped\", [953]], [[120497, 120497], \"mapped\", [954]], [[120498, 120498], \"mapped\", [955]], [[120499, 120499], \"mapped\", [956]], [[120500, 120500], \"mapped\", [957]], [[120501, 120501], \"mapped\", [958]], [[120502, 120502], \"mapped\", [959]], [[120503, 120503], \"mapped\", [960]], [[120504, 120504], \"mapped\", [961]], [[120505, 120505], \"mapped\", [952]], [[120506, 120506], \"mapped\", [963]], [[120507, 120507], \"mapped\", [964]], [[120508, 120508], \"mapped\", [965]], [[120509, 120509], \"mapped\", [966]], [[120510, 120510], \"mapped\", [967]], [[120511, 120511], \"mapped\", [968]], [[120512, 120512], \"mapped\", [969]], [[120513, 120513], \"mapped\", [8711]], [[120514, 120514], \"mapped\", [945]], [[120515, 120515], \"mapped\", [946]], [[120516, 120516], \"mapped\", [947]], [[120517, 120517], \"mapped\", [948]], [[120518, 120518], \"mapped\", [949]], [[120519, 120519], \"mapped\", [950]], [[120520, 120520], \"mapped\", [951]], [[120521, 120521], \"mapped\", [952]], [[120522, 120522], \"mapped\", [953]], [[120523, 120523], \"mapped\", [954]], [[120524, 120524], \"mapped\", [955]], [[120525, 120525], \"mapped\", [956]], [[120526, 120526], \"mapped\", [957]], [[120527, 120527], \"mapped\", [958]], [[120528, 120528], \"mapped\", [959]], [[120529, 120529], \"mapped\", [960]], [[120530, 120530], \"mapped\", [961]], [[120531, 120532], \"mapped\", [963]], [[120533, 120533], \"mapped\", [964]], [[120534, 120534], \"mapped\", [965]], [[120535, 120535], \"mapped\", [966]], [[120536, 120536], \"mapped\", [967]], [[120537, 120537], \"mapped\", [968]], [[120538, 120538], \"mapped\", [969]], [[120539, 120539], \"mapped\", [8706]], [[120540, 120540], \"mapped\", [949]], [[120541, 120541], \"mapped\", [952]], [[120542, 120542], \"mapped\", [954]], [[120543, 120543], \"mapped\", [966]], [[120544, 120544], \"mapped\", [961]], [[120545, 120545], \"mapped\", [960]], [[120546, 120546], \"mapped\", [945]], [[120547, 120547], \"mapped\", [946]], [[120548, 120548], \"mapped\", [947]], [[120549, 120549], \"mapped\", [948]], [[120550, 120550], \"mapped\", [949]], [[120551, 120551], \"mapped\", [950]], [[120552, 120552], \"mapped\", [951]], [[120553, 120553], \"mapped\", [952]], [[120554, 120554], \"mapped\", [953]], [[120555, 120555], \"mapped\", [954]], [[120556, 120556], \"mapped\", [955]], [[120557, 120557], \"mapped\", [956]], [[120558, 120558], \"mapped\", [957]], [[120559, 120559], \"mapped\", [958]], [[120560, 120560], \"mapped\", [959]], [[120561, 120561], \"mapped\", [960]], [[120562, 120562], \"mapped\", [961]], [[120563, 120563], \"mapped\", [952]], [[120564, 120564], \"mapped\", [963]], [[120565, 120565], \"mapped\", [964]], [[120566, 120566], \"mapped\", [965]], [[120567, 120567], \"mapped\", [966]], [[120568, 120568], \"mapped\", [967]], [[120569, 120569], \"mapped\", [968]], [[120570, 120570], \"mapped\", [969]], [[120571, 120571], \"mapped\", [8711]], [[120572, 120572], \"mapped\", [945]], [[120573, 120573], \"mapped\", [946]], [[120574, 120574], \"mapped\", [947]], [[120575, 120575], \"mapped\", [948]], [[120576, 120576], \"mapped\", [949]], [[120577, 120577], \"mapped\", [950]], [[120578, 120578], \"mapped\", [951]], [[120579, 120579], \"mapped\", [952]], [[120580, 120580], \"mapped\", [953]], [[120581, 120581], \"mapped\", [954]], [[120582, 120582], \"mapped\", [955]], [[120583, 120583], \"mapped\", [956]], [[120584, 120584], \"mapped\", [957]], [[120585, 120585], \"mapped\", [958]], [[120586, 120586], \"mapped\", [959]], [[120587, 120587], \"mapped\", [960]], [[120588, 120588], \"mapped\", [961]], [[120589, 120590], \"mapped\", [963]], [[120591, 120591], \"mapped\", [964]], [[120592, 120592], \"mapped\", [965]], [[120593, 120593], \"mapped\", [966]], [[120594, 120594], \"mapped\", [967]], [[120595, 120595], \"mapped\", [968]], [[120596, 120596], \"mapped\", [969]], [[120597, 120597], \"mapped\", [8706]], [[120598, 120598], \"mapped\", [949]], [[120599, 120599], \"mapped\", [952]], [[120600, 120600], \"mapped\", [954]], [[120601, 120601], \"mapped\", [966]], [[120602, 120602], \"mapped\", [961]], [[120603, 120603], \"mapped\", [960]], [[120604, 120604], \"mapped\", [945]], [[120605, 120605], \"mapped\", [946]], [[120606, 120606], \"mapped\", [947]], [[120607, 120607], \"mapped\", [948]], [[120608, 120608], \"mapped\", [949]], [[120609, 120609], \"mapped\", [950]], [[120610, 120610], \"mapped\", [951]], [[120611, 120611], \"mapped\", [952]], [[120612, 120612], \"mapped\", [953]], [[120613, 120613], \"mapped\", [954]], [[120614, 120614], \"mapped\", [955]], [[120615, 120615], \"mapped\", [956]], [[120616, 120616], \"mapped\", [957]], [[120617, 120617], \"mapped\", [958]], [[120618, 120618], \"mapped\", [959]], [[120619, 120619], \"mapped\", [960]], [[120620, 120620], \"mapped\", [961]], [[120621, 120621], \"mapped\", [952]], [[120622, 120622], \"mapped\", [963]], [[120623, 120623], \"mapped\", [964]], [[120624, 120624], \"mapped\", [965]], [[120625, 120625], \"mapped\", [966]], [[120626, 120626], \"mapped\", [967]], [[120627, 120627], \"mapped\", [968]], [[120628, 120628], \"mapped\", [969]], [[120629, 120629], \"mapped\", [8711]], [[120630, 120630], \"mapped\", [945]], [[120631, 120631], \"mapped\", [946]], [[120632, 120632], \"mapped\", [947]], [[120633, 120633], \"mapped\", [948]], [[120634, 120634], \"mapped\", [949]], [[120635, 120635], \"mapped\", [950]], [[120636, 120636], \"mapped\", [951]], [[120637, 120637], \"mapped\", [952]], [[120638, 120638], \"mapped\", [953]], [[120639, 120639], \"mapped\", [954]], [[120640, 120640], \"mapped\", [955]], [[120641, 120641], \"mapped\", [956]], [[120642, 120642], \"mapped\", [957]], [[120643, 120643], \"mapped\", [958]], [[120644, 120644], \"mapped\", [959]], [[120645, 120645], \"mapped\", [960]], [[120646, 120646], \"mapped\", [961]], [[120647, 120648], \"mapped\", [963]], [[120649, 120649], \"mapped\", [964]], [[120650, 120650], \"mapped\", [965]], [[120651, 120651], \"mapped\", [966]], [[120652, 120652], \"mapped\", [967]], [[120653, 120653], \"mapped\", [968]], [[120654, 120654], \"mapped\", [969]], [[120655, 120655], \"mapped\", [8706]], [[120656, 120656], \"mapped\", [949]], [[120657, 120657], \"mapped\", [952]], [[120658, 120658], \"mapped\", [954]], [[120659, 120659], \"mapped\", [966]], [[120660, 120660], \"mapped\", [961]], [[120661, 120661], \"mapped\", [960]], [[120662, 120662], \"mapped\", [945]], [[120663, 120663], \"mapped\", [946]], [[120664, 120664], \"mapped\", [947]], [[120665, 120665], \"mapped\", [948]], [[120666, 120666], \"mapped\", [949]], [[120667, 120667], \"mapped\", [950]], [[120668, 120668], \"mapped\", [951]], [[120669, 120669], \"mapped\", [952]], [[120670, 120670], \"mapped\", [953]], [[120671, 120671], \"mapped\", [954]], [[120672, 120672], \"mapped\", [955]], [[120673, 120673], \"mapped\", [956]], [[120674, 120674], \"mapped\", [957]], [[120675, 120675], \"mapped\", [958]], [[120676, 120676], \"mapped\", [959]], [[120677, 120677], \"mapped\", [960]], [[120678, 120678], \"mapped\", [961]], [[120679, 120679], \"mapped\", [952]], [[120680, 120680], \"mapped\", [963]], [[120681, 120681], \"mapped\", [964]], [[120682, 120682], \"mapped\", [965]], [[120683, 120683], \"mapped\", [966]], [[120684, 120684], \"mapped\", [967]], [[120685, 120685], \"mapped\", [968]], [[120686, 120686], \"mapped\", [969]], [[120687, 120687], \"mapped\", [8711]], [[120688, 120688], \"mapped\", [945]], [[120689, 120689], \"mapped\", [946]], [[120690, 120690], \"mapped\", [947]], [[120691, 120691], \"mapped\", [948]], [[120692, 120692], \"mapped\", [949]], [[120693, 120693], \"mapped\", [950]], [[120694, 120694], \"mapped\", [951]], [[120695, 120695], \"mapped\", [952]], [[120696, 120696], \"mapped\", [953]], [[120697, 120697], \"mapped\", [954]], [[120698, 120698], \"mapped\", [955]], [[120699, 120699], \"mapped\", [956]], [[120700, 120700], \"mapped\", [957]], [[120701, 120701], \"mapped\", [958]], [[120702, 120702], \"mapped\", [959]], [[120703, 120703], \"mapped\", [960]], [[120704, 120704], \"mapped\", [961]], [[120705, 120706], \"mapped\", [963]], [[120707, 120707], \"mapped\", [964]], [[120708, 120708], \"mapped\", [965]], [[120709, 120709], \"mapped\", [966]], [[120710, 120710], \"mapped\", [967]], [[120711, 120711], \"mapped\", [968]], [[120712, 120712], \"mapped\", [969]], [[120713, 120713], \"mapped\", [8706]], [[120714, 120714], \"mapped\", [949]], [[120715, 120715], \"mapped\", [952]], [[120716, 120716], \"mapped\", [954]], [[120717, 120717], \"mapped\", [966]], [[120718, 120718], \"mapped\", [961]], [[120719, 120719], \"mapped\", [960]], [[120720, 120720], \"mapped\", [945]], [[120721, 120721], \"mapped\", [946]], [[120722, 120722], \"mapped\", [947]], [[120723, 120723], \"mapped\", [948]], [[120724, 120724], \"mapped\", [949]], [[120725, 120725], \"mapped\", [950]], [[120726, 120726], \"mapped\", [951]], [[120727, 120727], \"mapped\", [952]], [[120728, 120728], \"mapped\", [953]], [[120729, 120729], \"mapped\", [954]], [[120730, 120730], \"mapped\", [955]], [[120731, 120731], \"mapped\", [956]], [[120732, 120732], \"mapped\", [957]], [[120733, 120733], \"mapped\", [958]], [[120734, 120734], \"mapped\", [959]], [[120735, 120735], \"mapped\", [960]], [[120736, 120736], \"mapped\", [961]], [[120737, 120737], \"mapped\", [952]], [[120738, 120738], \"mapped\", [963]], [[120739, 120739], \"mapped\", [964]], [[120740, 120740], \"mapped\", [965]], [[120741, 120741], \"mapped\", [966]], [[120742, 120742], \"mapped\", [967]], [[120743, 120743], \"mapped\", [968]], [[120744, 120744], \"mapped\", [969]], [[120745, 120745], \"mapped\", [8711]], [[120746, 120746], \"mapped\", [945]], [[120747, 120747], \"mapped\", [946]], [[120748, 120748], \"mapped\", [947]], [[120749, 120749], \"mapped\", [948]], [[120750, 120750], \"mapped\", [949]], [[120751, 120751], \"mapped\", [950]], [[120752, 120752], \"mapped\", [951]], [[120753, 120753], \"mapped\", [952]], [[120754, 120754], \"mapped\", [953]], [[120755, 120755], \"mapped\", [954]], [[120756, 120756], \"mapped\", [955]], [[120757, 120757], \"mapped\", [956]], [[120758, 120758], \"mapped\", [957]], [[120759, 120759], \"mapped\", [958]], [[120760, 120760], \"mapped\", [959]], [[120761, 120761], \"mapped\", [960]], [[120762, 120762], \"mapped\", [961]], [[120763, 120764], \"mapped\", [963]], [[120765, 120765], \"mapped\", [964]], [[120766, 120766], \"mapped\", [965]], [[120767, 120767], \"mapped\", [966]], [[120768, 120768], \"mapped\", [967]], [[120769, 120769], \"mapped\", [968]], [[120770, 120770], \"mapped\", [969]], [[120771, 120771], \"mapped\", [8706]], [[120772, 120772], \"mapped\", [949]], [[120773, 120773], \"mapped\", [952]], [[120774, 120774], \"mapped\", [954]], [[120775, 120775], \"mapped\", [966]], [[120776, 120776], \"mapped\", [961]], [[120777, 120777], \"mapped\", [960]], [[120778, 120779], \"mapped\", [989]], [[120780, 120781], \"disallowed\"], [[120782, 120782], \"mapped\", [48]], [[120783, 120783], \"mapped\", [49]], [[120784, 120784], \"mapped\", [50]], [[120785, 120785], \"mapped\", [51]], [[120786, 120786], \"mapped\", [52]], [[120787, 120787], \"mapped\", [53]], [[120788, 120788], \"mapped\", [54]], [[120789, 120789], \"mapped\", [55]], [[120790, 120790], \"mapped\", [56]], [[120791, 120791], \"mapped\", [57]], [[120792, 120792], \"mapped\", [48]], [[120793, 120793], \"mapped\", [49]], [[120794, 120794], \"mapped\", [50]], [[120795, 120795], \"mapped\", [51]], [[120796, 120796], \"mapped\", [52]], [[120797, 120797], \"mapped\", [53]], [[120798, 120798], \"mapped\", [54]], [[120799, 120799], \"mapped\", [55]], [[120800, 120800], \"mapped\", [56]], [[120801, 120801], \"mapped\", [57]], [[120802, 120802], \"mapped\", [48]], [[120803, 120803], \"mapped\", [49]], [[120804, 120804], \"mapped\", [50]], [[120805, 120805], \"mapped\", [51]], [[120806, 120806], \"mapped\", [52]], [[120807, 120807], \"mapped\", [53]], [[120808, 120808], \"mapped\", [54]], [[120809, 120809], \"mapped\", [55]], [[120810, 120810], \"mapped\", [56]], [[120811, 120811], \"mapped\", [57]], [[120812, 120812], \"mapped\", [48]], [[120813, 120813], \"mapped\", [49]], [[120814, 120814], \"mapped\", [50]], [[120815, 120815], \"mapped\", [51]], [[120816, 120816], \"mapped\", [52]], [[120817, 120817], \"mapped\", [53]], [[120818, 120818], \"mapped\", [54]], [[120819, 120819], \"mapped\", [55]], [[120820, 120820], \"mapped\", [56]], [[120821, 120821], \"mapped\", [57]], [[120822, 120822], \"mapped\", [48]], [[120823, 120823], \"mapped\", [49]], [[120824, 120824], \"mapped\", [50]], [[120825, 120825], \"mapped\", [51]], [[120826, 120826], \"mapped\", [52]], [[120827, 120827], \"mapped\", [53]], [[120828, 120828], \"mapped\", [54]], [[120829, 120829], \"mapped\", [55]], [[120830, 120830], \"mapped\", [56]], [[120831, 120831], \"mapped\", [57]], [[120832, 121343], \"valid\", [], \"NV8\"], [[121344, 121398], \"valid\"], [[121399, 121402], \"valid\", [], \"NV8\"], [[121403, 121452], \"valid\"], [[121453, 121460], \"valid\", [], \"NV8\"], [[121461, 121461], \"valid\"], [[121462, 121475], \"valid\", [], \"NV8\"], [[121476, 121476], \"valid\"], [[121477, 121483], \"valid\", [], \"NV8\"], [[121484, 121498], \"disallowed\"], [[121499, 121503], \"valid\"], [[121504, 121504], \"disallowed\"], [[121505, 121519], \"valid\"], [[121520, 124927], \"disallowed\"], [[124928, 125124], \"valid\"], [[125125, 125126], \"disallowed\"], [[125127, 125135], \"valid\", [], \"NV8\"], [[125136, 125142], \"valid\"], [[125143, 126463], \"disallowed\"], [[126464, 126464], \"mapped\", [1575]], [[126465, 126465], \"mapped\", [1576]], [[126466, 126466], \"mapped\", [1580]], [[126467, 126467], \"mapped\", [1583]], [[126468, 126468], \"disallowed\"], [[126469, 126469], \"mapped\", [1608]], [[126470, 126470], \"mapped\", [1586]], [[126471, 126471], \"mapped\", [1581]], [[126472, 126472], \"mapped\", [1591]], [[126473, 126473], \"mapped\", [1610]], [[126474, 126474], \"mapped\", [1603]], [[126475, 126475], \"mapped\", [1604]], [[126476, 126476], \"mapped\", [1605]], [[126477, 126477], \"mapped\", [1606]], [[126478, 126478], \"mapped\", [1587]], [[126479, 126479], \"mapped\", [1593]], [[126480, 126480], \"mapped\", [1601]], [[126481, 126481], \"mapped\", [1589]], [[126482, 126482], \"mapped\", [1602]], [[126483, 126483], \"mapped\", [1585]], [[126484, 126484], \"mapped\", [1588]], [[126485, 126485], \"mapped\", [1578]], [[126486, 126486], \"mapped\", [1579]], [[126487, 126487], \"mapped\", [1582]], [[126488, 126488], \"mapped\", [1584]], [[126489, 126489], \"mapped\", [1590]], [[126490, 126490], \"mapped\", [1592]], [[126491, 126491], \"mapped\", [1594]], [[126492, 126492], \"mapped\", [1646]], [[126493, 126493], \"mapped\", [1722]], [[126494, 126494], \"mapped\", [1697]], [[126495, 126495], \"mapped\", [1647]], [[126496, 126496], \"disallowed\"], [[126497, 126497], \"mapped\", [1576]], [[126498, 126498], \"mapped\", [1580]], [[126499, 126499], \"disallowed\"], [[126500, 126500], \"mapped\", [1607]], [[126501, 126502], \"disallowed\"], [[126503, 126503], \"mapped\", [1581]], [[126504, 126504], \"disallowed\"], [[126505, 126505], \"mapped\", [1610]], [[126506, 126506], \"mapped\", [1603]], [[126507, 126507], \"mapped\", [1604]], [[126508, 126508], \"mapped\", [1605]], [[126509, 126509], \"mapped\", [1606]], [[126510, 126510], \"mapped\", [1587]], [[126511, 126511], \"mapped\", [1593]], [[126512, 126512], \"mapped\", [1601]], [[126513, 126513], \"mapped\", [1589]], [[126514, 126514], \"mapped\", [1602]], [[126515, 126515], \"disallowed\"], [[126516, 126516], \"mapped\", [1588]], [[126517, 126517], \"mapped\", [1578]], [[126518, 126518], \"mapped\", [1579]], [[126519, 126519], \"mapped\", [1582]], [[126520, 126520], \"disallowed\"], [[126521, 126521], \"mapped\", [1590]], [[126522, 126522], \"disallowed\"], [[126523, 126523], \"mapped\", [1594]], [[126524, 126529], \"disallowed\"], [[126530, 126530], \"mapped\", [1580]], [[126531, 126534], \"disallowed\"], [[126535, 126535], \"mapped\", [1581]], [[126536, 126536], \"disallowed\"], [[126537, 126537], \"mapped\", [1610]], [[126538, 126538], \"disallowed\"], [[126539, 126539], \"mapped\", [1604]], [[126540, 126540], \"disallowed\"], [[126541, 126541], \"mapped\", [1606]], [[126542, 126542], \"mapped\", [1587]], [[126543, 126543], \"mapped\", [1593]], [[126544, 126544], \"disallowed\"], [[126545, 126545], \"mapped\", [1589]], [[126546, 126546], \"mapped\", [1602]], [[126547, 126547], \"disallowed\"], [[126548, 126548], \"mapped\", [1588]], [[126549, 126550], \"disallowed\"], [[126551, 126551], \"mapped\", [1582]], [[126552, 126552], \"disallowed\"], [[126553, 126553], \"mapped\", [1590]], [[126554, 126554], \"disallowed\"], [[126555, 126555], \"mapped\", [1594]], [[126556, 126556], \"disallowed\"], [[126557, 126557], \"mapped\", [1722]], [[126558, 126558], \"disallowed\"], [[126559, 126559], \"mapped\", [1647]], [[126560, 126560], \"disallowed\"], [[126561, 126561], \"mapped\", [1576]], [[126562, 126562], \"mapped\", [1580]], [[126563, 126563], \"disallowed\"], [[126564, 126564], \"mapped\", [1607]], [[126565, 126566], \"disallowed\"], [[126567, 126567], \"mapped\", [1581]], [[126568, 126568], \"mapped\", [1591]], [[126569, 126569], \"mapped\", [1610]], [[126570, 126570], \"mapped\", [1603]], [[126571, 126571], \"disallowed\"], [[126572, 126572], \"mapped\", [1605]], [[126573, 126573], \"mapped\", [1606]], [[126574, 126574], \"mapped\", [1587]], [[126575, 126575], \"mapped\", [1593]], [[126576, 126576], \"mapped\", [1601]], [[126577, 126577], \"mapped\", [1589]], [[126578, 126578], \"mapped\", [1602]], [[126579, 126579], \"disallowed\"], [[126580, 126580], \"mapped\", [1588]], [[126581, 126581], \"mapped\", [1578]], [[126582, 126582], \"mapped\", [1579]], [[126583, 126583], \"mapped\", [1582]], [[126584, 126584], \"disallowed\"], [[126585, 126585], \"mapped\", [1590]], [[126586, 126586], \"mapped\", [1592]], [[126587, 126587], \"mapped\", [1594]], [[126588, 126588], \"mapped\", [1646]], [[126589, 126589], \"disallowed\"], [[126590, 126590], \"mapped\", [1697]], [[126591, 126591], \"disallowed\"], [[126592, 126592], \"mapped\", [1575]], [[126593, 126593], \"mapped\", [1576]], [[126594, 126594], \"mapped\", [1580]], [[126595, 126595], \"mapped\", [1583]], [[126596, 126596], \"mapped\", [1607]], [[126597, 126597], \"mapped\", [1608]], [[126598, 126598], \"mapped\", [1586]], [[126599, 126599], \"mapped\", [1581]], [[126600, 126600], \"mapped\", [1591]], [[126601, 126601], \"mapped\", [1610]], [[126602, 126602], \"disallowed\"], [[126603, 126603], \"mapped\", [1604]], [[126604, 126604], \"mapped\", [1605]], [[126605, 126605], \"mapped\", [1606]], [[126606, 126606], \"mapped\", [1587]], [[126607, 126607], \"mapped\", [1593]], [[126608, 126608], \"mapped\", [1601]], [[126609, 126609], \"mapped\", [1589]], [[126610, 126610], \"mapped\", [1602]], [[126611, 126611], \"mapped\", [1585]], [[126612, 126612], \"mapped\", [1588]], [[126613, 126613], \"mapped\", [1578]], [[126614, 126614], \"mapped\", [1579]], [[126615, 126615], \"mapped\", [1582]], [[126616, 126616], \"mapped\", [1584]], [[126617, 126617], \"mapped\", [1590]], [[126618, 126618], \"mapped\", [1592]], [[126619, 126619], \"mapped\", [1594]], [[126620, 126624], \"disallowed\"], [[126625, 126625], \"mapped\", [1576]], [[126626, 126626], \"mapped\", [1580]], [[126627, 126627], \"mapped\", [1583]], [[126628, 126628], \"disallowed\"], [[126629, 126629], \"mapped\", [1608]], [[126630, 126630], \"mapped\", [1586]], [[126631, 126631], \"mapped\", [1581]], [[126632, 126632], \"mapped\", [1591]], [[126633, 126633], \"mapped\", [1610]], [[126634, 126634], \"disallowed\"], [[126635, 126635], \"mapped\", [1604]], [[126636, 126636], \"mapped\", [1605]], [[126637, 126637], \"mapped\", [1606]], [[126638, 126638], \"mapped\", [1587]], [[126639, 126639], \"mapped\", [1593]], [[126640, 126640], \"mapped\", [1601]], [[126641, 126641], \"mapped\", [1589]], [[126642, 126642], \"mapped\", [1602]], [[126643, 126643], \"mapped\", [1585]], [[126644, 126644], \"mapped\", [1588]], [[126645, 126645], \"mapped\", [1578]], [[126646, 126646], \"mapped\", [1579]], [[126647, 126647], \"mapped\", [1582]], [[126648, 126648], \"mapped\", [1584]], [[126649, 126649], \"mapped\", [1590]], [[126650, 126650], \"mapped\", [1592]], [[126651, 126651], \"mapped\", [1594]], [[126652, 126703], \"disallowed\"], [[126704, 126705], \"valid\", [], \"NV8\"], [[126706, 126975], \"disallowed\"], [[126976, 127019], \"valid\", [], \"NV8\"], [[127020, 127023], \"disallowed\"], [[127024, 127123], \"valid\", [], \"NV8\"], [[127124, 127135], \"disallowed\"], [[127136, 127150], \"valid\", [], \"NV8\"], [[127151, 127152], \"disallowed\"], [[127153, 127166], \"valid\", [], \"NV8\"], [[127167, 127167], \"valid\", [], \"NV8\"], [[127168, 127168], \"disallowed\"], [[127169, 127183], \"valid\", [], \"NV8\"], [[127184, 127184], \"disallowed\"], [[127185, 127199], \"valid\", [], \"NV8\"], [[127200, 127221], \"valid\", [], \"NV8\"], [[127222, 127231], \"disallowed\"], [[127232, 127232], \"disallowed\"], [[127233, 127233], \"disallowed_STD3_mapped\", [48, 44]], [[127234, 127234], \"disallowed_STD3_mapped\", [49, 44]], [[127235, 127235], \"disallowed_STD3_mapped\", [50, 44]], [[127236, 127236], \"disallowed_STD3_mapped\", [51, 44]], [[127237, 127237], \"disallowed_STD3_mapped\", [52, 44]], [[127238, 127238], \"disallowed_STD3_mapped\", [53, 44]], [[127239, 127239], \"disallowed_STD3_mapped\", [54, 44]], [[127240, 127240], \"disallowed_STD3_mapped\", [55, 44]], [[127241, 127241], \"disallowed_STD3_mapped\", [56, 44]], [[127242, 127242], \"disallowed_STD3_mapped\", [57, 44]], [[127243, 127244], \"valid\", [], \"NV8\"], [[127245, 127247], \"disallowed\"], [[127248, 127248], \"disallowed_STD3_mapped\", [40, 97, 41]], [[127249, 127249], \"disallowed_STD3_mapped\", [40, 98, 41]], [[127250, 127250], \"disallowed_STD3_mapped\", [40, 99, 41]], [[127251, 127251], \"disallowed_STD3_mapped\", [40, 100, 41]], [[127252, 127252], \"disallowed_STD3_mapped\", [40, 101, 41]], [[127253, 127253], \"disallowed_STD3_mapped\", [40, 102, 41]], [[127254, 127254], \"disallowed_STD3_mapped\", [40, 103, 41]], [[127255, 127255], \"disallowed_STD3_mapped\", [40, 104, 41]], [[127256, 127256], \"disallowed_STD3_mapped\", [40, 105, 41]], [[127257, 127257], \"disallowed_STD3_mapped\", [40, 106, 41]], [[127258, 127258], \"disallowed_STD3_mapped\", [40, 107, 41]], [[127259, 127259], \"disallowed_STD3_mapped\", [40, 108, 41]], [[127260, 127260], \"disallowed_STD3_mapped\", [40, 109, 41]], [[127261, 127261], \"disallowed_STD3_mapped\", [40, 110, 41]], [[127262, 127262], \"disallowed_STD3_mapped\", [40, 111, 41]], [[127263, 127263], \"disallowed_STD3_mapped\", [40, 112, 41]], [[127264, 127264], \"disallowed_STD3_mapped\", [40, 113, 41]], [[127265, 127265], \"disallowed_STD3_mapped\", [40, 114, 41]], [[127266, 127266], \"disallowed_STD3_mapped\", [40, 115, 41]], [[127267, 127267], \"disallowed_STD3_mapped\", [40, 116, 41]], [[127268, 127268], \"disallowed_STD3_mapped\", [40, 117, 41]], [[127269, 127269], \"disallowed_STD3_mapped\", [40, 118, 41]], [[127270, 127270], \"disallowed_STD3_mapped\", [40, 119, 41]], [[127271, 127271], \"disallowed_STD3_mapped\", [40, 120, 41]], [[127272, 127272], \"disallowed_STD3_mapped\", [40, 121, 41]], [[127273, 127273], \"disallowed_STD3_mapped\", [40, 122, 41]], [[127274, 127274], \"mapped\", [12308, 115, 12309]], [[127275, 127275], \"mapped\", [99]], [[127276, 127276], \"mapped\", [114]], [[127277, 127277], \"mapped\", [99, 100]], [[127278, 127278], \"mapped\", [119, 122]], [[127279, 127279], \"disallowed\"], [[127280, 127280], \"mapped\", [97]], [[127281, 127281], \"mapped\", [98]], [[127282, 127282], \"mapped\", [99]], [[127283, 127283], \"mapped\", [100]], [[127284, 127284], \"mapped\", [101]], [[127285, 127285], \"mapped\", [102]], [[127286, 127286], \"mapped\", [103]], [[127287, 127287], \"mapped\", [104]], [[127288, 127288], \"mapped\", [105]], [[127289, 127289], \"mapped\", [106]], [[127290, 127290], \"mapped\", [107]], [[127291, 127291], \"mapped\", [108]], [[127292, 127292], \"mapped\", [109]], [[127293, 127293], \"mapped\", [110]], [[127294, 127294], \"mapped\", [111]], [[127295, 127295], \"mapped\", [112]], [[127296, 127296], \"mapped\", [113]], [[127297, 127297], \"mapped\", [114]], [[127298, 127298], \"mapped\", [115]], [[127299, 127299], \"mapped\", [116]], [[127300, 127300], \"mapped\", [117]], [[127301, 127301], \"mapped\", [118]], [[127302, 127302], \"mapped\", [119]], [[127303, 127303], \"mapped\", [120]], [[127304, 127304], \"mapped\", [121]], [[127305, 127305], \"mapped\", [122]], [[127306, 127306], \"mapped\", [104, 118]], [[127307, 127307], \"mapped\", [109, 118]], [[127308, 127308], \"mapped\", [115, 100]], [[127309, 127309], \"mapped\", [115, 115]], [[127310, 127310], \"mapped\", [112, 112, 118]], [[127311, 127311], \"mapped\", [119, 99]], [[127312, 127318], \"valid\", [], \"NV8\"], [[127319, 127319], \"valid\", [], \"NV8\"], [[127320, 127326], \"valid\", [], \"NV8\"], [[127327, 127327], \"valid\", [], \"NV8\"], [[127328, 127337], \"valid\", [], \"NV8\"], [[127338, 127338], \"mapped\", [109, 99]], [[127339, 127339], \"mapped\", [109, 100]], [[127340, 127343], \"disallowed\"], [[127344, 127352], \"valid\", [], \"NV8\"], [[127353, 127353], \"valid\", [], \"NV8\"], [[127354, 127354], \"valid\", [], \"NV8\"], [[127355, 127356], \"valid\", [], \"NV8\"], [[127357, 127358], \"valid\", [], \"NV8\"], [[127359, 127359], \"valid\", [], \"NV8\"], [[127360, 127369], \"valid\", [], \"NV8\"], [[127370, 127373], \"valid\", [], \"NV8\"], [[127374, 127375], \"valid\", [], \"NV8\"], [[127376, 127376], \"mapped\", [100, 106]], [[127377, 127386], \"valid\", [], \"NV8\"], [[127387, 127461], \"disallowed\"], [[127462, 127487], \"valid\", [], \"NV8\"], [[127488, 127488], \"mapped\", [12411, 12363]], [[127489, 127489], \"mapped\", [12467, 12467]], [[127490, 127490], \"mapped\", [12469]], [[127491, 127503], \"disallowed\"], [[127504, 127504], \"mapped\", [25163]], [[127505, 127505], \"mapped\", [23383]], [[127506, 127506], \"mapped\", [21452]], [[127507, 127507], \"mapped\", [12487]], [[127508, 127508], \"mapped\", [20108]], [[127509, 127509], \"mapped\", [22810]], [[127510, 127510], \"mapped\", [35299]], [[127511, 127511], \"mapped\", [22825]], [[127512, 127512], \"mapped\", [20132]], [[127513, 127513], \"mapped\", [26144]], [[127514, 127514], \"mapped\", [28961]], [[127515, 127515], \"mapped\", [26009]], [[127516, 127516], \"mapped\", [21069]], [[127517, 127517], \"mapped\", [24460]], [[127518, 127518], \"mapped\", [20877]], [[127519, 127519], \"mapped\", [26032]], [[127520, 127520], \"mapped\", [21021]], [[127521, 127521], \"mapped\", [32066]], [[127522, 127522], \"mapped\", [29983]], [[127523, 127523], \"mapped\", [36009]], [[127524, 127524], \"mapped\", [22768]], [[127525, 127525], \"mapped\", [21561]], [[127526, 127526], \"mapped\", [28436]], [[127527, 127527], \"mapped\", [25237]], [[127528, 127528], \"mapped\", [25429]], [[127529, 127529], \"mapped\", [19968]], [[127530, 127530], \"mapped\", [19977]], [[127531, 127531], \"mapped\", [36938]], [[127532, 127532], \"mapped\", [24038]], [[127533, 127533], \"mapped\", [20013]], [[127534, 127534], \"mapped\", [21491]], [[127535, 127535], \"mapped\", [25351]], [[127536, 127536], \"mapped\", [36208]], [[127537, 127537], \"mapped\", [25171]], [[127538, 127538], \"mapped\", [31105]], [[127539, 127539], \"mapped\", [31354]], [[127540, 127540], \"mapped\", [21512]], [[127541, 127541], \"mapped\", [28288]], [[127542, 127542], \"mapped\", [26377]], [[127543, 127543], \"mapped\", [26376]], [[127544, 127544], \"mapped\", [30003]], [[127545, 127545], \"mapped\", [21106]], [[127546, 127546], \"mapped\", [21942]], [[127547, 127551], \"disallowed\"], [[127552, 127552], \"mapped\", [12308, 26412, 12309]], [[127553, 127553], \"mapped\", [12308, 19977, 12309]], [[127554, 127554], \"mapped\", [12308, 20108, 12309]], [[127555, 127555], \"mapped\", [12308, 23433, 12309]], [[127556, 127556], \"mapped\", [12308, 28857, 12309]], [[127557, 127557], \"mapped\", [12308, 25171, 12309]], [[127558, 127558], \"mapped\", [12308, 30423, 12309]], [[127559, 127559], \"mapped\", [12308, 21213, 12309]], [[127560, 127560], \"mapped\", [12308, 25943, 12309]], [[127561, 127567], \"disallowed\"], [[127568, 127568], \"mapped\", [24471]], [[127569, 127569], \"mapped\", [21487]], [[127570, 127743], \"disallowed\"], [[127744, 127776], \"valid\", [], \"NV8\"], [[127777, 127788], \"valid\", [], \"NV8\"], [[127789, 127791], \"valid\", [], \"NV8\"], [[127792, 127797], \"valid\", [], \"NV8\"], [[127798, 127798], \"valid\", [], \"NV8\"], [[127799, 127868], \"valid\", [], \"NV8\"], [[127869, 127869], \"valid\", [], \"NV8\"], [[127870, 127871], \"valid\", [], \"NV8\"], [[127872, 127891], \"valid\", [], \"NV8\"], [[127892, 127903], \"valid\", [], \"NV8\"], [[127904, 127940], \"valid\", [], \"NV8\"], [[127941, 127941], \"valid\", [], \"NV8\"], [[127942, 127946], \"valid\", [], \"NV8\"], [[127947, 127950], \"valid\", [], \"NV8\"], [[127951, 127955], \"valid\", [], \"NV8\"], [[127956, 127967], \"valid\", [], \"NV8\"], [[127968, 127984], \"valid\", [], \"NV8\"], [[127985, 127991], \"valid\", [], \"NV8\"], [[127992, 127999], \"valid\", [], \"NV8\"], [[128000, 128062], \"valid\", [], \"NV8\"], [[128063, 128063], \"valid\", [], \"NV8\"], [[128064, 128064], \"valid\", [], \"NV8\"], [[128065, 128065], \"valid\", [], \"NV8\"], [[128066, 128247], \"valid\", [], \"NV8\"], [[128248, 128248], \"valid\", [], \"NV8\"], [[128249, 128252], \"valid\", [], \"NV8\"], [[128253, 128254], \"valid\", [], \"NV8\"], [[128255, 128255], \"valid\", [], \"NV8\"], [[128256, 128317], \"valid\", [], \"NV8\"], [[128318, 128319], \"valid\", [], \"NV8\"], [[128320, 128323], \"valid\", [], \"NV8\"], [[128324, 128330], \"valid\", [], \"NV8\"], [[128331, 128335], \"valid\", [], \"NV8\"], [[128336, 128359], \"valid\", [], \"NV8\"], [[128360, 128377], \"valid\", [], \"NV8\"], [[128378, 128378], \"disallowed\"], [[128379, 128419], \"valid\", [], \"NV8\"], [[128420, 128420], \"disallowed\"], [[128421, 128506], \"valid\", [], \"NV8\"], [[128507, 128511], \"valid\", [], \"NV8\"], [[128512, 128512], \"valid\", [], \"NV8\"], [[128513, 128528], \"valid\", [], \"NV8\"], [[128529, 128529], \"valid\", [], \"NV8\"], [[128530, 128532], \"valid\", [], \"NV8\"], [[128533, 128533], \"valid\", [], \"NV8\"], [[128534, 128534], \"valid\", [], \"NV8\"], [[128535, 128535], \"valid\", [], \"NV8\"], [[128536, 128536], \"valid\", [], \"NV8\"], [[128537, 128537], \"valid\", [], \"NV8\"], [[128538, 128538], \"valid\", [], \"NV8\"], [[128539, 128539], \"valid\", [], \"NV8\"], [[128540, 128542], \"valid\", [], \"NV8\"], [[128543, 128543], \"valid\", [], \"NV8\"], [[128544, 128549], \"valid\", [], \"NV8\"], [[128550, 128551], \"valid\", [], \"NV8\"], [[128552, 128555], \"valid\", [], \"NV8\"], [[128556, 128556], \"valid\", [], \"NV8\"], [[128557, 128557], \"valid\", [], \"NV8\"], [[128558, 128559], \"valid\", [], \"NV8\"], [[128560, 128563], \"valid\", [], \"NV8\"], [[128564, 128564], \"valid\", [], \"NV8\"], [[128565, 128576], \"valid\", [], \"NV8\"], [[128577, 128578], \"valid\", [], \"NV8\"], [[128579, 128580], \"valid\", [], \"NV8\"], [[128581, 128591], \"valid\", [], \"NV8\"], [[128592, 128639], \"valid\", [], \"NV8\"], [[128640, 128709], \"valid\", [], \"NV8\"], [[128710, 128719], \"valid\", [], \"NV8\"], [[128720, 128720], \"valid\", [], \"NV8\"], [[128721, 128735], \"disallowed\"], [[128736, 128748], \"valid\", [], \"NV8\"], [[128749, 128751], \"disallowed\"], [[128752, 128755], \"valid\", [], \"NV8\"], [[128756, 128767], \"disallowed\"], [[128768, 128883], \"valid\", [], \"NV8\"], [[128884, 128895], \"disallowed\"], [[128896, 128980], \"valid\", [], \"NV8\"], [[128981, 129023], \"disallowed\"], [[129024, 129035], \"valid\", [], \"NV8\"], [[129036, 129039], \"disallowed\"], [[129040, 129095], \"valid\", [], \"NV8\"], [[129096, 129103], \"disallowed\"], [[129104, 129113], \"valid\", [], \"NV8\"], [[129114, 129119], \"disallowed\"], [[129120, 129159], \"valid\", [], \"NV8\"], [[129160, 129167], \"disallowed\"], [[129168, 129197], \"valid\", [], \"NV8\"], [[129198, 129295], \"disallowed\"], [[129296, 129304], \"valid\", [], \"NV8\"], [[129305, 129407], \"disallowed\"], [[129408, 129412], \"valid\", [], \"NV8\"], [[129413, 129471], \"disallowed\"], [[129472, 129472], \"valid\", [], \"NV8\"], [[129473, 131069], \"disallowed\"], [[131070, 131071], \"disallowed\"], [[131072, 173782], \"valid\"], [[173783, 173823], \"disallowed\"], [[173824, 177972], \"valid\"], [[177973, 177983], \"disallowed\"], [[177984, 178205], \"valid\"], [[178206, 178207], \"disallowed\"], [[178208, 183969], \"valid\"], [[183970, 194559], \"disallowed\"], [[194560, 194560], \"mapped\", [20029]], [[194561, 194561], \"mapped\", [20024]], [[194562, 194562], \"mapped\", [20033]], [[194563, 194563], \"mapped\", [131362]], [[194564, 194564], \"mapped\", [20320]], [[194565, 194565], \"mapped\", [20398]], [[194566, 194566], \"mapped\", [20411]], [[194567, 194567], \"mapped\", [20482]], [[194568, 194568], \"mapped\", [20602]], [[194569, 194569], \"mapped\", [20633]], [[194570, 194570], \"mapped\", [20711]], [[194571, 194571], \"mapped\", [20687]], [[194572, 194572], \"mapped\", [13470]], [[194573, 194573], \"mapped\", [132666]], [[194574, 194574], \"mapped\", [20813]], [[194575, 194575], \"mapped\", [20820]], [[194576, 194576], \"mapped\", [20836]], [[194577, 194577], \"mapped\", [20855]], [[194578, 194578], \"mapped\", [132380]], [[194579, 194579], \"mapped\", [13497]], [[194580, 194580], \"mapped\", [20839]], [[194581, 194581], \"mapped\", [20877]], [[194582, 194582], \"mapped\", [132427]], [[194583, 194583], \"mapped\", [20887]], [[194584, 194584], \"mapped\", [20900]], [[194585, 194585], \"mapped\", [20172]], [[194586, 194586], \"mapped\", [20908]], [[194587, 194587], \"mapped\", [20917]], [[194588, 194588], \"mapped\", [168415]], [[194589, 194589], \"mapped\", [20981]], [[194590, 194590], \"mapped\", [20995]], [[194591, 194591], \"mapped\", [13535]], [[194592, 194592], \"mapped\", [21051]], [[194593, 194593], \"mapped\", [21062]], [[194594, 194594], \"mapped\", [21106]], [[194595, 194595], \"mapped\", [21111]], [[194596, 194596], \"mapped\", [13589]], [[194597, 194597], \"mapped\", [21191]], [[194598, 194598], \"mapped\", [21193]], [[194599, 194599], \"mapped\", [21220]], [[194600, 194600], \"mapped\", [21242]], [[194601, 194601], \"mapped\", [21253]], [[194602, 194602], \"mapped\", [21254]], [[194603, 194603], \"mapped\", [21271]], [[194604, 194604], \"mapped\", [21321]], [[194605, 194605], \"mapped\", [21329]], [[194606, 194606], \"mapped\", [21338]], [[194607, 194607], \"mapped\", [21363]], [[194608, 194608], \"mapped\", [21373]], [[194609, 194611], \"mapped\", [21375]], [[194612, 194612], \"mapped\", [133676]], [[194613, 194613], \"mapped\", [28784]], [[194614, 194614], \"mapped\", [21450]], [[194615, 194615], \"mapped\", [21471]], [[194616, 194616], \"mapped\", [133987]], [[194617, 194617], \"mapped\", [21483]], [[194618, 194618], \"mapped\", [21489]], [[194619, 194619], \"mapped\", [21510]], [[194620, 194620], \"mapped\", [21662]], [[194621, 194621], \"mapped\", [21560]], [[194622, 194622], \"mapped\", [21576]], [[194623, 194623], \"mapped\", [21608]], [[194624, 194624], \"mapped\", [21666]], [[194625, 194625], \"mapped\", [21750]], [[194626, 194626], \"mapped\", [21776]], [[194627, 194627], \"mapped\", [21843]], [[194628, 194628], \"mapped\", [21859]], [[194629, 194630], \"mapped\", [21892]], [[194631, 194631], \"mapped\", [21913]], [[194632, 194632], \"mapped\", [21931]], [[194633, 194633], \"mapped\", [21939]], [[194634, 194634], \"mapped\", [21954]], [[194635, 194635], \"mapped\", [22294]], [[194636, 194636], \"mapped\", [22022]], [[194637, 194637], \"mapped\", [22295]], [[194638, 194638], \"mapped\", [22097]], [[194639, 194639], \"mapped\", [22132]], [[194640, 194640], \"mapped\", [20999]], [[194641, 194641], \"mapped\", [22766]], [[194642, 194642], \"mapped\", [22478]], [[194643, 194643], \"mapped\", [22516]], [[194644, 194644], \"mapped\", [22541]], [[194645, 194645], \"mapped\", [22411]], [[194646, 194646], \"mapped\", [22578]], [[194647, 194647], \"mapped\", [22577]], [[194648, 194648], \"mapped\", [22700]], [[194649, 194649], \"mapped\", [136420]], [[194650, 194650], \"mapped\", [22770]], [[194651, 194651], \"mapped\", [22775]], [[194652, 194652], \"mapped\", [22790]], [[194653, 194653], \"mapped\", [22810]], [[194654, 194654], \"mapped\", [22818]], [[194655, 194655], \"mapped\", [22882]], [[194656, 194656], \"mapped\", [136872]], [[194657, 194657], \"mapped\", [136938]], [[194658, 194658], \"mapped\", [23020]], [[194659, 194659], \"mapped\", [23067]], [[194660, 194660], \"mapped\", [23079]], [[194661, 194661], \"mapped\", [23000]], [[194662, 194662], \"mapped\", [23142]], [[194663, 194663], \"mapped\", [14062]], [[194664, 194664], \"disallowed\"], [[194665, 194665], \"mapped\", [23304]], [[194666, 194667], \"mapped\", [23358]], [[194668, 194668], \"mapped\", [137672]], [[194669, 194669], \"mapped\", [23491]], [[194670, 194670], \"mapped\", [23512]], [[194671, 194671], \"mapped\", [23527]], [[194672, 194672], \"mapped\", [23539]], [[194673, 194673], \"mapped\", [138008]], [[194674, 194674], \"mapped\", [23551]], [[194675, 194675], \"mapped\", [23558]], [[194676, 194676], \"disallowed\"], [[194677, 194677], \"mapped\", [23586]], [[194678, 194678], \"mapped\", [14209]], [[194679, 194679], \"mapped\", [23648]], [[194680, 194680], \"mapped\", [23662]], [[194681, 194681], \"mapped\", [23744]], [[194682, 194682], \"mapped\", [23693]], [[194683, 194683], \"mapped\", [138724]], [[194684, 194684], \"mapped\", [23875]], [[194685, 194685], \"mapped\", [138726]], [[194686, 194686], \"mapped\", [23918]], [[194687, 194687], \"mapped\", [23915]], [[194688, 194688], \"mapped\", [23932]], [[194689, 194689], \"mapped\", [24033]], [[194690, 194690], \"mapped\", [24034]], [[194691, 194691], \"mapped\", [14383]], [[194692, 194692], \"mapped\", [24061]], [[194693, 194693], \"mapped\", [24104]], [[194694, 194694], \"mapped\", [24125]], [[194695, 194695], \"mapped\", [24169]], [[194696, 194696], \"mapped\", [14434]], [[194697, 194697], \"mapped\", [139651]], [[194698, 194698], \"mapped\", [14460]], [[194699, 194699], \"mapped\", [24240]], [[194700, 194700], \"mapped\", [24243]], [[194701, 194701], \"mapped\", [24246]], [[194702, 194702], \"mapped\", [24266]], [[194703, 194703], \"mapped\", [172946]], [[194704, 194704], \"mapped\", [24318]], [[194705, 194706], \"mapped\", [140081]], [[194707, 194707], \"mapped\", [33281]], [[194708, 194709], \"mapped\", [24354]], [[194710, 194710], \"mapped\", [14535]], [[194711, 194711], \"mapped\", [144056]], [[194712, 194712], \"mapped\", [156122]], [[194713, 194713], \"mapped\", [24418]], [[194714, 194714], \"mapped\", [24427]], [[194715, 194715], \"mapped\", [14563]], [[194716, 194716], \"mapped\", [24474]], [[194717, 194717], \"mapped\", [24525]], [[194718, 194718], \"mapped\", [24535]], [[194719, 194719], \"mapped\", [24569]], [[194720, 194720], \"mapped\", [24705]], [[194721, 194721], \"mapped\", [14650]], [[194722, 194722], \"mapped\", [14620]], [[194723, 194723], \"mapped\", [24724]], [[194724, 194724], \"mapped\", [141012]], [[194725, 194725], \"mapped\", [24775]], [[194726, 194726], \"mapped\", [24904]], [[194727, 194727], \"mapped\", [24908]], [[194728, 194728], \"mapped\", [24910]], [[194729, 194729], \"mapped\", [24908]], [[194730, 194730], \"mapped\", [24954]], [[194731, 194731], \"mapped\", [24974]], [[194732, 194732], \"mapped\", [25010]], [[194733, 194733], \"mapped\", [24996]], [[194734, 194734], \"mapped\", [25007]], [[194735, 194735], \"mapped\", [25054]], [[194736, 194736], \"mapped\", [25074]], [[194737, 194737], \"mapped\", [25078]], [[194738, 194738], \"mapped\", [25104]], [[194739, 194739], \"mapped\", [25115]], [[194740, 194740], \"mapped\", [25181]], [[194741, 194741], \"mapped\", [25265]], [[194742, 194742], \"mapped\", [25300]], [[194743, 194743], \"mapped\", [25424]], [[194744, 194744], \"mapped\", [142092]], [[194745, 194745], \"mapped\", [25405]], [[194746, 194746], \"mapped\", [25340]], [[194747, 194747], \"mapped\", [25448]], [[194748, 194748], \"mapped\", [25475]], [[194749, 194749], \"mapped\", [25572]], [[194750, 194750], \"mapped\", [142321]], [[194751, 194751], \"mapped\", [25634]], [[194752, 194752], \"mapped\", [25541]], [[194753, 194753], \"mapped\", [25513]], [[194754, 194754], \"mapped\", [14894]], [[194755, 194755], \"mapped\", [25705]], [[194756, 194756], \"mapped\", [25726]], [[194757, 194757], \"mapped\", [25757]], [[194758, 194758], \"mapped\", [25719]], [[194759, 194759], \"mapped\", [14956]], [[194760, 194760], \"mapped\", [25935]], [[194761, 194761], \"mapped\", [25964]], [[194762, 194762], \"mapped\", [143370]], [[194763, 194763], \"mapped\", [26083]], [[194764, 194764], \"mapped\", [26360]], [[194765, 194765], \"mapped\", [26185]], [[194766, 194766], \"mapped\", [15129]], [[194767, 194767], \"mapped\", [26257]], [[194768, 194768], \"mapped\", [15112]], [[194769, 194769], \"mapped\", [15076]], [[194770, 194770], \"mapped\", [20882]], [[194771, 194771], \"mapped\", [20885]], [[194772, 194772], \"mapped\", [26368]], [[194773, 194773], \"mapped\", [26268]], [[194774, 194774], \"mapped\", [32941]], [[194775, 194775], \"mapped\", [17369]], [[194776, 194776], \"mapped\", [26391]], [[194777, 194777], \"mapped\", [26395]], [[194778, 194778], \"mapped\", [26401]], [[194779, 194779], \"mapped\", [26462]], [[194780, 194780], \"mapped\", [26451]], [[194781, 194781], \"mapped\", [144323]], [[194782, 194782], \"mapped\", [15177]], [[194783, 194783], \"mapped\", [26618]], [[194784, 194784], \"mapped\", [26501]], [[194785, 194785], \"mapped\", [26706]], [[194786, 194786], \"mapped\", [26757]], [[194787, 194787], \"mapped\", [144493]], [[194788, 194788], \"mapped\", [26766]], [[194789, 194789], \"mapped\", [26655]], [[194790, 194790], \"mapped\", [26900]], [[194791, 194791], \"mapped\", [15261]], [[194792, 194792], \"mapped\", [26946]], [[194793, 194793], \"mapped\", [27043]], [[194794, 194794], \"mapped\", [27114]], [[194795, 194795], \"mapped\", [27304]], [[194796, 194796], \"mapped\", [145059]], [[194797, 194797], \"mapped\", [27355]], [[194798, 194798], \"mapped\", [15384]], [[194799, 194799], \"mapped\", [27425]], [[194800, 194800], \"mapped\", [145575]], [[194801, 194801], \"mapped\", [27476]], [[194802, 194802], \"mapped\", [15438]], [[194803, 194803], \"mapped\", [27506]], [[194804, 194804], \"mapped\", [27551]], [[194805, 194805], \"mapped\", [27578]], [[194806, 194806], \"mapped\", [27579]], [[194807, 194807], \"mapped\", [146061]], [[194808, 194808], \"mapped\", [138507]], [[194809, 194809], \"mapped\", [146170]], [[194810, 194810], \"mapped\", [27726]], [[194811, 194811], \"mapped\", [146620]], [[194812, 194812], \"mapped\", [27839]], [[194813, 194813], \"mapped\", [27853]], [[194814, 194814], \"mapped\", [27751]], [[194815, 194815], \"mapped\", [27926]], [[194816, 194816], \"mapped\", [27966]], [[194817, 194817], \"mapped\", [28023]], [[194818, 194818], \"mapped\", [27969]], [[194819, 194819], \"mapped\", [28009]], [[194820, 194820], \"mapped\", [28024]], [[194821, 194821], \"mapped\", [28037]], [[194822, 194822], \"mapped\", [146718]], [[194823, 194823], \"mapped\", [27956]], [[194824, 194824], \"mapped\", [28207]], [[194825, 194825], \"mapped\", [28270]], [[194826, 194826], \"mapped\", [15667]], [[194827, 194827], \"mapped\", [28363]], [[194828, 194828], \"mapped\", [28359]], [[194829, 194829], \"mapped\", [147153]], [[194830, 194830], \"mapped\", [28153]], [[194831, 194831], \"mapped\", [28526]], [[194832, 194832], \"mapped\", [147294]], [[194833, 194833], \"mapped\", [147342]], [[194834, 194834], \"mapped\", [28614]], [[194835, 194835], \"mapped\", [28729]], [[194836, 194836], \"mapped\", [28702]], [[194837, 194837], \"mapped\", [28699]], [[194838, 194838], \"mapped\", [15766]], [[194839, 194839], \"mapped\", [28746]], [[194840, 194840], \"mapped\", [28797]], [[194841, 194841], \"mapped\", [28791]], [[194842, 194842], \"mapped\", [28845]], [[194843, 194843], \"mapped\", [132389]], [[194844, 194844], \"mapped\", [28997]], [[194845, 194845], \"mapped\", [148067]], [[194846, 194846], \"mapped\", [29084]], [[194847, 194847], \"disallowed\"], [[194848, 194848], \"mapped\", [29224]], [[194849, 194849], \"mapped\", [29237]], [[194850, 194850], \"mapped\", [29264]], [[194851, 194851], \"mapped\", [149000]], [[194852, 194852], \"mapped\", [29312]], [[194853, 194853], \"mapped\", [29333]], [[194854, 194854], \"mapped\", [149301]], [[194855, 194855], \"mapped\", [149524]], [[194856, 194856], \"mapped\", [29562]], [[194857, 194857], \"mapped\", [29579]], [[194858, 194858], \"mapped\", [16044]], [[194859, 194859], \"mapped\", [29605]], [[194860, 194861], \"mapped\", [16056]], [[194862, 194862], \"mapped\", [29767]], [[194863, 194863], \"mapped\", [29788]], [[194864, 194864], \"mapped\", [29809]], [[194865, 194865], \"mapped\", [29829]], [[194866, 194866], \"mapped\", [29898]], [[194867, 194867], \"mapped\", [16155]], [[194868, 194868], \"mapped\", [29988]], [[194869, 194869], \"mapped\", [150582]], [[194870, 194870], \"mapped\", [30014]], [[194871, 194871], \"mapped\", [150674]], [[194872, 194872], \"mapped\", [30064]], [[194873, 194873], \"mapped\", [139679]], [[194874, 194874], \"mapped\", [30224]], [[194875, 194875], \"mapped\", [151457]], [[194876, 194876], \"mapped\", [151480]], [[194877, 194877], \"mapped\", [151620]], [[194878, 194878], \"mapped\", [16380]], [[194879, 194879], \"mapped\", [16392]], [[194880, 194880], \"mapped\", [30452]], [[194881, 194881], \"mapped\", [151795]], [[194882, 194882], \"mapped\", [151794]], [[194883, 194883], \"mapped\", [151833]], [[194884, 194884], \"mapped\", [151859]], [[194885, 194885], \"mapped\", [30494]], [[194886, 194887], \"mapped\", [30495]], [[194888, 194888], \"mapped\", [30538]], [[194889, 194889], \"mapped\", [16441]], [[194890, 194890], \"mapped\", [30603]], [[194891, 194891], \"mapped\", [16454]], [[194892, 194892], \"mapped\", [16534]], [[194893, 194893], \"mapped\", [152605]], [[194894, 194894], \"mapped\", [30798]], [[194895, 194895], \"mapped\", [30860]], [[194896, 194896], \"mapped\", [30924]], [[194897, 194897], \"mapped\", [16611]], [[194898, 194898], \"mapped\", [153126]], [[194899, 194899], \"mapped\", [31062]], [[194900, 194900], \"mapped\", [153242]], [[194901, 194901], \"mapped\", [153285]], [[194902, 194902], \"mapped\", [31119]], [[194903, 194903], \"mapped\", [31211]], [[194904, 194904], \"mapped\", [16687]], [[194905, 194905], \"mapped\", [31296]], [[194906, 194906], \"mapped\", [31306]], [[194907, 194907], \"mapped\", [31311]], [[194908, 194908], \"mapped\", [153980]], [[194909, 194910], \"mapped\", [154279]], [[194911, 194911], \"disallowed\"], [[194912, 194912], \"mapped\", [16898]], [[194913, 194913], \"mapped\", [154539]], [[194914, 194914], \"mapped\", [31686]], [[194915, 194915], \"mapped\", [31689]], [[194916, 194916], \"mapped\", [16935]], [[194917, 194917], \"mapped\", [154752]], [[194918, 194918], \"mapped\", [31954]], [[194919, 194919], \"mapped\", [17056]], [[194920, 194920], \"mapped\", [31976]], [[194921, 194921], \"mapped\", [31971]], [[194922, 194922], \"mapped\", [32000]], [[194923, 194923], \"mapped\", [155526]], [[194924, 194924], \"mapped\", [32099]], [[194925, 194925], \"mapped\", [17153]], [[194926, 194926], \"mapped\", [32199]], [[194927, 194927], \"mapped\", [32258]], [[194928, 194928], \"mapped\", [32325]], [[194929, 194929], \"mapped\", [17204]], [[194930, 194930], \"mapped\", [156200]], [[194931, 194931], \"mapped\", [156231]], [[194932, 194932], \"mapped\", [17241]], [[194933, 194933], \"mapped\", [156377]], [[194934, 194934], \"mapped\", [32634]], [[194935, 194935], \"mapped\", [156478]], [[194936, 194936], \"mapped\", [32661]], [[194937, 194937], \"mapped\", [32762]], [[194938, 194938], \"mapped\", [32773]], [[194939, 194939], \"mapped\", [156890]], [[194940, 194940], \"mapped\", [156963]], [[194941, 194941], \"mapped\", [32864]], [[194942, 194942], \"mapped\", [157096]], [[194943, 194943], \"mapped\", [32880]], [[194944, 194944], \"mapped\", [144223]], [[194945, 194945], \"mapped\", [17365]], [[194946, 194946], \"mapped\", [32946]], [[194947, 194947], \"mapped\", [33027]], [[194948, 194948], \"mapped\", [17419]], [[194949, 194949], \"mapped\", [33086]], [[194950, 194950], \"mapped\", [23221]], [[194951, 194951], \"mapped\", [157607]], [[194952, 194952], \"mapped\", [157621]], [[194953, 194953], \"mapped\", [144275]], [[194954, 194954], \"mapped\", [144284]], [[194955, 194955], \"mapped\", [33281]], [[194956, 194956], \"mapped\", [33284]], [[194957, 194957], \"mapped\", [36766]], [[194958, 194958], \"mapped\", [17515]], [[194959, 194959], \"mapped\", [33425]], [[194960, 194960], \"mapped\", [33419]], [[194961, 194961], \"mapped\", [33437]], [[194962, 194962], \"mapped\", [21171]], [[194963, 194963], \"mapped\", [33457]], [[194964, 194964], \"mapped\", [33459]], [[194965, 194965], \"mapped\", [33469]], [[194966, 194966], \"mapped\", [33510]], [[194967, 194967], \"mapped\", [158524]], [[194968, 194968], \"mapped\", [33509]], [[194969, 194969], \"mapped\", [33565]], [[194970, 194970], \"mapped\", [33635]], [[194971, 194971], \"mapped\", [33709]], [[194972, 194972], \"mapped\", [33571]], [[194973, 194973], \"mapped\", [33725]], [[194974, 194974], \"mapped\", [33767]], [[194975, 194975], \"mapped\", [33879]], [[194976, 194976], \"mapped\", [33619]], [[194977, 194977], \"mapped\", [33738]], [[194978, 194978], \"mapped\", [33740]], [[194979, 194979], \"mapped\", [33756]], [[194980, 194980], \"mapped\", [158774]], [[194981, 194981], \"mapped\", [159083]], [[194982, 194982], \"mapped\", [158933]], [[194983, 194983], \"mapped\", [17707]], [[194984, 194984], \"mapped\", [34033]], [[194985, 194985], \"mapped\", [34035]], [[194986, 194986], \"mapped\", [34070]], [[194987, 194987], \"mapped\", [160714]], [[194988, 194988], \"mapped\", [34148]], [[194989, 194989], \"mapped\", [159532]], [[194990, 194990], \"mapped\", [17757]], [[194991, 194991], \"mapped\", [17761]], [[194992, 194992], \"mapped\", [159665]], [[194993, 194993], \"mapped\", [159954]], [[194994, 194994], \"mapped\", [17771]], [[194995, 194995], \"mapped\", [34384]], [[194996, 194996], \"mapped\", [34396]], [[194997, 194997], \"mapped\", [34407]], [[194998, 194998], \"mapped\", [34409]], [[194999, 194999], \"mapped\", [34473]], [[195000, 195000], \"mapped\", [34440]], [[195001, 195001], \"mapped\", [34574]], [[195002, 195002], \"mapped\", [34530]], [[195003, 195003], \"mapped\", [34681]], [[195004, 195004], \"mapped\", [34600]], [[195005, 195005], \"mapped\", [34667]], [[195006, 195006], \"mapped\", [34694]], [[195007, 195007], \"disallowed\"], [[195008, 195008], \"mapped\", [34785]], [[195009, 195009], \"mapped\", [34817]], [[195010, 195010], \"mapped\", [17913]], [[195011, 195011], \"mapped\", [34912]], [[195012, 195012], \"mapped\", [34915]], [[195013, 195013], \"mapped\", [161383]], [[195014, 195014], \"mapped\", [35031]], [[195015, 195015], \"mapped\", [35038]], [[195016, 195016], \"mapped\", [17973]], [[195017, 195017], \"mapped\", [35066]], [[195018, 195018], \"mapped\", [13499]], [[195019, 195019], \"mapped\", [161966]], [[195020, 195020], \"mapped\", [162150]], [[195021, 195021], \"mapped\", [18110]], [[195022, 195022], \"mapped\", [18119]], [[195023, 195023], \"mapped\", [35488]], [[195024, 195024], \"mapped\", [35565]], [[195025, 195025], \"mapped\", [35722]], [[195026, 195026], \"mapped\", [35925]], [[195027, 195027], \"mapped\", [162984]], [[195028, 195028], \"mapped\", [36011]], [[195029, 195029], \"mapped\", [36033]], [[195030, 195030], \"mapped\", [36123]], [[195031, 195031], \"mapped\", [36215]], [[195032, 195032], \"mapped\", [163631]], [[195033, 195033], \"mapped\", [133124]], [[195034, 195034], \"mapped\", [36299]], [[195035, 195035], \"mapped\", [36284]], [[195036, 195036], \"mapped\", [36336]], [[195037, 195037], \"mapped\", [133342]], [[195038, 195038], \"mapped\", [36564]], [[195039, 195039], \"mapped\", [36664]], [[195040, 195040], \"mapped\", [165330]], [[195041, 195041], \"mapped\", [165357]], [[195042, 195042], \"mapped\", [37012]], [[195043, 195043], \"mapped\", [37105]], [[195044, 195044], \"mapped\", [37137]], [[195045, 195045], \"mapped\", [165678]], [[195046, 195046], \"mapped\", [37147]], [[195047, 195047], \"mapped\", [37432]], [[195048, 195048], \"mapped\", [37591]], [[195049, 195049], \"mapped\", [37592]], [[195050, 195050], \"mapped\", [37500]], [[195051, 195051], \"mapped\", [37881]], [[195052, 195052], \"mapped\", [37909]], [[195053, 195053], \"mapped\", [166906]], [[195054, 195054], \"mapped\", [38283]], [[195055, 195055], \"mapped\", [18837]], [[195056, 195056], \"mapped\", [38327]], [[195057, 195057], \"mapped\", [167287]], [[195058, 195058], \"mapped\", [18918]], [[195059, 195059], \"mapped\", [38595]], [[195060, 195060], \"mapped\", [23986]], [[195061, 195061], \"mapped\", [38691]], [[195062, 195062], \"mapped\", [168261]], [[195063, 195063], \"mapped\", [168474]], [[195064, 195064], \"mapped\", [19054]], [[195065, 195065], \"mapped\", [19062]], [[195066, 195066], \"mapped\", [38880]], [[195067, 195067], \"mapped\", [168970]], [[195068, 195068], \"mapped\", [19122]], [[195069, 195069], \"mapped\", [169110]], [[195070, 195071], \"mapped\", [38923]], [[195072, 195072], \"mapped\", [38953]], [[195073, 195073], \"mapped\", [169398]], [[195074, 195074], \"mapped\", [39138]], [[195075, 195075], \"mapped\", [19251]], [[195076, 195076], \"mapped\", [39209]], [[195077, 195077], \"mapped\", [39335]], [[195078, 195078], \"mapped\", [39362]], [[195079, 195079], \"mapped\", [39422]], [[195080, 195080], \"mapped\", [19406]], [[195081, 195081], \"mapped\", [170800]], [[195082, 195082], \"mapped\", [39698]], [[195083, 195083], \"mapped\", [40000]], [[195084, 195084], \"mapped\", [40189]], [[195085, 195085], \"mapped\", [19662]], [[195086, 195086], \"mapped\", [19693]], [[195087, 195087], \"mapped\", [40295]], [[195088, 195088], \"mapped\", [172238]], [[195089, 195089], \"mapped\", [19704]], [[195090, 195090], \"mapped\", [172293]], [[195091, 195091], \"mapped\", [172558]], [[195092, 195092], \"mapped\", [172689]], [[195093, 195093], \"mapped\", [40635]], [[195094, 195094], \"mapped\", [19798]], [[195095, 195095], \"mapped\", [40697]], [[195096, 195096], \"mapped\", [40702]], [[195097, 195097], \"mapped\", [40709]], [[195098, 195098], \"mapped\", [40719]], [[195099, 195099], \"mapped\", [40726]], [[195100, 195100], \"mapped\", [40763]], [[195101, 195101], \"mapped\", [173568]], [[195102, 196605], \"disallowed\"], [[196606, 196607], \"disallowed\"], [[196608, 262141], \"disallowed\"], [[262142, 262143], \"disallowed\"], [[262144, 327677], \"disallowed\"], [[327678, 327679], \"disallowed\"], [[327680, 393213], \"disallowed\"], [[393214, 393215], \"disallowed\"], [[393216, 458749], \"disallowed\"], [[458750, 458751], \"disallowed\"], [[458752, 524285], \"disallowed\"], [[524286, 524287], \"disallowed\"], [[524288, 589821], \"disallowed\"], [[589822, 589823], \"disallowed\"], [[589824, 655357], \"disallowed\"], [[655358, 655359], \"disallowed\"], [[655360, 720893], \"disallowed\"], [[720894, 720895], \"disallowed\"], [[720896, 786429], \"disallowed\"], [[786430, 786431], \"disallowed\"], [[786432, 851965], \"disallowed\"], [[851966, 851967], \"disallowed\"], [[851968, 917501], \"disallowed\"], [[917502, 917503], \"disallowed\"], [[917504, 917504], \"disallowed\"], [[917505, 917505], \"disallowed\"], [[917506, 917535], \"disallowed\"], [[917536, 917631], \"disallowed\"], [[917632, 917759], \"disallowed\"], [[917760, 917999], \"ignored\"], [[918000, 983037], \"disallowed\"], [[983038, 983039], \"disallowed\"], [[983040, 1048573], \"disallowed\"], [[1048574, 1048575], \"disallowed\"], [[1048576, 1114109], \"disallowed\"], [[1114110, 1114111], \"disallowed\"]];\n});\n\n// node_modules/tr46/index.js\nvar require_tr46 = __commonJS((exports, module) => {\n  var normalize = function(str) {\n    return str.split(\"\\0\").map(function(s) {\n      return s.normalize(\"NFC\");\n    }).join(\"\\0\");\n  };\n  var findStatus = function(val) {\n    var start = 0;\n    var end = mappingTable.length - 1;\n    while (start <= end) {\n      var mid = Math.floor((start + end) / 2);\n      var target = mappingTable[mid];\n      if (target[0][0] <= val && target[0][1] >= val) {\n        return target;\n      } else if (target[0][0] > val) {\n        end = mid - 1;\n      } else {\n        start = mid + 1;\n      }\n    }\n    return null;\n  };\n  var countSymbols = function(string) {\n    return string.replace(regexAstralSymbols, \"_\").length;\n  };\n  var mapChars = function(domain_name, useSTD3, processing_option) {\n    var hasError = false;\n    var processed = \"\";\n    var len = countSymbols(domain_name);\n    for (var i = 0;i < len; ++i) {\n      var codePoint = domain_name.codePointAt(i);\n      var status = findStatus(codePoint);\n      switch (status[1]) {\n        case \"disallowed\":\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n          break;\n        case \"ignored\":\n          break;\n        case \"mapped\":\n          processed += String.fromCodePoint.apply(String, status[2]);\n          break;\n        case \"deviation\":\n          if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n            processed += String.fromCodePoint.apply(String, status[2]);\n          } else {\n            processed += String.fromCodePoint(codePoint);\n          }\n          break;\n        case \"valid\":\n          processed += String.fromCodePoint(codePoint);\n          break;\n        case \"disallowed_STD3_mapped\":\n          if (useSTD3) {\n            hasError = true;\n            processed += String.fromCodePoint(codePoint);\n          } else {\n            processed += String.fromCodePoint.apply(String, status[2]);\n          }\n          break;\n        case \"disallowed_STD3_valid\":\n          if (useSTD3) {\n            hasError = true;\n          }\n          processed += String.fromCodePoint(codePoint);\n          break;\n      }\n    }\n    return {\n      string: processed,\n      error: hasError\n    };\n  };\n  var validateLabel = function(label, processing_option) {\n    if (label.substr(0, 4) === \"xn--\") {\n      label = punycode.toUnicode(label);\n      processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n    }\n    var error = false;\n    if (normalize(label) !== label || label[3] === \"-\" && label[4] === \"-\" || label[0] === \"-\" || label[label.length - 1] === \"-\" || label.indexOf(\".\") !== -1 || label.search(combiningMarksRegex) === 0) {\n      error = true;\n    }\n    var len = countSymbols(label);\n    for (var i = 0;i < len; ++i) {\n      var status = findStatus(label.codePointAt(i));\n      if (processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\" || processing === PROCESSING_OPTIONS.NONTRANSITIONAL && status[1] !== \"valid\" && status[1] !== \"deviation\") {\n        error = true;\n        break;\n      }\n    }\n    return {\n      label,\n      error\n    };\n  };\n  var processing = function(domain_name, useSTD3, processing_option) {\n    var result = mapChars(domain_name, useSTD3, processing_option);\n    result.string = normalize(result.string);\n    var labels = result.string.split(\".\");\n    for (var i = 0;i < labels.length; ++i) {\n      try {\n        var validation = validateLabel(labels[i]);\n        labels[i] = validation.label;\n        result.error = result.error || validation.error;\n      } catch (e) {\n        result.error = true;\n      }\n    }\n    return {\n      string: labels.join(\".\"),\n      error: result.error\n    };\n  };\n  var punycode = __require(\"punycode\");\n  var mappingTable = require_mappingTable();\n  var PROCESSING_OPTIONS = {\n    TRANSITIONAL: 0,\n    NONTRANSITIONAL: 1\n  };\n  var regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n  exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n    var result = processing(domain_name, useSTD3, processing_option);\n    var labels = result.string.split(\".\");\n    labels = labels.map(function(l) {\n      try {\n        return punycode.toASCII(l);\n      } catch (e) {\n        result.error = true;\n        return l;\n      }\n    });\n    if (verifyDnsLength) {\n      var total = labels.slice(0, labels.length - 1).join(\".\").length;\n      if (total.length > 253 || total.length === 0) {\n        result.error = true;\n      }\n      for (var i = 0;i < labels.length; ++i) {\n        if (labels.length > 63 || labels.length === 0) {\n          result.error = true;\n          break;\n        }\n      }\n    }\n    if (result.error)\n      return null;\n    return labels.join(\".\");\n  };\n  exports.toUnicode = function(domain_name, useSTD3) {\n    var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n    return {\n      domain: result.string,\n      error: result.error\n    };\n  };\n  exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n});\n\n// node_modules/whatwg-url/lib/url-state-machine.js\nvar require_url_state_machine = __commonJS((exports, module) => {\n  var countSymbols = function(str) {\n    return punycode.ucs2.decode(str).length;\n  };\n  var at = function(input, idx) {\n    const c = input[idx];\n    return isNaN(c) ? undefined : String.fromCodePoint(c);\n  };\n  var isASCIIDigit = function(c) {\n    return c >= 48 && c <= 57;\n  };\n  var isASCIIAlpha = function(c) {\n    return c >= 65 && c <= 90 || c >= 97 && c <= 122;\n  };\n  var isASCIIAlphanumeric = function(c) {\n    return isASCIIAlpha(c) || isASCIIDigit(c);\n  };\n  var isASCIIHex = function(c) {\n    return isASCIIDigit(c) || c >= 65 && c <= 70 || c >= 97 && c <= 102;\n  };\n  var isSingleDot = function(buffer) {\n    return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\n  };\n  var isDoubleDot = function(buffer) {\n    buffer = buffer.toLowerCase();\n    return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\n  };\n  var isWindowsDriveLetterCodePoints = function(cp1, cp2) {\n    return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\n  };\n  var isWindowsDriveLetterString = function(string) {\n    return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\n  };\n  var isNormalizedWindowsDriveLetterString = function(string) {\n    return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\n  };\n  var containsForbiddenHostCodePoint = function(string) {\n    return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n  };\n  var containsForbiddenHostCodePointExcludingPercent = function(string) {\n    return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\n  };\n  var isSpecialScheme = function(scheme) {\n    return specialSchemes[scheme] !== undefined;\n  };\n  var isSpecial = function(url) {\n    return isSpecialScheme(url.scheme);\n  };\n  var defaultPort = function(scheme) {\n    return specialSchemes[scheme];\n  };\n  var percentEncode = function(c) {\n    let hex = c.toString(16).toUpperCase();\n    if (hex.length === 1) {\n      hex = \"0\" + hex;\n    }\n    return \"%\" + hex;\n  };\n  var utf8PercentEncode = function(c) {\n    const buf = new Buffer(c);\n    let str = \"\";\n    for (let i = 0;i < buf.length; ++i) {\n      str += percentEncode(buf[i]);\n    }\n    return str;\n  };\n  var utf8PercentDecode = function(str) {\n    const input = new Buffer(str);\n    const output = [];\n    for (let i = 0;i < input.length; ++i) {\n      if (input[i] !== 37) {\n        output.push(input[i]);\n      } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\n        output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\n        i += 2;\n      } else {\n        output.push(input[i]);\n      }\n    }\n    return new Buffer(output).toString();\n  };\n  var isC0ControlPercentEncode = function(c) {\n    return c <= 31 || c > 126;\n  };\n  var isPathPercentEncode = function(c) {\n    return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\n  };\n  var isUserinfoPercentEncode = function(c) {\n    return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\n  };\n  var percentEncodeChar = function(c, encodeSetPredicate) {\n    const cStr = String.fromCodePoint(c);\n    if (encodeSetPredicate(c)) {\n      return utf8PercentEncode(cStr);\n    }\n    return cStr;\n  };\n  var parseIPv4Number = function(input) {\n    let R = 10;\n    if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\n      input = input.substring(2);\n      R = 16;\n    } else if (input.length >= 2 && input.charAt(0) === \"0\") {\n      input = input.substring(1);\n      R = 8;\n    }\n    if (input === \"\") {\n      return 0;\n    }\n    const regex2 = R === 10 ? /[^0-9]/ : R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/;\n    if (regex2.test(input)) {\n      return failure;\n    }\n    return parseInt(input, R);\n  };\n  var parseIPv4 = function(input) {\n    const parts = input.split(\".\");\n    if (parts[parts.length - 1] === \"\") {\n      if (parts.length > 1) {\n        parts.pop();\n      }\n    }\n    if (parts.length > 4) {\n      return input;\n    }\n    const numbers = [];\n    for (const part of parts) {\n      if (part === \"\") {\n        return input;\n      }\n      const n = parseIPv4Number(part);\n      if (n === failure) {\n        return input;\n      }\n      numbers.push(n);\n    }\n    for (let i = 0;i < numbers.length - 1; ++i) {\n      if (numbers[i] > 255) {\n        return failure;\n      }\n    }\n    if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\n      return failure;\n    }\n    let ipv4 = numbers.pop();\n    let counter = 0;\n    for (const n of numbers) {\n      ipv4 += n * Math.pow(256, 3 - counter);\n      ++counter;\n    }\n    return ipv4;\n  };\n  var serializeIPv4 = function(address) {\n    let output = \"\";\n    let n = address;\n    for (let i = 1;i <= 4; ++i) {\n      output = String(n % 256) + output;\n      if (i !== 4) {\n        output = \".\" + output;\n      }\n      n = Math.floor(n / 256);\n    }\n    return output;\n  };\n  var parseIPv6 = function(input) {\n    const address = [0, 0, 0, 0, 0, 0, 0, 0];\n    let pieceIndex = 0;\n    let compress = null;\n    let pointer = 0;\n    input = punycode.ucs2.decode(input);\n    if (input[pointer] === 58) {\n      if (input[pointer + 1] !== 58) {\n        return failure;\n      }\n      pointer += 2;\n      ++pieceIndex;\n      compress = pieceIndex;\n    }\n    while (pointer < input.length) {\n      if (pieceIndex === 8) {\n        return failure;\n      }\n      if (input[pointer] === 58) {\n        if (compress !== null) {\n          return failure;\n        }\n        ++pointer;\n        ++pieceIndex;\n        compress = pieceIndex;\n        continue;\n      }\n      let value = 0;\n      let length = 0;\n      while (length < 4 && isASCIIHex(input[pointer])) {\n        value = value * 16 + parseInt(at(input, pointer), 16);\n        ++pointer;\n        ++length;\n      }\n      if (input[pointer] === 46) {\n        if (length === 0) {\n          return failure;\n        }\n        pointer -= length;\n        if (pieceIndex > 6) {\n          return failure;\n        }\n        let numbersSeen = 0;\n        while (input[pointer] !== undefined) {\n          let ipv4Piece = null;\n          if (numbersSeen > 0) {\n            if (input[pointer] === 46 && numbersSeen < 4) {\n              ++pointer;\n            } else {\n              return failure;\n            }\n          }\n          if (!isASCIIDigit(input[pointer])) {\n            return failure;\n          }\n          while (isASCIIDigit(input[pointer])) {\n            const number = parseInt(at(input, pointer));\n            if (ipv4Piece === null) {\n              ipv4Piece = number;\n            } else if (ipv4Piece === 0) {\n              return failure;\n            } else {\n              ipv4Piece = ipv4Piece * 10 + number;\n            }\n            if (ipv4Piece > 255) {\n              return failure;\n            }\n            ++pointer;\n          }\n          address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n          ++numbersSeen;\n          if (numbersSeen === 2 || numbersSeen === 4) {\n            ++pieceIndex;\n          }\n        }\n        if (numbersSeen !== 4) {\n          return failure;\n        }\n        break;\n      } else if (input[pointer] === 58) {\n        ++pointer;\n        if (input[pointer] === undefined) {\n          return failure;\n        }\n      } else if (input[pointer] !== undefined) {\n        return failure;\n      }\n      address[pieceIndex] = value;\n      ++pieceIndex;\n    }\n    if (compress !== null) {\n      let swaps = pieceIndex - compress;\n      pieceIndex = 7;\n      while (pieceIndex !== 0 && swaps > 0) {\n        const temp = address[compress + swaps - 1];\n        address[compress + swaps - 1] = address[pieceIndex];\n        address[pieceIndex] = temp;\n        --pieceIndex;\n        --swaps;\n      }\n    } else if (compress === null && pieceIndex !== 8) {\n      return failure;\n    }\n    return address;\n  };\n  var serializeIPv6 = function(address) {\n    let output = \"\";\n    const seqResult = findLongestZeroSequence(address);\n    const compress = seqResult.idx;\n    let ignore0 = false;\n    for (let pieceIndex = 0;pieceIndex <= 7; ++pieceIndex) {\n      if (ignore0 && address[pieceIndex] === 0) {\n        continue;\n      } else if (ignore0) {\n        ignore0 = false;\n      }\n      if (compress === pieceIndex) {\n        const separator = pieceIndex === 0 ? \"::\" : \":\";\n        output += separator;\n        ignore0 = true;\n        continue;\n      }\n      output += address[pieceIndex].toString(16);\n      if (pieceIndex !== 7) {\n        output += \":\";\n      }\n    }\n    return output;\n  };\n  var parseHost = function(input, isSpecialArg) {\n    if (input[0] === \"[\") {\n      if (input[input.length - 1] !== \"]\") {\n        return failure;\n      }\n      return parseIPv6(input.substring(1, input.length - 1));\n    }\n    if (!isSpecialArg) {\n      return parseOpaqueHost(input);\n    }\n    const domain = utf8PercentDecode(input);\n    const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\n    if (asciiDomain === null) {\n      return failure;\n    }\n    if (containsForbiddenHostCodePoint(asciiDomain)) {\n      return failure;\n    }\n    const ipv4Host = parseIPv4(asciiDomain);\n    if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\n      return ipv4Host;\n    }\n    return asciiDomain;\n  };\n  var parseOpaqueHost = function(input) {\n    if (containsForbiddenHostCodePointExcludingPercent(input)) {\n      return failure;\n    }\n    let output = \"\";\n    const decoded = punycode.ucs2.decode(input);\n    for (let i = 0;i < decoded.length; ++i) {\n      output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\n    }\n    return output;\n  };\n  var findLongestZeroSequence = function(arr) {\n    let maxIdx = null;\n    let maxLen = 1;\n    let currStart = null;\n    let currLen = 0;\n    for (let i = 0;i < arr.length; ++i) {\n      if (arr[i] !== 0) {\n        if (currLen > maxLen) {\n          maxIdx = currStart;\n          maxLen = currLen;\n        }\n        currStart = null;\n        currLen = 0;\n      } else {\n        if (currStart === null) {\n          currStart = i;\n        }\n        ++currLen;\n      }\n    }\n    if (currLen > maxLen) {\n      maxIdx = currStart;\n      maxLen = currLen;\n    }\n    return {\n      idx: maxIdx,\n      len: maxLen\n    };\n  };\n  var serializeHost = function(host) {\n    if (typeof host === \"number\") {\n      return serializeIPv4(host);\n    }\n    if (host instanceof Array) {\n      return \"[\" + serializeIPv6(host) + \"]\";\n    }\n    return host;\n  };\n  var trimControlChars = function(url) {\n    return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\n  };\n  var trimTabAndNewline = function(url) {\n    return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\n  };\n  var shortenPath = function(url) {\n    const path = url.path;\n    if (path.length === 0) {\n      return;\n    }\n    if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\n      return;\n    }\n    path.pop();\n  };\n  var includesCredentials = function(url) {\n    return url.username !== \"\" || url.password !== \"\";\n  };\n  var cannotHaveAUsernamePasswordPort = function(url) {\n    return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\n  };\n  var isNormalizedWindowsDriveLetter = function(string) {\n    return /^[A-Za-z]:$/.test(string);\n  };\n  var URLStateMachine = function(input, base, encodingOverride, url, stateOverride) {\n    this.pointer = 0;\n    this.input = input;\n    this.base = base || null;\n    this.encodingOverride = encodingOverride || \"utf-8\";\n    this.stateOverride = stateOverride;\n    this.url = url;\n    this.failure = false;\n    this.parseError = false;\n    if (!this.url) {\n      this.url = {\n        scheme: \"\",\n        username: \"\",\n        password: \"\",\n        host: null,\n        port: null,\n        path: [],\n        query: null,\n        fragment: null,\n        cannotBeABaseURL: false\n      };\n      const res2 = trimControlChars(this.input);\n      if (res2 !== this.input) {\n        this.parseError = true;\n      }\n      this.input = res2;\n    }\n    const res = trimTabAndNewline(this.input);\n    if (res !== this.input) {\n      this.parseError = true;\n    }\n    this.input = res;\n    this.state = stateOverride || \"scheme start\";\n    this.buffer = \"\";\n    this.atFlag = false;\n    this.arrFlag = false;\n    this.passwordTokenSeenFlag = false;\n    this.input = punycode.ucs2.decode(this.input);\n    for (;this.pointer <= this.input.length; ++this.pointer) {\n      const c = this.input[this.pointer];\n      const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\n      const ret = this[\"parse \" + this.state](c, cStr);\n      if (!ret) {\n        break;\n      } else if (ret === failure) {\n        this.failure = true;\n        break;\n      }\n    }\n  };\n  var serializeURL = function(url, excludeFragment) {\n    let output = url.scheme + \":\";\n    if (url.host !== null) {\n      output += \"//\";\n      if (url.username !== \"\" || url.password !== \"\") {\n        output += url.username;\n        if (url.password !== \"\") {\n          output += \":\" + url.password;\n        }\n        output += \"@\";\n      }\n      output += serializeHost(url.host);\n      if (url.port !== null) {\n        output += \":\" + url.port;\n      }\n    } else if (url.host === null && url.scheme === \"file\") {\n      output += \"//\";\n    }\n    if (url.cannotBeABaseURL) {\n      output += url.path[0];\n    } else {\n      for (const string of url.path) {\n        output += \"/\" + string;\n      }\n    }\n    if (url.query !== null) {\n      output += \"?\" + url.query;\n    }\n    if (!excludeFragment && url.fragment !== null) {\n      output += \"#\" + url.fragment;\n    }\n    return output;\n  };\n  var serializeOrigin = function(tuple) {\n    let result = tuple.scheme + \"://\";\n    result += serializeHost(tuple.host);\n    if (tuple.port !== null) {\n      result += \":\" + tuple.port;\n    }\n    return result;\n  };\n  var punycode = __require(\"punycode\");\n  var tr46 = require_tr46();\n  var specialSchemes = {\n    ftp: 21,\n    file: null,\n    gopher: 70,\n    http: 80,\n    https: 443,\n    ws: 80,\n    wss: 443\n  };\n  var failure = Symbol(\"failure\");\n  var extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\n  var extraUserinfoPercentEncodeSet = new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\n  URLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\n    if (isASCIIAlpha(c)) {\n      this.buffer += cStr.toLowerCase();\n      this.state = \"scheme\";\n    } else if (!this.stateOverride) {\n      this.state = \"no scheme\";\n      --this.pointer;\n    } else {\n      this.parseError = true;\n      return failure;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\n    if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\n      this.buffer += cStr.toLowerCase();\n    } else if (c === 58) {\n      if (this.stateOverride) {\n        if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\n          return false;\n        }\n        if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\n          return false;\n        }\n        if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\n          return false;\n        }\n        if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\n          return false;\n        }\n      }\n      this.url.scheme = this.buffer;\n      this.buffer = \"\";\n      if (this.stateOverride) {\n        return false;\n      }\n      if (this.url.scheme === \"file\") {\n        if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\n          this.parseError = true;\n        }\n        this.state = \"file\";\n      } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\n        this.state = \"special relative or authority\";\n      } else if (isSpecial(this.url)) {\n        this.state = \"special authority slashes\";\n      } else if (this.input[this.pointer + 1] === 47) {\n        this.state = \"path or authority\";\n        ++this.pointer;\n      } else {\n        this.url.cannotBeABaseURL = true;\n        this.url.path.push(\"\");\n        this.state = \"cannot-be-a-base-URL path\";\n      }\n    } else if (!this.stateOverride) {\n      this.buffer = \"\";\n      this.state = \"no scheme\";\n      this.pointer = -1;\n    } else {\n      this.parseError = true;\n      return failure;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\n    if (this.base === null || this.base.cannotBeABaseURL && c !== 35) {\n      return failure;\n    } else if (this.base.cannotBeABaseURL && c === 35) {\n      this.url.scheme = this.base.scheme;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.url.cannotBeABaseURL = true;\n      this.state = \"fragment\";\n    } else if (this.base.scheme === \"file\") {\n      this.state = \"file\";\n      --this.pointer;\n    } else {\n      this.state = \"relative\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\n    if (c === 47 && this.input[this.pointer + 1] === 47) {\n      this.state = \"special authority ignore slashes\";\n      ++this.pointer;\n    } else {\n      this.parseError = true;\n      this.state = \"relative\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\n    if (c === 47) {\n      this.state = \"authority\";\n    } else {\n      this.state = \"path\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\n    this.url.scheme = this.base.scheme;\n    if (isNaN(c)) {\n      this.url.username = this.base.username;\n      this.url.password = this.base.password;\n      this.url.host = this.base.host;\n      this.url.port = this.base.port;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n    } else if (c === 47) {\n      this.state = \"relative slash\";\n    } else if (c === 63) {\n      this.url.username = this.base.username;\n      this.url.password = this.base.password;\n      this.url.host = this.base.host;\n      this.url.port = this.base.port;\n      this.url.path = this.base.path.slice();\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.username = this.base.username;\n      this.url.password = this.base.password;\n      this.url.host = this.base.host;\n      this.url.port = this.base.port;\n      this.url.path = this.base.path.slice();\n      this.url.query = this.base.query;\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (isSpecial(this.url) && c === 92) {\n      this.parseError = true;\n      this.state = \"relative slash\";\n    } else {\n      this.url.username = this.base.username;\n      this.url.password = this.base.password;\n      this.url.host = this.base.host;\n      this.url.port = this.base.port;\n      this.url.path = this.base.path.slice(0, this.base.path.length - 1);\n      this.state = \"path\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\n    if (isSpecial(this.url) && (c === 47 || c === 92)) {\n      if (c === 92) {\n        this.parseError = true;\n      }\n      this.state = \"special authority ignore slashes\";\n    } else if (c === 47) {\n      this.state = \"authority\";\n    } else {\n      this.url.username = this.base.username;\n      this.url.password = this.base.password;\n      this.url.host = this.base.host;\n      this.url.port = this.base.port;\n      this.state = \"path\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\n    if (c === 47 && this.input[this.pointer + 1] === 47) {\n      this.state = \"special authority ignore slashes\";\n      ++this.pointer;\n    } else {\n      this.parseError = true;\n      this.state = \"special authority ignore slashes\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\n    if (c !== 47 && c !== 92) {\n      this.state = \"authority\";\n      --this.pointer;\n    } else {\n      this.parseError = true;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\n    if (c === 64) {\n      this.parseError = true;\n      if (this.atFlag) {\n        this.buffer = \"%40\" + this.buffer;\n      }\n      this.atFlag = true;\n      const len = countSymbols(this.buffer);\n      for (let pointer = 0;pointer < len; ++pointer) {\n        const codePoint = this.buffer.codePointAt(pointer);\n        if (codePoint === 58 && !this.passwordTokenSeenFlag) {\n          this.passwordTokenSeenFlag = true;\n          continue;\n        }\n        const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\n        if (this.passwordTokenSeenFlag) {\n          this.url.password += encodedCodePoints;\n        } else {\n          this.url.username += encodedCodePoints;\n        }\n      }\n      this.buffer = \"\";\n    } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n      if (this.atFlag && this.buffer === \"\") {\n        this.parseError = true;\n        return failure;\n      }\n      this.pointer -= countSymbols(this.buffer) + 1;\n      this.buffer = \"\";\n      this.state = \"host\";\n    } else {\n      this.buffer += cStr;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse hostname\"] = URLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\n    if (this.stateOverride && this.url.scheme === \"file\") {\n      --this.pointer;\n      this.state = \"file host\";\n    } else if (c === 58 && !this.arrFlag) {\n      if (this.buffer === \"\") {\n        this.parseError = true;\n        return failure;\n      }\n      const host = parseHost(this.buffer, isSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      this.url.host = host;\n      this.buffer = \"\";\n      this.state = \"port\";\n      if (this.stateOverride === \"hostname\") {\n        return false;\n      }\n    } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92) {\n      --this.pointer;\n      if (isSpecial(this.url) && this.buffer === \"\") {\n        this.parseError = true;\n        return failure;\n      } else if (this.stateOverride && this.buffer === \"\" && (includesCredentials(this.url) || this.url.port !== null)) {\n        this.parseError = true;\n        return false;\n      }\n      const host = parseHost(this.buffer, isSpecial(this.url));\n      if (host === failure) {\n        return failure;\n      }\n      this.url.host = host;\n      this.buffer = \"\";\n      this.state = \"path start\";\n      if (this.stateOverride) {\n        return false;\n      }\n    } else {\n      if (c === 91) {\n        this.arrFlag = true;\n      } else if (c === 93) {\n        this.arrFlag = false;\n      }\n      this.buffer += cStr;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\n    if (isASCIIDigit(c)) {\n      this.buffer += cStr;\n    } else if (isNaN(c) || c === 47 || c === 63 || c === 35 || isSpecial(this.url) && c === 92 || this.stateOverride) {\n      if (this.buffer !== \"\") {\n        const port = parseInt(this.buffer);\n        if (port > Math.pow(2, 16) - 1) {\n          this.parseError = true;\n          return failure;\n        }\n        this.url.port = port === defaultPort(this.url.scheme) ? null : port;\n        this.buffer = \"\";\n      }\n      if (this.stateOverride) {\n        return false;\n      }\n      this.state = \"path start\";\n      --this.pointer;\n    } else {\n      this.parseError = true;\n      return failure;\n    }\n    return true;\n  };\n  var fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\n  URLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\n    this.url.scheme = \"file\";\n    if (c === 47 || c === 92) {\n      if (c === 92) {\n        this.parseError = true;\n      }\n      this.state = \"file slash\";\n    } else if (this.base !== null && this.base.scheme === \"file\") {\n      if (isNaN(c)) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        this.url.query = this.base.query;\n      } else if (c === 63) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        this.url.query = \"\";\n        this.state = \"query\";\n      } else if (c === 35) {\n        this.url.host = this.base.host;\n        this.url.path = this.base.path.slice();\n        this.url.query = this.base.query;\n        this.url.fragment = \"\";\n        this.state = \"fragment\";\n      } else {\n        if (this.input.length - this.pointer - 1 === 0 || !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) || this.input.length - this.pointer - 1 >= 2 && !fileOtherwiseCodePoints.has(this.input[this.pointer + 2])) {\n          this.url.host = this.base.host;\n          this.url.path = this.base.path.slice();\n          shortenPath(this.url);\n        } else {\n          this.parseError = true;\n        }\n        this.state = \"path\";\n        --this.pointer;\n      }\n    } else {\n      this.state = \"path\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\n    if (c === 47 || c === 92) {\n      if (c === 92) {\n        this.parseError = true;\n      }\n      this.state = \"file host\";\n    } else {\n      if (this.base !== null && this.base.scheme === \"file\") {\n        if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\n          this.url.path.push(this.base.path[0]);\n        } else {\n          this.url.host = this.base.host;\n        }\n      }\n      this.state = \"path\";\n      --this.pointer;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\n    if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\n      --this.pointer;\n      if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\n        this.parseError = true;\n        this.state = \"path\";\n      } else if (this.buffer === \"\") {\n        this.url.host = \"\";\n        if (this.stateOverride) {\n          return false;\n        }\n        this.state = \"path start\";\n      } else {\n        let host = parseHost(this.buffer, isSpecial(this.url));\n        if (host === failure) {\n          return failure;\n        }\n        if (host === \"localhost\") {\n          host = \"\";\n        }\n        this.url.host = host;\n        if (this.stateOverride) {\n          return false;\n        }\n        this.buffer = \"\";\n        this.state = \"path start\";\n      }\n    } else {\n      this.buffer += cStr;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\n    if (isSpecial(this.url)) {\n      if (c === 92) {\n        this.parseError = true;\n      }\n      this.state = \"path\";\n      if (c !== 47 && c !== 92) {\n        --this.pointer;\n      }\n    } else if (!this.stateOverride && c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (!this.stateOverride && c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else if (c !== undefined) {\n      this.state = \"path\";\n      if (c !== 47) {\n        --this.pointer;\n      }\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\n    if (isNaN(c) || c === 47 || isSpecial(this.url) && c === 92 || !this.stateOverride && (c === 63 || c === 35)) {\n      if (isSpecial(this.url) && c === 92) {\n        this.parseError = true;\n      }\n      if (isDoubleDot(this.buffer)) {\n        shortenPath(this.url);\n        if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\n          this.url.path.push(\"\");\n        }\n      } else if (isSingleDot(this.buffer) && c !== 47 && !(isSpecial(this.url) && c === 92)) {\n        this.url.path.push(\"\");\n      } else if (!isSingleDot(this.buffer)) {\n        if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\n          if (this.url.host !== \"\" && this.url.host !== null) {\n            this.parseError = true;\n            this.url.host = \"\";\n          }\n          this.buffer = this.buffer[0] + \":\";\n        }\n        this.url.path.push(this.buffer);\n      }\n      this.buffer = \"\";\n      if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\n        while (this.url.path.length > 1 && this.url.path[0] === \"\") {\n          this.parseError = true;\n          this.url.path.shift();\n        }\n      }\n      if (c === 63) {\n        this.url.query = \"\";\n        this.state = \"query\";\n      }\n      if (c === 35) {\n        this.url.fragment = \"\";\n        this.state = \"fragment\";\n      }\n    } else {\n      if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n        this.parseError = true;\n      }\n      this.buffer += percentEncodeChar(c, isPathPercentEncode);\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\n    if (c === 63) {\n      this.url.query = \"\";\n      this.state = \"query\";\n    } else if (c === 35) {\n      this.url.fragment = \"\";\n      this.state = \"fragment\";\n    } else {\n      if (!isNaN(c) && c !== 37) {\n        this.parseError = true;\n      }\n      if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n        this.parseError = true;\n      }\n      if (!isNaN(c)) {\n        this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\n      }\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\n    if (isNaN(c) || !this.stateOverride && c === 35) {\n      if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\n        this.encodingOverride = \"utf-8\";\n      }\n      const buffer = new Buffer(this.buffer);\n      for (let i = 0;i < buffer.length; ++i) {\n        if (buffer[i] < 33 || buffer[i] > 126 || buffer[i] === 34 || buffer[i] === 35 || buffer[i] === 60 || buffer[i] === 62) {\n          this.url.query += percentEncode(buffer[i]);\n        } else {\n          this.url.query += String.fromCodePoint(buffer[i]);\n        }\n      }\n      this.buffer = \"\";\n      if (c === 35) {\n        this.url.fragment = \"\";\n        this.state = \"fragment\";\n      }\n    } else {\n      if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n        this.parseError = true;\n      }\n      this.buffer += cStr;\n    }\n    return true;\n  };\n  URLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\n    if (isNaN(c)) {\n    } else if (c === 0) {\n      this.parseError = true;\n    } else {\n      if (c === 37 && (!isASCIIHex(this.input[this.pointer + 1]) || !isASCIIHex(this.input[this.pointer + 2]))) {\n        this.parseError = true;\n      }\n      this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\n    }\n    return true;\n  };\n  exports.serializeURL = serializeURL;\n  exports.serializeURLOrigin = function(url) {\n    switch (url.scheme) {\n      case \"blob\":\n        try {\n          return exports.serializeURLOrigin(exports.parseURL(url.path[0]));\n        } catch (e) {\n          return \"null\";\n        }\n      case \"ftp\":\n      case \"gopher\":\n      case \"http\":\n      case \"https\":\n      case \"ws\":\n      case \"wss\":\n        return serializeOrigin({\n          scheme: url.scheme,\n          host: url.host,\n          port: url.port\n        });\n      case \"file\":\n        return \"file://\";\n      default:\n        return \"null\";\n    }\n  };\n  exports.basicURLParse = function(input, options) {\n    if (options === undefined) {\n      options = {};\n    }\n    const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\n    if (usm.failure) {\n      return \"failure\";\n    }\n    return usm.url;\n  };\n  exports.setTheUsername = function(url, username) {\n    url.username = \"\";\n    const decoded = punycode.ucs2.decode(username);\n    for (let i = 0;i < decoded.length; ++i) {\n      url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n    }\n  };\n  exports.setThePassword = function(url, password) {\n    url.password = \"\";\n    const decoded = punycode.ucs2.decode(password);\n    for (let i = 0;i < decoded.length; ++i) {\n      url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\n    }\n  };\n  exports.serializeHost = serializeHost;\n  exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\n  exports.serializeInteger = function(integer) {\n    return String(integer);\n  };\n  exports.parseURL = function(input, options) {\n    if (options === undefined) {\n      options = {};\n    }\n    return exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\n  };\n});\n\n// node_modules/whatwg-url/lib/URL-impl.js\nvar require_URL_impl = __commonJS((exports) => {\n  var usm = require_url_state_machine();\n  exports.implementation = class URLImpl {\n    constructor(constructorArgs) {\n      const url = constructorArgs[0];\n      const base = constructorArgs[1];\n      let parsedBase = null;\n      if (base !== undefined) {\n        parsedBase = usm.basicURLParse(base);\n        if (parsedBase === \"failure\") {\n          throw new TypeError(\"Invalid base URL\");\n        }\n      }\n      const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n      if (parsedURL === \"failure\") {\n        throw new TypeError(\"Invalid URL\");\n      }\n      this._url = parsedURL;\n    }\n    get href() {\n      return usm.serializeURL(this._url);\n    }\n    set href(v) {\n      const parsedURL = usm.basicURLParse(v);\n      if (parsedURL === \"failure\") {\n        throw new TypeError(\"Invalid URL\");\n      }\n      this._url = parsedURL;\n    }\n    get origin() {\n      return usm.serializeURLOrigin(this._url);\n    }\n    get protocol() {\n      return this._url.scheme + \":\";\n    }\n    set protocol(v) {\n      usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n    }\n    get username() {\n      return this._url.username;\n    }\n    set username(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      usm.setTheUsername(this._url, v);\n    }\n    get password() {\n      return this._url.password;\n    }\n    set password(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      usm.setThePassword(this._url, v);\n    }\n    get host() {\n      const url = this._url;\n      if (url.host === null) {\n        return \"\";\n      }\n      if (url.port === null) {\n        return usm.serializeHost(url.host);\n      }\n      return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n    }\n    set host(v) {\n      if (this._url.cannotBeABaseURL) {\n        return;\n      }\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n    }\n    get hostname() {\n      if (this._url.host === null) {\n        return \"\";\n      }\n      return usm.serializeHost(this._url.host);\n    }\n    set hostname(v) {\n      if (this._url.cannotBeABaseURL) {\n        return;\n      }\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n    }\n    get port() {\n      if (this._url.port === null) {\n        return \"\";\n      }\n      return usm.serializeInteger(this._url.port);\n    }\n    set port(v) {\n      if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n        return;\n      }\n      if (v === \"\") {\n        this._url.port = null;\n      } else {\n        usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n      }\n    }\n    get pathname() {\n      if (this._url.cannotBeABaseURL) {\n        return this._url.path[0];\n      }\n      if (this._url.path.length === 0) {\n        return \"\";\n      }\n      return \"/\" + this._url.path.join(\"/\");\n    }\n    set pathname(v) {\n      if (this._url.cannotBeABaseURL) {\n        return;\n      }\n      this._url.path = [];\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n    }\n    get search() {\n      if (this._url.query === null || this._url.query === \"\") {\n        return \"\";\n      }\n      return \"?\" + this._url.query;\n    }\n    set search(v) {\n      const url = this._url;\n      if (v === \"\") {\n        url.query = null;\n        return;\n      }\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      url.query = \"\";\n      usm.basicURLParse(input, { url, stateOverride: \"query\" });\n    }\n    get hash() {\n      if (this._url.fragment === null || this._url.fragment === \"\") {\n        return \"\";\n      }\n      return \"#\" + this._url.fragment;\n    }\n    set hash(v) {\n      if (v === \"\") {\n        this._url.fragment = null;\n        return;\n      }\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      this._url.fragment = \"\";\n      usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n    }\n    toJSON() {\n      return this.href;\n    }\n  };\n});\n\n// node_modules/whatwg-url/lib/URL.js\nvar require_URL = __commonJS((exports, module) => {\n  var URL3 = function(url) {\n    if (!this || this[impl] || !(this instanceof URL3)) {\n      throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n    }\n    if (arguments.length < 1) {\n      throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n    }\n    const args = [];\n    for (let i = 0;i < arguments.length && i < 2; ++i) {\n      args[i] = arguments[i];\n    }\n    args[0] = conversions[\"USVString\"](args[0]);\n    if (args[1] !== undefined) {\n      args[1] = conversions[\"USVString\"](args[1]);\n    }\n    exports.setup(this, args);\n  };\n  var conversions = require_lib2();\n  var utils = require_utils2();\n  var Impl = require_URL_impl();\n  var impl = utils.implSymbol;\n  URL3.prototype.toJSON = function toJSON() {\n    if (!this || !exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    const args = [];\n    for (let i = 0;i < arguments.length && i < 0; ++i) {\n      args[i] = arguments[i];\n    }\n    return this[impl].toJSON.apply(this[impl], args);\n  };\n  Object.defineProperty(URL3.prototype, \"href\", {\n    get() {\n      return this[impl].href;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].href = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  URL3.prototype.toString = function() {\n    if (!this || !exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n    return this.href;\n  };\n  Object.defineProperty(URL3.prototype, \"origin\", {\n    get() {\n      return this[impl].origin;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"protocol\", {\n    get() {\n      return this[impl].protocol;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].protocol = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"username\", {\n    get() {\n      return this[impl].username;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].username = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"password\", {\n    get() {\n      return this[impl].password;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].password = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"host\", {\n    get() {\n      return this[impl].host;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].host = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"hostname\", {\n    get() {\n      return this[impl].hostname;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].hostname = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"port\", {\n    get() {\n      return this[impl].port;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].port = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"pathname\", {\n    get() {\n      return this[impl].pathname;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].pathname = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"search\", {\n    get() {\n      return this[impl].search;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].search = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(URL3.prototype, \"hash\", {\n    get() {\n      return this[impl].hash;\n    },\n    set(V) {\n      V = conversions[\"USVString\"](V);\n      this[impl].hash = V;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  module.exports = {\n    is(obj) {\n      return !!obj && obj[impl] instanceof Impl.implementation;\n    },\n    create(constructorArgs, privateData) {\n      let obj = Object.create(URL3.prototype);\n      this.setup(obj, constructorArgs, privateData);\n      return obj;\n    },\n    setup(obj, constructorArgs, privateData) {\n      if (!privateData)\n        privateData = {};\n      privateData.wrapper = obj;\n      obj[impl] = new Impl.implementation(constructorArgs, privateData);\n      obj[impl][utils.wrapperSymbol] = obj;\n    },\n    interface: URL3,\n    expose: {\n      Window: { URL: URL3 },\n      Worker: { URL: URL3 }\n    }\n  };\n});\n\n// node_modules/whatwg-url/lib/public-api.js\nvar require_public_api = __commonJS((exports) => {\n  exports.URL = require_URL().interface;\n  exports.serializeURL = require_url_state_machine().serializeURL;\n  exports.serializeURLOrigin = require_url_state_machine().serializeURLOrigin;\n  exports.basicURLParse = require_url_state_machine().basicURLParse;\n  exports.setTheUsername = require_url_state_machine().setTheUsername;\n  exports.setThePassword = require_url_state_machine().setThePassword;\n  exports.serializeHost = require_url_state_machine().serializeHost;\n  exports.serializeInteger = require_url_state_machine().serializeInteger;\n  exports.parseURL = require_url_state_machine().parseURL;\n});\n\n// node_modules/node-fetch/lib/index.js\nvar require_lib3 = __commonJS((exports, module) => {\n  var _interopDefault = function(ex) {\n    return ex && typeof ex === \"object\" && (\"default\" in ex) ? ex[\"default\"] : ex;\n  };\n  var FetchError = function(message, type, systemError) {\n    Error.call(this, message);\n    this.message = message;\n    this.type = type;\n    if (systemError) {\n      this.code = this.errno = systemError.code;\n    }\n    Error.captureStackTrace(this, this.constructor);\n  };\n  var Body = function(body) {\n    var _this = this;\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _ref$size = _ref.size;\n    let size = _ref$size === undefined ? 0 : _ref$size;\n    var _ref$timeout = _ref.timeout;\n    let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n    if (body == null) {\n      body = null;\n    } else if (isURLSearchParams(body)) {\n      body = Buffer.from(body.toString());\n    } else if (isBlob(body))\n      ;\n    else if (Buffer.isBuffer(body))\n      ;\n    else if (Object.prototype.toString.call(body) === \"[object ArrayBuffer]\") {\n      body = Buffer.from(body);\n    } else if (ArrayBuffer.isView(body)) {\n      body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n    } else if (body instanceof Stream)\n      ;\n    else {\n      body = Buffer.from(String(body));\n    }\n    this[INTERNALS] = {\n      body,\n      disturbed: false,\n      error: null\n    };\n    this.size = size;\n    this.timeout = timeout;\n    if (body instanceof Stream) {\n      body.on(\"error\", function(err) {\n        const error = err.name === \"AbortError\" ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, \"system\", err);\n        _this[INTERNALS].error = error;\n      });\n    }\n  };\n  var consumeBody = function() {\n    var _this4 = this;\n    if (this[INTERNALS].disturbed) {\n      return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n    }\n    this[INTERNALS].disturbed = true;\n    if (this[INTERNALS].error) {\n      return Body.Promise.reject(this[INTERNALS].error);\n    }\n    let body = this.body;\n    if (body === null) {\n      return Body.Promise.resolve(Buffer.alloc(0));\n    }\n    if (isBlob(body)) {\n      body = body.stream();\n    }\n    if (Buffer.isBuffer(body)) {\n      return Body.Promise.resolve(body);\n    }\n    if (!(body instanceof Stream)) {\n      return Body.Promise.resolve(Buffer.alloc(0));\n    }\n    let accum = [];\n    let accumBytes = 0;\n    let abort = false;\n    return new Body.Promise(function(resolve, reject) {\n      let resTimeout;\n      if (_this4.timeout) {\n        resTimeout = setTimeout(function() {\n          abort = true;\n          reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, \"body-timeout\"));\n        }, _this4.timeout);\n      }\n      body.on(\"error\", function(err) {\n        if (err.name === \"AbortError\") {\n          abort = true;\n          reject(err);\n        } else {\n          reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, \"system\", err));\n        }\n      });\n      body.on(\"data\", function(chunk) {\n        if (abort || chunk === null) {\n          return;\n        }\n        if (_this4.size && accumBytes + chunk.length > _this4.size) {\n          abort = true;\n          reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, \"max-size\"));\n          return;\n        }\n        accumBytes += chunk.length;\n        accum.push(chunk);\n      });\n      body.on(\"end\", function() {\n        if (abort) {\n          return;\n        }\n        clearTimeout(resTimeout);\n        try {\n          resolve(Buffer.concat(accum, accumBytes));\n        } catch (err) {\n          reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, \"system\", err));\n        }\n      });\n    });\n  };\n  var convertBody = function(buffer, headers) {\n    if (typeof convert !== \"function\") {\n      throw new Error(\"The package `encoding` must be installed to use the textConverted() function\");\n    }\n    const ct = headers.get(\"content-type\");\n    let charset = \"utf-8\";\n    let res, str;\n    if (ct) {\n      res = /charset=([^;]*)/i.exec(ct);\n    }\n    str = buffer.slice(0, 1024).toString();\n    if (!res && str) {\n      res = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n    }\n    if (!res && str) {\n      res = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n      if (!res) {\n        res = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n        if (res) {\n          res.pop();\n        }\n      }\n      if (res) {\n        res = /charset=(.*)/i.exec(res.pop());\n      }\n    }\n    if (!res && str) {\n      res = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n    }\n    if (res) {\n      charset = res.pop();\n      if (charset === \"gb2312\" || charset === \"gbk\") {\n        charset = \"gb18030\";\n      }\n    }\n    return convert(buffer, \"UTF-8\", charset).toString();\n  };\n  var isURLSearchParams = function(obj) {\n    if (typeof obj !== \"object\" || typeof obj.append !== \"function\" || typeof obj.delete !== \"function\" || typeof obj.get !== \"function\" || typeof obj.getAll !== \"function\" || typeof obj.has !== \"function\" || typeof obj.set !== \"function\") {\n      return false;\n    }\n    return obj.constructor.name === \"URLSearchParams\" || Object.prototype.toString.call(obj) === \"[object URLSearchParams]\" || typeof obj.sort === \"function\";\n  };\n  var isBlob = function(obj) {\n    return typeof obj === \"object\" && typeof obj.arrayBuffer === \"function\" && typeof obj.type === \"string\" && typeof obj.stream === \"function\" && typeof obj.constructor === \"function\" && typeof obj.constructor.name === \"string\" && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n  };\n  var clone = function(instance) {\n    let p1, p2;\n    let body = instance.body;\n    if (instance.bodyUsed) {\n      throw new Error(\"cannot clone body after it is used\");\n    }\n    if (body instanceof Stream && typeof body.getBoundary !== \"function\") {\n      p1 = new PassThrough;\n      p2 = new PassThrough;\n      body.pipe(p1);\n      body.pipe(p2);\n      instance[INTERNALS].body = p1;\n      body = p2;\n    }\n    return body;\n  };\n  var extractContentType = function(body) {\n    if (body === null) {\n      return null;\n    } else if (typeof body === \"string\") {\n      return \"text/plain;charset=UTF-8\";\n    } else if (isURLSearchParams(body)) {\n      return \"application/x-www-form-urlencoded;charset=UTF-8\";\n    } else if (isBlob(body)) {\n      return body.type || null;\n    } else if (Buffer.isBuffer(body)) {\n      return null;\n    } else if (Object.prototype.toString.call(body) === \"[object ArrayBuffer]\") {\n      return null;\n    } else if (ArrayBuffer.isView(body)) {\n      return null;\n    } else if (typeof body.getBoundary === \"function\") {\n      return `multipart/form-data;boundary=${body.getBoundary()}`;\n    } else if (body instanceof Stream) {\n      return null;\n    } else {\n      return \"text/plain;charset=UTF-8\";\n    }\n  };\n  var getTotalBytes = function(instance) {\n    const body = instance.body;\n    if (body === null) {\n      return 0;\n    } else if (isBlob(body)) {\n      return body.size;\n    } else if (Buffer.isBuffer(body)) {\n      return body.length;\n    } else if (body && typeof body.getLengthSync === \"function\") {\n      if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || body.hasKnownLength && body.hasKnownLength()) {\n        return body.getLengthSync();\n      }\n      return null;\n    } else {\n      return null;\n    }\n  };\n  var writeToStream = function(dest, instance) {\n    const body = instance.body;\n    if (body === null) {\n      dest.end();\n    } else if (isBlob(body)) {\n      body.stream().pipe(dest);\n    } else if (Buffer.isBuffer(body)) {\n      dest.write(body);\n      dest.end();\n    } else {\n      body.pipe(dest);\n    }\n  };\n  var validateName = function(name) {\n    name = `${name}`;\n    if (invalidTokenRegex.test(name) || name === \"\") {\n      throw new TypeError(`${name} is not a legal HTTP header name`);\n    }\n  };\n  var validateValue = function(value) {\n    value = `${value}`;\n    if (invalidHeaderCharRegex.test(value)) {\n      throw new TypeError(`${value} is not a legal HTTP header value`);\n    }\n  };\n  var find = function(map, name) {\n    name = name.toLowerCase();\n    for (const key in map) {\n      if (key.toLowerCase() === name) {\n        return key;\n      }\n    }\n    return;\n  };\n  var getHeaders = function(headers) {\n    let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"key+value\";\n    const keys = Object.keys(headers[MAP]).sort();\n    return keys.map(kind === \"key\" ? function(k) {\n      return k.toLowerCase();\n    } : kind === \"value\" ? function(k) {\n      return headers[MAP][k].join(\", \");\n    } : function(k) {\n      return [k.toLowerCase(), headers[MAP][k].join(\", \")];\n    });\n  };\n  var createHeadersIterator = function(target, kind) {\n    const iterator = Object.create(HeadersIteratorPrototype);\n    iterator[INTERNAL] = {\n      target,\n      kind,\n      index: 0\n    };\n    return iterator;\n  };\n  var exportNodeCompatibleHeaders = function(headers) {\n    const obj = Object.assign({ __proto__: null }, headers[MAP]);\n    const hostHeaderKey = find(headers[MAP], \"Host\");\n    if (hostHeaderKey !== undefined) {\n      obj[hostHeaderKey] = obj[hostHeaderKey][0];\n    }\n    return obj;\n  };\n  var createHeadersLenient = function(obj) {\n    const headers = new Headers;\n    for (const name of Object.keys(obj)) {\n      if (invalidTokenRegex.test(name)) {\n        continue;\n      }\n      if (Array.isArray(obj[name])) {\n        for (const val of obj[name]) {\n          if (invalidHeaderCharRegex.test(val)) {\n            continue;\n          }\n          if (headers[MAP][name] === undefined) {\n            headers[MAP][name] = [val];\n          } else {\n            headers[MAP][name].push(val);\n          }\n        }\n      } else if (!invalidHeaderCharRegex.test(obj[name])) {\n        headers[MAP][name] = [obj[name]];\n      }\n    }\n    return headers;\n  };\n  var parseURL = function(urlStr) {\n    if (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n      urlStr = new URL3(urlStr).toString();\n    }\n    return parse_url(urlStr);\n  };\n  var isRequest = function(input) {\n    return typeof input === \"object\" && typeof input[INTERNALS$2] === \"object\";\n  };\n  var isAbortSignal = function(signal) {\n    const proto = signal && typeof signal === \"object\" && Object.getPrototypeOf(signal);\n    return !!(proto && proto.constructor.name === \"AbortSignal\");\n  };\n  var getNodeRequestOptions = function(request) {\n    const parsedURL = request[INTERNALS$2].parsedURL;\n    const headers = new Headers(request[INTERNALS$2].headers);\n    if (!headers.has(\"Accept\")) {\n      headers.set(\"Accept\", \"*/*\");\n    }\n    if (!parsedURL.protocol || !parsedURL.hostname) {\n      throw new TypeError(\"Only absolute URLs are supported\");\n    }\n    if (!/^https?:$/.test(parsedURL.protocol)) {\n      throw new TypeError(\"Only HTTP(S) protocols are supported\");\n    }\n    if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n      throw new Error(\"Cancellation of streamed requests with AbortSignal is not supported in node < 8\");\n    }\n    let contentLengthValue = null;\n    if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n      contentLengthValue = \"0\";\n    }\n    if (request.body != null) {\n      const totalBytes = getTotalBytes(request);\n      if (typeof totalBytes === \"number\") {\n        contentLengthValue = String(totalBytes);\n      }\n    }\n    if (contentLengthValue) {\n      headers.set(\"Content-Length\", contentLengthValue);\n    }\n    if (!headers.has(\"User-Agent\")) {\n      headers.set(\"User-Agent\", \"node-fetch/1.0 (+https://github.com/bitinn/node-fetch)\");\n    }\n    if (request.compress && !headers.has(\"Accept-Encoding\")) {\n      headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n    }\n    let agent = request.agent;\n    if (typeof agent === \"function\") {\n      agent = agent(parsedURL);\n    }\n    if (!headers.has(\"Connection\") && !agent) {\n      headers.set(\"Connection\", \"close\");\n    }\n    return Object.assign({}, parsedURL, {\n      method: request.method,\n      headers: exportNodeCompatibleHeaders(headers),\n      agent\n    });\n  };\n  var AbortError = function(message) {\n    Error.call(this, message);\n    this.type = \"aborted\";\n    this.message = message;\n    Error.captureStackTrace(this, this.constructor);\n  };\n  var fetch = function(url, opts) {\n    if (!fetch.Promise) {\n      throw new Error(\"native promise missing, set fetch.Promise to your favorite alternative\");\n    }\n    Body.Promise = fetch.Promise;\n    return new fetch.Promise(function(resolve, reject) {\n      const request = new Request(url, opts);\n      const options = getNodeRequestOptions(request);\n      const send = (options.protocol === \"https:\" ? https : http).request;\n      const signal = request.signal;\n      let response = null;\n      const abort = function abort() {\n        let error = new AbortError(\"The user aborted a request.\");\n        reject(error);\n        if (request.body && request.body instanceof Stream.Readable) {\n          destroyStream(request.body, error);\n        }\n        if (!response || !response.body)\n          return;\n        response.body.emit(\"error\", error);\n      };\n      if (signal && signal.aborted) {\n        abort();\n        return;\n      }\n      const abortAndFinalize = function abortAndFinalize() {\n        abort();\n        finalize();\n      };\n      const req = send(options);\n      let reqTimeout;\n      if (signal) {\n        signal.addEventListener(\"abort\", abortAndFinalize);\n      }\n      function finalize() {\n        req.abort();\n        if (signal)\n          signal.removeEventListener(\"abort\", abortAndFinalize);\n        clearTimeout(reqTimeout);\n      }\n      if (request.timeout) {\n        req.once(\"socket\", function(socket) {\n          reqTimeout = setTimeout(function() {\n            reject(new FetchError(`network timeout at: ${request.url}`, \"request-timeout\"));\n            finalize();\n          }, request.timeout);\n        });\n      }\n      req.on(\"error\", function(err) {\n        reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, \"system\", err));\n        if (response && response.body) {\n          destroyStream(response.body, err);\n        }\n        finalize();\n      });\n      fixResponseChunkedTransferBadEnding(req, function(err) {\n        if (signal && signal.aborted) {\n          return;\n        }\n        if (response && response.body) {\n          destroyStream(response.body, err);\n        }\n      });\n      if (parseInt(process.version.substring(1)) < 14) {\n        req.on(\"socket\", function(s) {\n          s.addListener(\"close\", function(hadError) {\n            const hasDataListener = s.listenerCount(\"data\") > 0;\n            if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n              const err = new Error(\"Premature close\");\n              err.code = \"ERR_STREAM_PREMATURE_CLOSE\";\n              response.body.emit(\"error\", err);\n            }\n          });\n        });\n      }\n      req.on(\"response\", function(res) {\n        clearTimeout(reqTimeout);\n        const headers = createHeadersLenient(res.headers);\n        if (fetch.isRedirect(res.statusCode)) {\n          const location = headers.get(\"Location\");\n          let locationURL = null;\n          try {\n            locationURL = location === null ? null : new URL$1(location, request.url).toString();\n          } catch (err) {\n            if (request.redirect !== \"manual\") {\n              reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, \"invalid-redirect\"));\n              finalize();\n              return;\n            }\n          }\n          switch (request.redirect) {\n            case \"error\":\n              reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, \"no-redirect\"));\n              finalize();\n              return;\n            case \"manual\":\n              if (locationURL !== null) {\n                try {\n                  headers.set(\"Location\", locationURL);\n                } catch (err) {\n                  reject(err);\n                }\n              }\n              break;\n            case \"follow\":\n              if (locationURL === null) {\n                break;\n              }\n              if (request.counter >= request.follow) {\n                reject(new FetchError(`maximum redirect reached at: ${request.url}`, \"max-redirect\"));\n                finalize();\n                return;\n              }\n              const requestOpts = {\n                headers: new Headers(request.headers),\n                follow: request.follow,\n                counter: request.counter + 1,\n                agent: request.agent,\n                compress: request.compress,\n                method: request.method,\n                body: request.body,\n                signal: request.signal,\n                timeout: request.timeout,\n                size: request.size\n              };\n              if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n                for (const name of [\"authorization\", \"www-authenticate\", \"cookie\", \"cookie2\"]) {\n                  requestOpts.headers.delete(name);\n                }\n              }\n              if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n                reject(new FetchError(\"Cannot follow redirect with body being a readable stream\", \"unsupported-redirect\"));\n                finalize();\n                return;\n              }\n              if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === \"POST\") {\n                requestOpts.method = \"GET\";\n                requestOpts.body = undefined;\n                requestOpts.headers.delete(\"content-length\");\n              }\n              resolve(fetch(new Request(locationURL, requestOpts)));\n              finalize();\n              return;\n          }\n        }\n        res.once(\"end\", function() {\n          if (signal)\n            signal.removeEventListener(\"abort\", abortAndFinalize);\n        });\n        let body = res.pipe(new PassThrough$1);\n        const response_options = {\n          url: request.url,\n          status: res.statusCode,\n          statusText: res.statusMessage,\n          headers,\n          size: request.size,\n          timeout: request.timeout,\n          counter: request.counter\n        };\n        const codings = headers.get(\"Content-Encoding\");\n        if (!request.compress || request.method === \"HEAD\" || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n          response = new Response(body, response_options);\n          resolve(response);\n          return;\n        }\n        const zlibOptions = {\n          flush: zlib.Z_SYNC_FLUSH,\n          finishFlush: zlib.Z_SYNC_FLUSH\n        };\n        if (codings == \"gzip\" || codings == \"x-gzip\") {\n          body = body.pipe(zlib.createGunzip(zlibOptions));\n          response = new Response(body, response_options);\n          resolve(response);\n          return;\n        }\n        if (codings == \"deflate\" || codings == \"x-deflate\") {\n          const raw = res.pipe(new PassThrough$1);\n          raw.once(\"data\", function(chunk) {\n            if ((chunk[0] & 15) === 8) {\n              body = body.pipe(zlib.createInflate());\n            } else {\n              body = body.pipe(zlib.createInflateRaw());\n            }\n            response = new Response(body, response_options);\n            resolve(response);\n          });\n          raw.on(\"end\", function() {\n            if (!response) {\n              response = new Response(body, response_options);\n              resolve(response);\n            }\n          });\n          return;\n        }\n        if (codings == \"br\" && typeof zlib.createBrotliDecompress === \"function\") {\n          body = body.pipe(zlib.createBrotliDecompress());\n          response = new Response(body, response_options);\n          resolve(response);\n          return;\n        }\n        response = new Response(body, response_options);\n        resolve(response);\n      });\n      writeToStream(req, request);\n    });\n  };\n  var fixResponseChunkedTransferBadEnding = function(request, errorCallback) {\n    let socket;\n    request.on(\"socket\", function(s) {\n      socket = s;\n    });\n    request.on(\"response\", function(response) {\n      const headers = response.headers;\n      if (headers[\"transfer-encoding\"] === \"chunked\" && !headers[\"content-length\"]) {\n        response.once(\"close\", function(hadError) {\n          const hasDataListener = socket && socket.listenerCount(\"data\") > 0;\n          if (hasDataListener && !hadError) {\n            const err = new Error(\"Premature close\");\n            err.code = \"ERR_STREAM_PREMATURE_CLOSE\";\n            errorCallback(err);\n          }\n        });\n      }\n    });\n  };\n  var destroyStream = function(stream, err) {\n    if (stream.destroy) {\n      stream.destroy(err);\n    } else {\n      stream.emit(\"error\", err);\n      stream.end();\n    }\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var Stream = _interopDefault(__require(\"stream\"));\n  var http = _interopDefault(__require(\"http\"));\n  var Url = _interopDefault(__require(\"url\"));\n  var whatwgUrl = _interopDefault(require_public_api());\n  var https = _interopDefault(__require(\"https\"));\n  var zlib = _interopDefault(__require(\"zlib\"));\n  var Readable = Stream.Readable;\n  var BUFFER = Symbol(\"buffer\");\n  var TYPE = Symbol(\"type\");\n\n  class Blob {\n    constructor() {\n      this[TYPE] = \"\";\n      const blobParts = arguments[0];\n      const options = arguments[1];\n      const buffers = [];\n      let size = 0;\n      if (blobParts) {\n        const a = blobParts;\n        const length = Number(a.length);\n        for (let i = 0;i < length; i++) {\n          const element = a[i];\n          let buffer;\n          if (element instanceof Buffer) {\n            buffer = element;\n          } else if (ArrayBuffer.isView(element)) {\n            buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n          } else if (element instanceof ArrayBuffer) {\n            buffer = Buffer.from(element);\n          } else if (element instanceof Blob) {\n            buffer = element[BUFFER];\n          } else {\n            buffer = Buffer.from(typeof element === \"string\" ? element : String(element));\n          }\n          size += buffer.length;\n          buffers.push(buffer);\n        }\n      }\n      this[BUFFER] = Buffer.concat(buffers);\n      let type = options && options.type !== undefined && String(options.type).toLowerCase();\n      if (type && !/[^\\u0020-\\u007E]/.test(type)) {\n        this[TYPE] = type;\n      }\n    }\n    get size() {\n      return this[BUFFER].length;\n    }\n    get type() {\n      return this[TYPE];\n    }\n    text() {\n      return Promise.resolve(this[BUFFER].toString());\n    }\n    arrayBuffer() {\n      const buf = this[BUFFER];\n      const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n      return Promise.resolve(ab);\n    }\n    stream() {\n      const readable = new Readable;\n      readable._read = function() {\n      };\n      readable.push(this[BUFFER]);\n      readable.push(null);\n      return readable;\n    }\n    toString() {\n      return \"[object Blob]\";\n    }\n    slice() {\n      const size = this.size;\n      const start = arguments[0];\n      const end = arguments[1];\n      let relativeStart, relativeEnd;\n      if (start === undefined) {\n        relativeStart = 0;\n      } else if (start < 0) {\n        relativeStart = Math.max(size + start, 0);\n      } else {\n        relativeStart = Math.min(start, size);\n      }\n      if (end === undefined) {\n        relativeEnd = size;\n      } else if (end < 0) {\n        relativeEnd = Math.max(size + end, 0);\n      } else {\n        relativeEnd = Math.min(end, size);\n      }\n      const span = Math.max(relativeEnd - relativeStart, 0);\n      const buffer = this[BUFFER];\n      const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n      const blob = new Blob([], { type: arguments[2] });\n      blob[BUFFER] = slicedBuffer;\n      return blob;\n    }\n  }\n  Object.defineProperties(Blob.prototype, {\n    size: { enumerable: true },\n    type: { enumerable: true },\n    slice: { enumerable: true }\n  });\n  Object.defineProperty(Blob.prototype, Symbol.toStringTag, {\n    value: \"Blob\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  FetchError.prototype = Object.create(Error.prototype);\n  FetchError.prototype.constructor = FetchError;\n  FetchError.prototype.name = \"FetchError\";\n  var convert;\n  try {\n    convert = (() => { throw (new Error(`Cannot require module \"encoding\"`)); } )().convert;\n  } catch (e) {\n  }\n  var INTERNALS = Symbol(\"Body internals\");\n  var PassThrough = Stream.PassThrough;\n  Body.prototype = {\n    get body() {\n      return this[INTERNALS].body;\n    },\n    get bodyUsed() {\n      return this[INTERNALS].disturbed;\n    },\n    arrayBuffer() {\n      return consumeBody.call(this).then(function(buf) {\n        return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n      });\n    },\n    blob() {\n      let ct = this.headers && this.headers.get(\"content-type\") || \"\";\n      return consumeBody.call(this).then(function(buf) {\n        return Object.assign(new Blob([], {\n          type: ct.toLowerCase()\n        }), {\n          [BUFFER]: buf\n        });\n      });\n    },\n    json() {\n      var _this2 = this;\n      return consumeBody.call(this).then(function(buffer) {\n        try {\n          return JSON.parse(buffer.toString());\n        } catch (err) {\n          return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, \"invalid-json\"));\n        }\n      });\n    },\n    text() {\n      return consumeBody.call(this).then(function(buffer) {\n        return buffer.toString();\n      });\n    },\n    buffer() {\n      return consumeBody.call(this);\n    },\n    textConverted() {\n      var _this3 = this;\n      return consumeBody.call(this).then(function(buffer) {\n        return convertBody(buffer, _this3.headers);\n      });\n    }\n  };\n  Object.defineProperties(Body.prototype, {\n    body: { enumerable: true },\n    bodyUsed: { enumerable: true },\n    arrayBuffer: { enumerable: true },\n    blob: { enumerable: true },\n    json: { enumerable: true },\n    text: { enumerable: true }\n  });\n  Body.mixIn = function(proto) {\n    for (const name of Object.getOwnPropertyNames(Body.prototype)) {\n      if (!(name in proto)) {\n        const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n        Object.defineProperty(proto, name, desc);\n      }\n    }\n  };\n  Body.Promise = global.Promise;\n  var invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\n  var invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n  var MAP = Symbol(\"map\");\n\n  class Headers {\n    constructor() {\n      let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      this[MAP] = Object.create(null);\n      if (init instanceof Headers) {\n        const rawHeaders = init.raw();\n        const headerNames = Object.keys(rawHeaders);\n        for (const headerName of headerNames) {\n          for (const value of rawHeaders[headerName]) {\n            this.append(headerName, value);\n          }\n        }\n        return;\n      }\n      if (init == null)\n        ;\n      else if (typeof init === \"object\") {\n        const method = init[Symbol.iterator];\n        if (method != null) {\n          if (typeof method !== \"function\") {\n            throw new TypeError(\"Header pairs must be iterable\");\n          }\n          const pairs = [];\n          for (const pair of init) {\n            if (typeof pair !== \"object\" || typeof pair[Symbol.iterator] !== \"function\") {\n              throw new TypeError(\"Each header pair must be iterable\");\n            }\n            pairs.push(Array.from(pair));\n          }\n          for (const pair of pairs) {\n            if (pair.length !== 2) {\n              throw new TypeError(\"Each header pair must be a name/value tuple\");\n            }\n            this.append(pair[0], pair[1]);\n          }\n        } else {\n          for (const key of Object.keys(init)) {\n            const value = init[key];\n            this.append(key, value);\n          }\n        }\n      } else {\n        throw new TypeError(\"Provided initializer must be an object\");\n      }\n    }\n    get(name) {\n      name = `${name}`;\n      validateName(name);\n      const key = find(this[MAP], name);\n      if (key === undefined) {\n        return null;\n      }\n      return this[MAP][key].join(\", \");\n    }\n    forEach(callback) {\n      let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      let pairs = getHeaders(this);\n      let i = 0;\n      while (i < pairs.length) {\n        var _pairs$i = pairs[i];\n        const name = _pairs$i[0], value = _pairs$i[1];\n        callback.call(thisArg, value, name, this);\n        pairs = getHeaders(this);\n        i++;\n      }\n    }\n    set(name, value) {\n      name = `${name}`;\n      value = `${value}`;\n      validateName(name);\n      validateValue(value);\n      const key = find(this[MAP], name);\n      this[MAP][key !== undefined ? key : name] = [value];\n    }\n    append(name, value) {\n      name = `${name}`;\n      value = `${value}`;\n      validateName(name);\n      validateValue(value);\n      const key = find(this[MAP], name);\n      if (key !== undefined) {\n        this[MAP][key].push(value);\n      } else {\n        this[MAP][name] = [value];\n      }\n    }\n    has(name) {\n      name = `${name}`;\n      validateName(name);\n      return find(this[MAP], name) !== undefined;\n    }\n    delete(name) {\n      name = `${name}`;\n      validateName(name);\n      const key = find(this[MAP], name);\n      if (key !== undefined) {\n        delete this[MAP][key];\n      }\n    }\n    raw() {\n      return this[MAP];\n    }\n    keys() {\n      return createHeadersIterator(this, \"key\");\n    }\n    values() {\n      return createHeadersIterator(this, \"value\");\n    }\n    [Symbol.iterator]() {\n      return createHeadersIterator(this, \"key+value\");\n    }\n  }\n  Headers.prototype.entries = Headers.prototype[Symbol.iterator];\n  Object.defineProperty(Headers.prototype, Symbol.toStringTag, {\n    value: \"Headers\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperties(Headers.prototype, {\n    get: { enumerable: true },\n    forEach: { enumerable: true },\n    set: { enumerable: true },\n    append: { enumerable: true },\n    has: { enumerable: true },\n    delete: { enumerable: true },\n    keys: { enumerable: true },\n    values: { enumerable: true },\n    entries: { enumerable: true }\n  });\n  var INTERNAL = Symbol(\"internal\");\n  var HeadersIteratorPrototype = Object.setPrototypeOf({\n    next() {\n      if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n        throw new TypeError(\"Value of `this` is not a HeadersIterator\");\n      }\n      var _INTERNAL = this[INTERNAL];\n      const { target, kind, index } = _INTERNAL;\n      const values = getHeaders(target, kind);\n      const len = values.length;\n      if (index >= len) {\n        return {\n          value: undefined,\n          done: true\n        };\n      }\n      this[INTERNAL].index = index + 1;\n      return {\n        value: values[index],\n        done: false\n      };\n    }\n  }, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n  Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n    value: \"HeadersIterator\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  var INTERNALS$1 = Symbol(\"Response internals\");\n  var STATUS_CODES = http.STATUS_CODES;\n\n  class Response {\n    constructor() {\n      let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      Body.call(this, body, opts);\n      const status = opts.status || 200;\n      const headers = new Headers(opts.headers);\n      if (body != null && !headers.has(\"Content-Type\")) {\n        const contentType = extractContentType(body);\n        if (contentType) {\n          headers.append(\"Content-Type\", contentType);\n        }\n      }\n      this[INTERNALS$1] = {\n        url: opts.url,\n        status,\n        statusText: opts.statusText || STATUS_CODES[status],\n        headers,\n        counter: opts.counter\n      };\n    }\n    get url() {\n      return this[INTERNALS$1].url || \"\";\n    }\n    get status() {\n      return this[INTERNALS$1].status;\n    }\n    get ok() {\n      return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n    }\n    get redirected() {\n      return this[INTERNALS$1].counter > 0;\n    }\n    get statusText() {\n      return this[INTERNALS$1].statusText;\n    }\n    get headers() {\n      return this[INTERNALS$1].headers;\n    }\n    clone() {\n      return new Response(clone(this), {\n        url: this.url,\n        status: this.status,\n        statusText: this.statusText,\n        headers: this.headers,\n        ok: this.ok,\n        redirected: this.redirected\n      });\n    }\n  }\n  Body.mixIn(Response.prototype);\n  Object.defineProperties(Response.prototype, {\n    url: { enumerable: true },\n    status: { enumerable: true },\n    ok: { enumerable: true },\n    redirected: { enumerable: true },\n    statusText: { enumerable: true },\n    headers: { enumerable: true },\n    clone: { enumerable: true }\n  });\n  Object.defineProperty(Response.prototype, Symbol.toStringTag, {\n    value: \"Response\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  var INTERNALS$2 = Symbol(\"Request internals\");\n  var URL3 = Url.URL || whatwgUrl.URL;\n  var parse_url = Url.parse;\n  var format_url = Url.format;\n  var streamDestructionSupported = \"destroy\" in Stream.Readable.prototype;\n\n  class Request {\n    constructor(input) {\n      let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let parsedURL;\n      if (!isRequest(input)) {\n        if (input && input.href) {\n          parsedURL = parseURL(input.href);\n        } else {\n          parsedURL = parseURL(`${input}`);\n        }\n        input = {};\n      } else {\n        parsedURL = parseURL(input.url);\n      }\n      let method = init.method || input.method || \"GET\";\n      method = method.toUpperCase();\n      if ((init.body != null || isRequest(input) && input.body !== null) && (method === \"GET\" || method === \"HEAD\")) {\n        throw new TypeError(\"Request with GET/HEAD method cannot have body\");\n      }\n      let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n      Body.call(this, inputBody, {\n        timeout: init.timeout || input.timeout || 0,\n        size: init.size || input.size || 0\n      });\n      const headers = new Headers(init.headers || input.headers || {});\n      if (inputBody != null && !headers.has(\"Content-Type\")) {\n        const contentType = extractContentType(inputBody);\n        if (contentType) {\n          headers.append(\"Content-Type\", contentType);\n        }\n      }\n      let signal = isRequest(input) ? input.signal : null;\n      if (\"signal\" in init)\n        signal = init.signal;\n      if (signal != null && !isAbortSignal(signal)) {\n        throw new TypeError(\"Expected signal to be an instanceof AbortSignal\");\n      }\n      this[INTERNALS$2] = {\n        method,\n        redirect: init.redirect || input.redirect || \"follow\",\n        headers,\n        parsedURL,\n        signal\n      };\n      this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n      this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n      this.counter = init.counter || input.counter || 0;\n      this.agent = init.agent || input.agent;\n    }\n    get method() {\n      return this[INTERNALS$2].method;\n    }\n    get url() {\n      return format_url(this[INTERNALS$2].parsedURL);\n    }\n    get headers() {\n      return this[INTERNALS$2].headers;\n    }\n    get redirect() {\n      return this[INTERNALS$2].redirect;\n    }\n    get signal() {\n      return this[INTERNALS$2].signal;\n    }\n    clone() {\n      return new Request(this);\n    }\n  }\n  Body.mixIn(Request.prototype);\n  Object.defineProperty(Request.prototype, Symbol.toStringTag, {\n    value: \"Request\",\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperties(Request.prototype, {\n    method: { enumerable: true },\n    url: { enumerable: true },\n    headers: { enumerable: true },\n    redirect: { enumerable: true },\n    clone: { enumerable: true },\n    signal: { enumerable: true }\n  });\n  AbortError.prototype = Object.create(Error.prototype);\n  AbortError.prototype.constructor = AbortError;\n  AbortError.prototype.name = \"AbortError\";\n  var URL$1 = Url.URL || whatwgUrl.URL;\n  var PassThrough$1 = Stream.PassThrough;\n  var isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n    const orig = new URL$1(original).hostname;\n    const dest = new URL$1(destination).hostname;\n    return orig === dest || orig[orig.length - dest.length - 1] === \".\" && orig.endsWith(dest);\n  };\n  var isSameProtocol = function isSameProtocol(destination, original) {\n    const orig = new URL$1(original).protocol;\n    const dest = new URL$1(destination).protocol;\n    return orig === dest;\n  };\n  fetch.isRedirect = function(code) {\n    return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n  };\n  fetch.Promise = global.Promise;\n  module.exports = exports = fetch;\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.default = exports;\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.FetchError = FetchError;\n});\n\n// node_modules/deprecation/dist-node/index.js\nvar require_dist_node3 = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n\n  class Deprecation extends Error {\n    constructor(message) {\n      super(message);\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n      }\n      this.name = \"Deprecation\";\n    }\n  }\n  exports.Deprecation = Deprecation;\n});\n\n// node_modules/wrappy/wrappy.js\nvar require_wrappy = __commonJS((exports, module) => {\n  var wrappy = function(fn, cb) {\n    if (fn && cb)\n      return wrappy(fn)(cb);\n    if (typeof fn !== \"function\")\n      throw new TypeError(\"need wrapper function\");\n    Object.keys(fn).forEach(function(k) {\n      wrapper[k] = fn[k];\n    });\n    return wrapper;\n    function wrapper() {\n      var args = new Array(arguments.length);\n      for (var i = 0;i < args.length; i++) {\n        args[i] = arguments[i];\n      }\n      var ret = fn.apply(this, args);\n      var cb2 = args[args.length - 1];\n      if (typeof ret === \"function\" && ret !== cb2) {\n        Object.keys(cb2).forEach(function(k) {\n          ret[k] = cb2[k];\n        });\n      }\n      return ret;\n    }\n  };\n  module.exports = wrappy;\n});\n\n// node_modules/once/once.js\nvar require_once = __commonJS((exports, module) => {\n  var once = function(fn) {\n    var f = function() {\n      if (f.called)\n        return f.value;\n      f.called = true;\n      return f.value = fn.apply(this, arguments);\n    };\n    f.called = false;\n    return f;\n  };\n  var onceStrict = function(fn) {\n    var f = function() {\n      if (f.called)\n        throw new Error(f.onceError);\n      f.called = true;\n      return f.value = fn.apply(this, arguments);\n    };\n    var name = fn.name || \"Function wrapped with `once`\";\n    f.onceError = name + \" shouldn't be called more than once\";\n    f.called = false;\n    return f;\n  };\n  var wrappy = require_wrappy();\n  module.exports = wrappy(once);\n  module.exports.strict = wrappy(onceStrict);\n  once.proto = once(function() {\n    Object.defineProperty(Function.prototype, \"once\", {\n      value: function() {\n        return once(this);\n      },\n      configurable: true\n    });\n    Object.defineProperty(Function.prototype, \"onceStrict\", {\n      value: function() {\n        return onceStrict(this);\n      },\n      configurable: true\n    });\n  });\n});\n\n// node_modules/@octokit/request/node_modules/@octokit/request-error/dist-node/index.js\nvar require_dist_node4 = __commonJS((exports) => {\n  var _interopDefault = function(ex) {\n    return ex && typeof ex === \"object\" && (\"default\" in ex) ? ex[\"default\"] : ex;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var deprecation = require_dist_node3();\n  var once = _interopDefault(require_once());\n  var logOnceCode = once((deprecation2) => console.warn(deprecation2));\n  var logOnceHeaders = once((deprecation2) => console.warn(deprecation2));\n\n  class RequestError extends Error {\n    constructor(message, statusCode, options) {\n      super(message);\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n      }\n      this.name = \"HttpError\";\n      this.status = statusCode;\n      let headers;\n      if ((\"headers\" in options) && typeof options.headers !== \"undefined\") {\n        headers = options.headers;\n      }\n      if (\"response\" in options) {\n        this.response = options.response;\n        headers = options.response.headers;\n      }\n      const requestCopy = Object.assign({}, options.request);\n      if (options.request.headers.authorization) {\n        requestCopy.headers = Object.assign({}, options.request.headers, {\n          authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n        });\n      }\n      requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n      this.request = requestCopy;\n      Object.defineProperty(this, \"code\", {\n        get() {\n          logOnceCode(new deprecation.Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n          return statusCode;\n        }\n      });\n      Object.defineProperty(this, \"headers\", {\n        get() {\n          logOnceHeaders(new deprecation.Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n          return headers || {};\n        }\n      });\n    }\n  }\n  exports.RequestError = RequestError;\n});\n\n// node_modules/@octokit/request/dist-node/index.js\nvar require_dist_node5 = __commonJS((exports) => {\n  var _interopDefault = function(ex) {\n    return ex && typeof ex === \"object\" && (\"default\" in ex) ? ex[\"default\"] : ex;\n  };\n  var getBufferResponse = function(response) {\n    return response.arrayBuffer();\n  };\n  var fetchWrapper = function(requestOptions) {\n    const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;\n    if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n      requestOptions.body = JSON.stringify(requestOptions.body);\n    }\n    let headers = {};\n    let status;\n    let url;\n    const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n    return fetch(requestOptions.url, Object.assign({\n      method: requestOptions.method,\n      body: requestOptions.body,\n      headers: requestOptions.headers,\n      redirect: requestOptions.redirect\n    }, requestOptions.request)).then(async (response) => {\n      url = response.url;\n      status = response.status;\n      for (const keyAndValue of response.headers) {\n        headers[keyAndValue[0]] = keyAndValue[1];\n      }\n      if (\"deprecation\" in headers) {\n        const matches = headers.link && headers.link.match(/<([^>]+)>; rel=\"deprecation\"/);\n        const deprecationLink = matches && matches.pop();\n        log.warn(`[@octokit/request] \"${requestOptions.method} ${requestOptions.url}\" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : \"\"}`);\n      }\n      if (status === 204 || status === 205) {\n        return;\n      }\n      if (requestOptions.method === \"HEAD\") {\n        if (status < 400) {\n          return;\n        }\n        throw new requestError.RequestError(response.statusText, status, {\n          response: {\n            url,\n            status,\n            headers,\n            data: undefined\n          },\n          request: requestOptions\n        });\n      }\n      if (status === 304) {\n        throw new requestError.RequestError(\"Not modified\", status, {\n          response: {\n            url,\n            status,\n            headers,\n            data: await getResponseData(response)\n          },\n          request: requestOptions\n        });\n      }\n      if (status >= 400) {\n        const data = await getResponseData(response);\n        const error = new requestError.RequestError(toErrorMessage(data), status, {\n          response: {\n            url,\n            status,\n            headers,\n            data\n          },\n          request: requestOptions\n        });\n        throw error;\n      }\n      return getResponseData(response);\n    }).then((data) => {\n      return {\n        status,\n        url,\n        headers,\n        data\n      };\n    }).catch((error) => {\n      if (error instanceof requestError.RequestError)\n        throw error;\n      throw new requestError.RequestError(error.message, 500, {\n        request: requestOptions\n      });\n    });\n  };\n  async function getResponseData(response) {\n    const contentType = response.headers.get(\"content-type\");\n    if (/application\\/json/.test(contentType)) {\n      return response.json();\n    }\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n      return response.text();\n    }\n    return getBufferResponse(response);\n  }\n  var toErrorMessage = function(data) {\n    if (typeof data === \"string\")\n      return data;\n    if (\"message\" in data) {\n      if (Array.isArray(data.errors)) {\n        return `${data.message}: ${data.errors.map(JSON.stringify).join(\", \")}`;\n      }\n      return data.message;\n    }\n    return `Unknown error: ${JSON.stringify(data)}`;\n  };\n  var withDefaults = function(oldEndpoint, newDefaults) {\n    const endpoint2 = oldEndpoint.defaults(newDefaults);\n    const newApi = function(route, parameters) {\n      const endpointOptions = endpoint2.merge(route, parameters);\n      if (!endpointOptions.request || !endpointOptions.request.hook) {\n        return fetchWrapper(endpoint2.parse(endpointOptions));\n      }\n      const request2 = (route2, parameters2) => {\n        return fetchWrapper(endpoint2.parse(endpoint2.merge(route2, parameters2)));\n      };\n      Object.assign(request2, {\n        endpoint: endpoint2,\n        defaults: withDefaults.bind(null, endpoint2)\n      });\n      return endpointOptions.request.hook(request2, endpointOptions);\n    };\n    return Object.assign(newApi, {\n      endpoint: endpoint2,\n      defaults: withDefaults.bind(null, endpoint2)\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var endpoint = require_dist_node2();\n  var universalUserAgent = require_dist_node();\n  var isPlainObject = require_is_plain_object();\n  var nodeFetch = _interopDefault(require_lib3());\n  var requestError = require_dist_node4();\n  var VERSION = \"5.6.3\";\n  var request = withDefaults(endpoint.endpoint, {\n    headers: {\n      \"user-agent\": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n    }\n  });\n  exports.request = request;\n});\n\n// node_modules/@octokit/graphql/dist-node/index.js\nvar require_dist_node6 = __commonJS((exports) => {\n  var _buildMessageForResponseErrors = function(data) {\n    return `Request failed due to following response errors:\\n` + data.errors.map((e) => ` - ${e.message}`).join(\"\\n\");\n  };\n  var graphql = function(request2, query, options) {\n    if (options) {\n      if (typeof query === \"string\" && (\"query\" in options)) {\n        return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n      }\n      for (const key in options) {\n        if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key))\n          continue;\n        return Promise.reject(new Error(`[@octokit/graphql] \"${key}\" cannot be used as variable name`));\n      }\n    }\n    const parsedOptions = typeof query === \"string\" ? Object.assign({\n      query\n    }, options) : query;\n    const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n      if (NON_VARIABLE_OPTIONS.includes(key)) {\n        result[key] = parsedOptions[key];\n        return result;\n      }\n      if (!result.variables) {\n        result.variables = {};\n      }\n      result.variables[key] = parsedOptions[key];\n      return result;\n    }, {});\n    const baseUrl = parsedOptions.baseUrl || request2.endpoint.DEFAULTS.baseUrl;\n    if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n      requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n    }\n    return request2(requestOptions).then((response) => {\n      if (response.data.errors) {\n        const headers = {};\n        for (const key of Object.keys(response.headers)) {\n          headers[key] = response.headers[key];\n        }\n        throw new GraphqlResponseError(requestOptions, headers, response.data);\n      }\n      return response.data.data;\n    });\n  };\n  var withDefaults = function(request$1, newDefaults) {\n    const newRequest = request$1.defaults(newDefaults);\n    const newApi = (query, options) => {\n      return graphql(newRequest, query, options);\n    };\n    return Object.assign(newApi, {\n      defaults: withDefaults.bind(null, newRequest),\n      endpoint: request.request.endpoint\n    });\n  };\n  var withCustomRequest = function(customRequest) {\n    return withDefaults(customRequest, {\n      method: \"POST\",\n      url: \"/graphql\"\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var request = require_dist_node5();\n  var universalUserAgent = require_dist_node();\n  var VERSION = \"4.8.0\";\n\n  class GraphqlResponseError extends Error {\n    constructor(request2, headers, response) {\n      super(_buildMessageForResponseErrors(response));\n      this.request = request2;\n      this.headers = headers;\n      this.response = response;\n      this.name = \"GraphqlResponseError\";\n      this.errors = response.errors;\n      this.data = response.data;\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n      }\n    }\n  }\n  var NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\n  var FORBIDDEN_VARIABLE_OPTIONS = [\"query\", \"method\", \"url\"];\n  var GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\n  var graphql$1 = withDefaults(request.request, {\n    headers: {\n      \"user-agent\": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n    },\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n  exports.GraphqlResponseError = GraphqlResponseError;\n  exports.graphql = graphql$1;\n  exports.withCustomRequest = withCustomRequest;\n});\n\n// node_modules/@octokit/auth-token/dist-node/index.js\nvar require_dist_node7 = __commonJS((exports) => {\n  async function auth(token) {\n    const isApp = token.split(/\\./).length === 3;\n    const isInstallation = REGEX_IS_INSTALLATION_LEGACY.test(token) || REGEX_IS_INSTALLATION.test(token);\n    const isUserToServer = REGEX_IS_USER_TO_SERVER.test(token);\n    const tokenType = isApp ? \"app\" : isInstallation ? \"installation\" : isUserToServer ? \"user-to-server\" : \"oauth\";\n    return {\n      type: \"token\",\n      token,\n      tokenType\n    };\n  }\n  var withAuthorizationPrefix = function(token) {\n    if (token.split(/\\./).length === 3) {\n      return `bearer ${token}`;\n    }\n    return `token ${token}`;\n  };\n  async function hook(token, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    endpoint.headers.authorization = withAuthorizationPrefix(token);\n    return request(endpoint);\n  }\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var REGEX_IS_INSTALLATION_LEGACY = /^v1\\./;\n  var REGEX_IS_INSTALLATION = /^ghs_/;\n  var REGEX_IS_USER_TO_SERVER = /^ghu_/;\n  var createTokenAuth = function createTokenAuth(token) {\n    if (!token) {\n      throw new Error(\"[@octokit/auth-token] No token passed to createTokenAuth\");\n    }\n    if (typeof token !== \"string\") {\n      throw new Error(\"[@octokit/auth-token] Token passed to createTokenAuth is not a string\");\n    }\n    token = token.replace(/^(token|bearer) +/i, \"\");\n    return Object.assign(auth.bind(null, token), {\n      hook: hook.bind(null, token)\n    });\n  };\n  exports.createTokenAuth = createTokenAuth;\n});\n\n// node_modules/@octokit/core/dist-node/index.js\nvar require_dist_node8 = __commonJS((exports) => {\n  var _objectWithoutPropertiesLoose = function(source, excluded) {\n    if (source == null)\n      return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0;i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0)\n        continue;\n      target[key] = source[key];\n    }\n    return target;\n  };\n  var _objectWithoutProperties = function(source, excluded) {\n    if (source == null)\n      return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n      for (i = 0;i < sourceSymbolKeys.length; i++) {\n        key = sourceSymbolKeys[i];\n        if (excluded.indexOf(key) >= 0)\n          continue;\n        if (!Object.prototype.propertyIsEnumerable.call(source, key))\n          continue;\n        target[key] = source[key];\n      }\n    }\n    return target;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var universalUserAgent = require_dist_node();\n  var beforeAfterHook = require_before_after_hook();\n  var request = require_dist_node5();\n  var graphql = require_dist_node6();\n  var authToken = require_dist_node7();\n  var VERSION = \"3.6.0\";\n  var _excluded = [\"authStrategy\"];\n\n  class Octokit {\n    constructor(options = {}) {\n      const hook = new beforeAfterHook.Collection;\n      const requestDefaults = {\n        baseUrl: request.request.endpoint.DEFAULTS.baseUrl,\n        headers: {},\n        request: Object.assign({}, options.request, {\n          hook: hook.bind(null, \"request\")\n        }),\n        mediaType: {\n          previews: [],\n          format: \"\"\n        }\n      };\n      requestDefaults.headers[\"user-agent\"] = [options.userAgent, `octokit-core.js/${VERSION} ${universalUserAgent.getUserAgent()}`].filter(Boolean).join(\" \");\n      if (options.baseUrl) {\n        requestDefaults.baseUrl = options.baseUrl;\n      }\n      if (options.previews) {\n        requestDefaults.mediaType.previews = options.previews;\n      }\n      if (options.timeZone) {\n        requestDefaults.headers[\"time-zone\"] = options.timeZone;\n      }\n      this.request = request.request.defaults(requestDefaults);\n      this.graphql = graphql.withCustomRequest(this.request).defaults(requestDefaults);\n      this.log = Object.assign({\n        debug: () => {\n        },\n        info: () => {\n        },\n        warn: console.warn.bind(console),\n        error: console.error.bind(console)\n      }, options.log);\n      this.hook = hook;\n      if (!options.authStrategy) {\n        if (!options.auth) {\n          this.auth = async () => ({\n            type: \"unauthenticated\"\n          });\n        } else {\n          const auth = authToken.createTokenAuth(options.auth);\n          hook.wrap(\"request\", auth.hook);\n          this.auth = auth;\n        }\n      } else {\n        const {\n          authStrategy\n        } = options, otherOptions = _objectWithoutProperties(options, _excluded);\n        const auth = authStrategy(Object.assign({\n          request: this.request,\n          log: this.log,\n          octokit: this,\n          octokitOptions: otherOptions\n        }, options.auth));\n        hook.wrap(\"request\", auth.hook);\n        this.auth = auth;\n      }\n      const classConstructor = this.constructor;\n      classConstructor.plugins.forEach((plugin) => {\n        Object.assign(this, plugin(this, options));\n      });\n    }\n    static defaults(defaults) {\n      const OctokitWithDefaults = class extends this {\n        constructor(...args) {\n          const options = args[0] || {};\n          if (typeof defaults === \"function\") {\n            super(defaults(options));\n            return;\n          }\n          super(Object.assign({}, defaults, options, options.userAgent && defaults.userAgent ? {\n            userAgent: `${options.userAgent} ${defaults.userAgent}`\n          } : null));\n        }\n      };\n      return OctokitWithDefaults;\n    }\n    static plugin(...newPlugins) {\n      var _a;\n      const currentPlugins = this.plugins;\n      const NewOctokit = (_a = class extends this {\n      }, _a.plugins = currentPlugins.concat(newPlugins.filter((plugin) => !currentPlugins.includes(plugin))), _a);\n      return NewOctokit;\n    }\n  }\n  Octokit.VERSION = VERSION;\n  Octokit.plugins = [];\n  exports.Octokit = Octokit;\n});\n\n// node_modules/@octokit/request-error/dist-node/index.js\nvar require_dist_node9 = __commonJS((exports, module) => {\n  var __create2 = Object.create;\n  var __defProp2 = Object.defineProperty;\n  var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames2 = Object.getOwnPropertyNames;\n  var __getProtoOf2 = Object.getPrototypeOf;\n  var __hasOwnProp2 = Object.prototype.hasOwnProperty;\n  var __export2 = (target, all) => {\n    for (var name in all)\n      __defProp2(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames2(from))\n        if (!__hasOwnProp2.call(to, key) && key !== except)\n          __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toESM2 = (mod, isNodeMode, target) => (target = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp2(target, \"default\", { value: mod, enumerable: true }) : target, mod));\n  var __toCommonJS2 = (mod) => __copyProps(__defProp2({}, \"__esModule\", { value: true }), mod);\n  var dist_src_exports = {};\n  __export2(dist_src_exports, {\n    RequestError: () => RequestError\n  });\n  module.exports = __toCommonJS2(dist_src_exports);\n  var import_deprecation = require_dist_node3();\n  var import_once = __toESM2(require_once());\n  var logOnceCode = (0, import_once.default)((deprecation) => console.warn(deprecation));\n  var logOnceHeaders = (0, import_once.default)((deprecation) => console.warn(deprecation));\n  var RequestError = class extends Error {\n    constructor(message, statusCode, options) {\n      super(message);\n      if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n      }\n      this.name = \"HttpError\";\n      this.status = statusCode;\n      let headers;\n      if ((\"headers\" in options) && typeof options.headers !== \"undefined\") {\n        headers = options.headers;\n      }\n      if (\"response\" in options) {\n        this.response = options.response;\n        headers = options.response.headers;\n      }\n      const requestCopy = Object.assign({}, options.request);\n      if (options.request.headers.authorization) {\n        requestCopy.headers = Object.assign({}, options.request.headers, {\n          authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n        });\n      }\n      requestCopy.url = requestCopy.url.replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\").replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n      this.request = requestCopy;\n      Object.defineProperty(this, \"code\", {\n        get() {\n          logOnceCode(new import_deprecation.Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n          return statusCode;\n        }\n      });\n      Object.defineProperty(this, \"headers\", {\n        get() {\n          logOnceHeaders(new import_deprecation.Deprecation(\"[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.\"));\n          return headers || {};\n        }\n      });\n    }\n  };\n});\n\n// node_modules/@octokit/plugin-create-or-update-text-file/dist-node/index.js\nvar require_dist_node10 = __commonJS((exports, module) => {\n  var nodeUtf8ToBase64 = function(data) {\n    return Buffer.from(data, \"utf-8\").toString(\"base64\");\n  };\n  var nodeBase64ToUtf8 = function(data) {\n    return Buffer.from(data, \"base64\").toString(\"utf-8\");\n  };\n  var browserUtf8ToBase64 = function(data) {\n    return btoa(encodeURIComponent(data).replace(/%([0-9A-F]{2})/g, function toSolidBytes(_match, p1) {\n      return String.fromCharCode(\"0x\" + p1);\n    }));\n  };\n  var browserBase64ToUtf8 = function(data) {\n    return decodeURIComponent(atob(data).split(\"\").map(function(c) {\n      return \"%\" + (\"00\" + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(\"\"));\n  };\n  async function getFileContents(octokit, options) {\n    const route = \"GET /repos/{owner}/{repo}/contents/{path}\";\n    const { branch, ...parameters } = options;\n    const getContentsParameters = {\n      ...parameters,\n      ref: branch\n    };\n    const requestOptions = octokit.request.endpoint(route, getContentsParameters);\n    const { data } = await octokit.request(route, getContentsParameters).catch((error) => {\n      if (error.status !== 404)\n        throw error;\n      return {\n        data: {\n          content: null,\n          type: \"\",\n          sha: \"\"\n        }\n      };\n    });\n    if (Array.isArray(data)) {\n      throw new import_request_error.RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a directory`, 403, {\n        request: requestOptions\n      });\n    }\n    if (!((\"sha\" in data) && (\"content\" in data))) {\n      throw new import_request_error.RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is not a file, but a ${data.type}`, 403, {\n        request: requestOptions\n      });\n    }\n    if (data.content === null) {\n      return {\n        content: null\n      };\n    }\n    try {\n      return {\n        content: base64ToUtf8(data.content),\n        sha: data.sha\n      };\n    } catch (error) {\n      if (error.message !== \"URI malformed\")\n        throw error;\n      throw new import_request_error.RequestError(`[@octokit/plugin-create-or-update-text-file] ${requestOptions.url} is a binary file, only text files are supported`, 403, {\n        request: requestOptions\n      });\n    }\n  }\n  async function composeCreateOrUpdateTextFile(octokit, options) {\n    const {\n      content: contentOrFn,\n      message,\n      committer,\n      author,\n      ...getOptions\n    } = options;\n    const currentFile = await getFileContents(octokit, getOptions);\n    const content = typeof contentOrFn === \"function\" ? await contentOrFn({\n      exists: currentFile.content !== null,\n      content: currentFile.content\n    }) : contentOrFn;\n    if (content === currentFile.content) {\n      return {\n        updated: false,\n        deleted: false,\n        data: {},\n        headers: {}\n      };\n    }\n    if (currentFile.sha && content === null) {\n      const response2 = await octokit.request(\"DELETE /repos/{owner}/{repo}/contents/{path}\", {\n        ...getOptions,\n        message,\n        sha: currentFile.sha\n      });\n      return {\n        ...response2,\n        updated: true,\n        deleted: true\n      };\n    }\n    const response = await octokit.request(\"PUT /repos/{owner}/{repo}/contents/{path}\", {\n      ...getOptions,\n      message,\n      ...currentFile,\n      content: utf8ToBase64(content)\n    });\n    return {\n      ...response,\n      updated: true,\n      deleted: false,\n      content\n    };\n  }\n  var createOrUpdateTextFile = function(octokit) {\n    return {\n      createOrUpdateTextFile(options) {\n        return composeCreateOrUpdateTextFile(octokit, options);\n      }\n    };\n  };\n  var __defProp2 = Object.defineProperty;\n  var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;\n  var __getOwnPropNames2 = Object.getOwnPropertyNames;\n  var __hasOwnProp2 = Object.prototype.hasOwnProperty;\n  var __export2 = (target, all) => {\n    for (var name in all)\n      __defProp2(target, name, { get: all[name], enumerable: true });\n  };\n  var __copyProps = (to, from, except, desc) => {\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n      for (let key of __getOwnPropNames2(from))\n        if (!__hasOwnProp2.call(to, key) && key !== except)\n          __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });\n    }\n    return to;\n  };\n  var __toCommonJS2 = (mod) => __copyProps(__defProp2({}, \"__esModule\", { value: true }), mod);\n  var dist_src_exports = {};\n  __export2(dist_src_exports, {\n    composeCreateOrUpdateTextFile: () => composeCreateOrUpdateTextFile,\n    createOrUpdateTextFile: () => createOrUpdateTextFile\n  });\n  module.exports = __toCommonJS2(dist_src_exports);\n  var import_core3 = require_dist_node8();\n  var import_core2 = require_dist_node8();\n  var import_request_error = require_dist_node9();\n  var import_core = require_dist_node8();\n  var isNode = globalThis.process && globalThis.process.release && globalThis.process.release.name;\n  var utf8ToBase64 = isNode ? nodeUtf8ToBase64 : browserUtf8ToBase64;\n  var base64ToUtf8 = isNode ? nodeBase64ToUtf8 : browserBase64ToUtf8;\n  var VERSION = \"4.0.0\";\n  createOrUpdateTextFile.VERSION = VERSION;\n});\n\n// node_modules/@actions/github/lib/context.js\nvar require_context = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Context = undefined;\n  var fs_1 = __require(\"fs\");\n  var os_1 = __require(\"os\");\n\n  class Context {\n    constructor() {\n      var _a, _b, _c;\n      this.payload = {};\n      if (process.env.GITHUB_EVENT_PATH) {\n        if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {\n          this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: \"utf8\" }));\n        } else {\n          const path = process.env.GITHUB_EVENT_PATH;\n          process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`);\n        }\n      }\n      this.eventName = process.env.GITHUB_EVENT_NAME;\n      this.sha = process.env.GITHUB_SHA;\n      this.ref = process.env.GITHUB_REF;\n      this.workflow = process.env.GITHUB_WORKFLOW;\n      this.action = process.env.GITHUB_ACTION;\n      this.actor = process.env.GITHUB_ACTOR;\n      this.job = process.env.GITHUB_JOB;\n      this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10);\n      this.runId = parseInt(process.env.GITHUB_RUN_ID, 10);\n      this.apiUrl = (_a = process.env.GITHUB_API_URL) !== null && _a !== undefined ? _a : `https://api.github.com`;\n      this.serverUrl = (_b = process.env.GITHUB_SERVER_URL) !== null && _b !== undefined ? _b : `https://github.com`;\n      this.graphqlUrl = (_c = process.env.GITHUB_GRAPHQL_URL) !== null && _c !== undefined ? _c : `https://api.github.com/graphql`;\n    }\n    get issue() {\n      const payload = this.payload;\n      return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pull_request || payload).number });\n    }\n    get repo() {\n      if (process.env.GITHUB_REPOSITORY) {\n        const [owner, repo] = process.env.GITHUB_REPOSITORY.split(\"/\");\n        return { owner, repo };\n      }\n      if (this.payload.repository) {\n        return {\n          owner: this.payload.repository.owner.login,\n          repo: this.payload.repository.name\n        };\n      }\n      throw new Error(\"context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'\");\n    }\n  }\n  exports.Context = Context;\n});\n\n// node_modules/@actions/github/lib/internal/utils.js\nvar require_utils3 = __commonJS((exports) => {\n  var getAuthString = function(token, options) {\n    if (!token && !options.auth) {\n      throw new Error(\"Parameter token or opts.auth is required\");\n    } else if (token && options.auth) {\n      throw new Error(\"Parameters token and opts.auth may not both be specified\");\n    }\n    return typeof options.auth === \"string\" ? options.auth : `token ${token}`;\n  };\n  var getProxyAgent = function(destinationUrl) {\n    const hc = new httpClient.HttpClient;\n    return hc.getAgent(destinationUrl);\n  };\n  var getApiBaseUrl = function() {\n    return process.env[\"GITHUB_API_URL\"] || \"https://api.github.com\";\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.getApiBaseUrl = exports.getProxyAgent = exports.getAuthString = undefined;\n  var httpClient = __importStar(require_lib());\n  exports.getAuthString = getAuthString;\n  exports.getProxyAgent = getProxyAgent;\n  exports.getApiBaseUrl = getApiBaseUrl;\n});\n\n// node_modules/@octokit/plugin-rest-endpoint-methods/dist-node/index.js\nvar require_dist_node11 = __commonJS((exports) => {\n  var ownKeys = function(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      if (enumerableOnly) {\n        symbols = symbols.filter(function(sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n      keys.push.apply(keys, symbols);\n    }\n    return keys;\n  };\n  var _objectSpread2 = function(target) {\n    for (var i = 1;i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function(key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function(key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n    return target;\n  };\n  var _defineProperty = function(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  };\n  var endpointsToMethods = function(octokit, endpointsMap) {\n    const newMethods = {};\n    for (const [scope, endpoints] of Object.entries(endpointsMap)) {\n      for (const [methodName, endpoint] of Object.entries(endpoints)) {\n        const [route, defaults, decorations] = endpoint;\n        const [method, url] = route.split(/ /);\n        const endpointDefaults = Object.assign({\n          method,\n          url\n        }, defaults);\n        if (!newMethods[scope]) {\n          newMethods[scope] = {};\n        }\n        const scopeMethods = newMethods[scope];\n        if (decorations) {\n          scopeMethods[methodName] = decorate(octokit, scope, methodName, endpointDefaults, decorations);\n          continue;\n        }\n        scopeMethods[methodName] = octokit.request.defaults(endpointDefaults);\n      }\n    }\n    return newMethods;\n  };\n  var decorate = function(octokit, scope, methodName, defaults, decorations) {\n    const requestWithDefaults = octokit.request.defaults(defaults);\n    function withDecorations(...args) {\n      let options = requestWithDefaults.endpoint.merge(...args);\n      if (decorations.mapToData) {\n        options = Object.assign({}, options, {\n          data: options[decorations.mapToData],\n          [decorations.mapToData]: undefined\n        });\n        return requestWithDefaults(options);\n      }\n      if (decorations.renamed) {\n        const [newScope, newMethodName] = decorations.renamed;\n        octokit.log.warn(`octokit.${scope}.${methodName}() has been renamed to octokit.${newScope}.${newMethodName}()`);\n      }\n      if (decorations.deprecated) {\n        octokit.log.warn(decorations.deprecated);\n      }\n      if (decorations.renamedParameters) {\n        const options2 = requestWithDefaults.endpoint.merge(...args);\n        for (const [name, alias] of Object.entries(decorations.renamedParameters)) {\n          if (name in options2) {\n            octokit.log.warn(`\"${name}\" parameter is deprecated for \"octokit.${scope}.${methodName}()\". Use \"${alias}\" instead`);\n            if (!(alias in options2)) {\n              options2[alias] = options2[name];\n            }\n            delete options2[name];\n          }\n        }\n        return requestWithDefaults(options2);\n      }\n      return requestWithDefaults(...args);\n    }\n    return Object.assign(withDecorations, requestWithDefaults);\n  };\n  var restEndpointMethods = function(octokit) {\n    const api = endpointsToMethods(octokit, Endpoints);\n    return {\n      rest: api\n    };\n  };\n  var legacyRestEndpointMethods = function(octokit) {\n    const api = endpointsToMethods(octokit, Endpoints);\n    return _objectSpread2(_objectSpread2({}, api), {}, {\n      rest: api\n    });\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var Endpoints = {\n    actions: {\n      addCustomLabelsToSelfHostedRunnerForOrg: [\"POST /orgs/{org}/actions/runners/{runner_id}/labels\"],\n      addCustomLabelsToSelfHostedRunnerForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n      addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n      approveWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve\"],\n      cancelWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel\"],\n      createOrUpdateEnvironmentSecret: [\"PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n      createOrUpdateOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}\"],\n      createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n      createRegistrationTokenForOrg: [\"POST /orgs/{org}/actions/runners/registration-token\"],\n      createRegistrationTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/registration-token\"],\n      createRemoveTokenForOrg: [\"POST /orgs/{org}/actions/runners/remove-token\"],\n      createRemoveTokenForRepo: [\"POST /repos/{owner}/{repo}/actions/runners/remove-token\"],\n      createWorkflowDispatch: [\"POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches\"],\n      deleteActionsCacheById: [\"DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}\"],\n      deleteActionsCacheByKey: [\"DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}\"],\n      deleteArtifact: [\"DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n      deleteEnvironmentSecret: [\"DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n      deleteOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}\"],\n      deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n      deleteSelfHostedRunnerFromOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}\"],\n      deleteSelfHostedRunnerFromRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n      deleteWorkflowRun: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n      deleteWorkflowRunLogs: [\"DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n      disableSelectedRepositoryGithubActionsOrganization: [\"DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n      disableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable\"],\n      downloadArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}\"],\n      downloadJobLogsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs\"],\n      downloadWorkflowRunAttemptLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs\"],\n      downloadWorkflowRunLogs: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs\"],\n      enableSelectedRepositoryGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories/{repository_id}\"],\n      enableWorkflow: [\"PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable\"],\n      getActionsCacheList: [\"GET /repos/{owner}/{repo}/actions/caches\"],\n      getActionsCacheUsage: [\"GET /repos/{owner}/{repo}/actions/cache/usage\"],\n      getActionsCacheUsageByRepoForOrg: [\"GET /orgs/{org}/actions/cache/usage-by-repository\"],\n      getActionsCacheUsageForEnterprise: [\"GET /enterprises/{enterprise}/actions/cache/usage\"],\n      getActionsCacheUsageForOrg: [\"GET /orgs/{org}/actions/cache/usage\"],\n      getAllowedActionsOrganization: [\"GET /orgs/{org}/actions/permissions/selected-actions\"],\n      getAllowedActionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n      getArtifact: [\"GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}\"],\n      getEnvironmentPublicKey: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key\"],\n      getEnvironmentSecret: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}\"],\n      getGithubActionsDefaultWorkflowPermissionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/workflow\"],\n      getGithubActionsDefaultWorkflowPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions/workflow\"],\n      getGithubActionsDefaultWorkflowPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/workflow\"],\n      getGithubActionsPermissionsOrganization: [\"GET /orgs/{org}/actions/permissions\"],\n      getGithubActionsPermissionsRepository: [\"GET /repos/{owner}/{repo}/actions/permissions\"],\n      getJobForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/jobs/{job_id}\"],\n      getOrgPublicKey: [\"GET /orgs/{org}/actions/secrets/public-key\"],\n      getOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}\"],\n      getPendingDeploymentsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n      getRepoPermissions: [\"GET /repos/{owner}/{repo}/actions/permissions\", {}, {\n        renamed: [\"actions\", \"getGithubActionsPermissionsRepository\"]\n      }],\n      getRepoPublicKey: [\"GET /repos/{owner}/{repo}/actions/secrets/public-key\"],\n      getRepoSecret: [\"GET /repos/{owner}/{repo}/actions/secrets/{secret_name}\"],\n      getReviewsForRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals\"],\n      getSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}\"],\n      getSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}\"],\n      getWorkflow: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}\"],\n      getWorkflowAccessToRepository: [\"GET /repos/{owner}/{repo}/actions/permissions/access\"],\n      getWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}\"],\n      getWorkflowRunAttempt: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}\"],\n      getWorkflowRunUsage: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing\"],\n      getWorkflowUsage: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing\"],\n      listArtifactsForRepo: [\"GET /repos/{owner}/{repo}/actions/artifacts\"],\n      listEnvironmentSecrets: [\"GET /repositories/{repository_id}/environments/{environment_name}/secrets\"],\n      listJobsForWorkflowRun: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\"],\n      listJobsForWorkflowRunAttempt: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\"],\n      listLabelsForSelfHostedRunnerForOrg: [\"GET /orgs/{org}/actions/runners/{runner_id}/labels\"],\n      listLabelsForSelfHostedRunnerForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n      listOrgSecrets: [\"GET /orgs/{org}/actions/secrets\"],\n      listRepoSecrets: [\"GET /repos/{owner}/{repo}/actions/secrets\"],\n      listRepoWorkflows: [\"GET /repos/{owner}/{repo}/actions/workflows\"],\n      listRunnerApplicationsForOrg: [\"GET /orgs/{org}/actions/runners/downloads\"],\n      listRunnerApplicationsForRepo: [\"GET /repos/{owner}/{repo}/actions/runners/downloads\"],\n      listSelectedReposForOrgSecret: [\"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n      listSelectedRepositoriesEnabledGithubActionsOrganization: [\"GET /orgs/{org}/actions/permissions/repositories\"],\n      listSelfHostedRunnersForOrg: [\"GET /orgs/{org}/actions/runners\"],\n      listSelfHostedRunnersForRepo: [\"GET /repos/{owner}/{repo}/actions/runners\"],\n      listWorkflowRunArtifacts: [\"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\"],\n      listWorkflowRuns: [\"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\"],\n      listWorkflowRunsForRepo: [\"GET /repos/{owner}/{repo}/actions/runs\"],\n      reRunJobForWorkflowRun: [\"POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun\"],\n      reRunWorkflow: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun\"],\n      reRunWorkflowFailedJobs: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs\"],\n      removeAllCustomLabelsFromSelfHostedRunnerForOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}/labels\"],\n      removeAllCustomLabelsFromSelfHostedRunnerForRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n      removeCustomLabelFromSelfHostedRunnerForOrg: [\"DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}\"],\n      removeCustomLabelFromSelfHostedRunnerForRepo: [\"DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}\"],\n      removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}\"],\n      reviewPendingDeploymentsForRun: [\"POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments\"],\n      setAllowedActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/selected-actions\"],\n      setAllowedActionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/selected-actions\"],\n      setCustomLabelsForSelfHostedRunnerForOrg: [\"PUT /orgs/{org}/actions/runners/{runner_id}/labels\"],\n      setCustomLabelsForSelfHostedRunnerForRepo: [\"PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels\"],\n      setGithubActionsDefaultWorkflowPermissionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/workflow\"],\n      setGithubActionsDefaultWorkflowPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions/workflow\"],\n      setGithubActionsDefaultWorkflowPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/workflow\"],\n      setGithubActionsPermissionsOrganization: [\"PUT /orgs/{org}/actions/permissions\"],\n      setGithubActionsPermissionsRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions\"],\n      setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/actions/secrets/{secret_name}/repositories\"],\n      setSelectedRepositoriesEnabledGithubActionsOrganization: [\"PUT /orgs/{org}/actions/permissions/repositories\"],\n      setWorkflowAccessToRepository: [\"PUT /repos/{owner}/{repo}/actions/permissions/access\"]\n    },\n    activity: {\n      checkRepoIsStarredByAuthenticatedUser: [\"GET /user/starred/{owner}/{repo}\"],\n      deleteRepoSubscription: [\"DELETE /repos/{owner}/{repo}/subscription\"],\n      deleteThreadSubscription: [\"DELETE /notifications/threads/{thread_id}/subscription\"],\n      getFeeds: [\"GET /feeds\"],\n      getRepoSubscription: [\"GET /repos/{owner}/{repo}/subscription\"],\n      getThread: [\"GET /notifications/threads/{thread_id}\"],\n      getThreadSubscriptionForAuthenticatedUser: [\"GET /notifications/threads/{thread_id}/subscription\"],\n      listEventsForAuthenticatedUser: [\"GET /users/{username}/events\"],\n      listNotificationsForAuthenticatedUser: [\"GET /notifications\"],\n      listOrgEventsForAuthenticatedUser: [\"GET /users/{username}/events/orgs/{org}\"],\n      listPublicEvents: [\"GET /events\"],\n      listPublicEventsForRepoNetwork: [\"GET /networks/{owner}/{repo}/events\"],\n      listPublicEventsForUser: [\"GET /users/{username}/events/public\"],\n      listPublicOrgEvents: [\"GET /orgs/{org}/events\"],\n      listReceivedEventsForUser: [\"GET /users/{username}/received_events\"],\n      listReceivedPublicEventsForUser: [\"GET /users/{username}/received_events/public\"],\n      listRepoEvents: [\"GET /repos/{owner}/{repo}/events\"],\n      listRepoNotificationsForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/notifications\"],\n      listReposStarredByAuthenticatedUser: [\"GET /user/starred\"],\n      listReposStarredByUser: [\"GET /users/{username}/starred\"],\n      listReposWatchedByUser: [\"GET /users/{username}/subscriptions\"],\n      listStargazersForRepo: [\"GET /repos/{owner}/{repo}/stargazers\"],\n      listWatchedReposForAuthenticatedUser: [\"GET /user/subscriptions\"],\n      listWatchersForRepo: [\"GET /repos/{owner}/{repo}/subscribers\"],\n      markNotificationsAsRead: [\"PUT /notifications\"],\n      markRepoNotificationsAsRead: [\"PUT /repos/{owner}/{repo}/notifications\"],\n      markThreadAsRead: [\"PATCH /notifications/threads/{thread_id}\"],\n      setRepoSubscription: [\"PUT /repos/{owner}/{repo}/subscription\"],\n      setThreadSubscription: [\"PUT /notifications/threads/{thread_id}/subscription\"],\n      starRepoForAuthenticatedUser: [\"PUT /user/starred/{owner}/{repo}\"],\n      unstarRepoForAuthenticatedUser: [\"DELETE /user/starred/{owner}/{repo}\"]\n    },\n    apps: {\n      addRepoToInstallation: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\", {}, {\n        renamed: [\"apps\", \"addRepoToInstallationForAuthenticatedUser\"]\n      }],\n      addRepoToInstallationForAuthenticatedUser: [\"PUT /user/installations/{installation_id}/repositories/{repository_id}\"],\n      checkToken: [\"POST /applications/{client_id}/token\"],\n      createFromManifest: [\"POST /app-manifests/{code}/conversions\"],\n      createInstallationAccessToken: [\"POST /app/installations/{installation_id}/access_tokens\"],\n      deleteAuthorization: [\"DELETE /applications/{client_id}/grant\"],\n      deleteInstallation: [\"DELETE /app/installations/{installation_id}\"],\n      deleteToken: [\"DELETE /applications/{client_id}/token\"],\n      getAuthenticated: [\"GET /app\"],\n      getBySlug: [\"GET /apps/{app_slug}\"],\n      getInstallation: [\"GET /app/installations/{installation_id}\"],\n      getOrgInstallation: [\"GET /orgs/{org}/installation\"],\n      getRepoInstallation: [\"GET /repos/{owner}/{repo}/installation\"],\n      getSubscriptionPlanForAccount: [\"GET /marketplace_listing/accounts/{account_id}\"],\n      getSubscriptionPlanForAccountStubbed: [\"GET /marketplace_listing/stubbed/accounts/{account_id}\"],\n      getUserInstallation: [\"GET /users/{username}/installation\"],\n      getWebhookConfigForApp: [\"GET /app/hook/config\"],\n      getWebhookDelivery: [\"GET /app/hook/deliveries/{delivery_id}\"],\n      listAccountsForPlan: [\"GET /marketplace_listing/plans/{plan_id}/accounts\"],\n      listAccountsForPlanStubbed: [\"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\"],\n      listInstallationReposForAuthenticatedUser: [\"GET /user/installations/{installation_id}/repositories\"],\n      listInstallations: [\"GET /app/installations\"],\n      listInstallationsForAuthenticatedUser: [\"GET /user/installations\"],\n      listPlans: [\"GET /marketplace_listing/plans\"],\n      listPlansStubbed: [\"GET /marketplace_listing/stubbed/plans\"],\n      listReposAccessibleToInstallation: [\"GET /installation/repositories\"],\n      listSubscriptionsForAuthenticatedUser: [\"GET /user/marketplace_purchases\"],\n      listSubscriptionsForAuthenticatedUserStubbed: [\"GET /user/marketplace_purchases/stubbed\"],\n      listWebhookDeliveries: [\"GET /app/hook/deliveries\"],\n      redeliverWebhookDelivery: [\"POST /app/hook/deliveries/{delivery_id}/attempts\"],\n      removeRepoFromInstallation: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\", {}, {\n        renamed: [\"apps\", \"removeRepoFromInstallationForAuthenticatedUser\"]\n      }],\n      removeRepoFromInstallationForAuthenticatedUser: [\"DELETE /user/installations/{installation_id}/repositories/{repository_id}\"],\n      resetToken: [\"PATCH /applications/{client_id}/token\"],\n      revokeInstallationAccessToken: [\"DELETE /installation/token\"],\n      scopeToken: [\"POST /applications/{client_id}/token/scoped\"],\n      suspendInstallation: [\"PUT /app/installations/{installation_id}/suspended\"],\n      unsuspendInstallation: [\"DELETE /app/installations/{installation_id}/suspended\"],\n      updateWebhookConfigForApp: [\"PATCH /app/hook/config\"]\n    },\n    billing: {\n      getGithubActionsBillingOrg: [\"GET /orgs/{org}/settings/billing/actions\"],\n      getGithubActionsBillingUser: [\"GET /users/{username}/settings/billing/actions\"],\n      getGithubAdvancedSecurityBillingGhe: [\"GET /enterprises/{enterprise}/settings/billing/advanced-security\"],\n      getGithubAdvancedSecurityBillingOrg: [\"GET /orgs/{org}/settings/billing/advanced-security\"],\n      getGithubPackagesBillingOrg: [\"GET /orgs/{org}/settings/billing/packages\"],\n      getGithubPackagesBillingUser: [\"GET /users/{username}/settings/billing/packages\"],\n      getSharedStorageBillingOrg: [\"GET /orgs/{org}/settings/billing/shared-storage\"],\n      getSharedStorageBillingUser: [\"GET /users/{username}/settings/billing/shared-storage\"]\n    },\n    checks: {\n      create: [\"POST /repos/{owner}/{repo}/check-runs\"],\n      createSuite: [\"POST /repos/{owner}/{repo}/check-suites\"],\n      get: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}\"],\n      getSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}\"],\n      listAnnotations: [\"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\"],\n      listForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\"],\n      listForSuite: [\"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\"],\n      listSuitesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\"],\n      rerequestRun: [\"POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest\"],\n      rerequestSuite: [\"POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest\"],\n      setSuitesPreferences: [\"PATCH /repos/{owner}/{repo}/check-suites/preferences\"],\n      update: [\"PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}\"]\n    },\n    codeScanning: {\n      deleteAnalysis: [\"DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}\"],\n      getAlert: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\", {}, {\n        renamedParameters: {\n          alert_id: \"alert_number\"\n        }\n      }],\n      getAnalysis: [\"GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}\"],\n      getSarif: [\"GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}\"],\n      listAlertInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\"],\n      listAlertsForOrg: [\"GET /orgs/{org}/code-scanning/alerts\"],\n      listAlertsForRepo: [\"GET /repos/{owner}/{repo}/code-scanning/alerts\"],\n      listAlertsInstances: [\"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", {}, {\n        renamed: [\"codeScanning\", \"listAlertInstances\"]\n      }],\n      listRecentAnalyses: [\"GET /repos/{owner}/{repo}/code-scanning/analyses\"],\n      updateAlert: [\"PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}\"],\n      uploadSarif: [\"POST /repos/{owner}/{repo}/code-scanning/sarifs\"]\n    },\n    codesOfConduct: {\n      getAllCodesOfConduct: [\"GET /codes_of_conduct\"],\n      getConductCode: [\"GET /codes_of_conduct/{key}\"]\n    },\n    codespaces: {\n      addRepositoryForSecretForAuthenticatedUser: [\"PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"],\n      codespaceMachinesForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}/machines\"],\n      createForAuthenticatedUser: [\"POST /user/codespaces\"],\n      createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"],\n      createOrUpdateSecretForAuthenticatedUser: [\"PUT /user/codespaces/secrets/{secret_name}\"],\n      createWithPrForAuthenticatedUser: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces\"],\n      createWithRepoForAuthenticatedUser: [\"POST /repos/{owner}/{repo}/codespaces\"],\n      deleteForAuthenticatedUser: [\"DELETE /user/codespaces/{codespace_name}\"],\n      deleteFromOrganization: [\"DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}\"],\n      deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"],\n      deleteSecretForAuthenticatedUser: [\"DELETE /user/codespaces/secrets/{secret_name}\"],\n      exportForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/exports\"],\n      getExportDetailsForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}/exports/{export_id}\"],\n      getForAuthenticatedUser: [\"GET /user/codespaces/{codespace_name}\"],\n      getPublicKeyForAuthenticatedUser: [\"GET /user/codespaces/secrets/public-key\"],\n      getRepoPublicKey: [\"GET /repos/{owner}/{repo}/codespaces/secrets/public-key\"],\n      getRepoSecret: [\"GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}\"],\n      getSecretForAuthenticatedUser: [\"GET /user/codespaces/secrets/{secret_name}\"],\n      listDevcontainersInRepositoryForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces/devcontainers\"],\n      listForAuthenticatedUser: [\"GET /user/codespaces\"],\n      listInOrganization: [\"GET /orgs/{org}/codespaces\", {}, {\n        renamedParameters: {\n          org_id: \"org\"\n        }\n      }],\n      listInRepositoryForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces\"],\n      listRepoSecrets: [\"GET /repos/{owner}/{repo}/codespaces/secrets\"],\n      listRepositoriesForSecretForAuthenticatedUser: [\"GET /user/codespaces/secrets/{secret_name}/repositories\"],\n      listSecretsForAuthenticatedUser: [\"GET /user/codespaces/secrets\"],\n      removeRepositoryForSecretForAuthenticatedUser: [\"DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}\"],\n      repoMachinesForAuthenticatedUser: [\"GET /repos/{owner}/{repo}/codespaces/machines\"],\n      setRepositoriesForSecretForAuthenticatedUser: [\"PUT /user/codespaces/secrets/{secret_name}/repositories\"],\n      startForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/start\"],\n      stopForAuthenticatedUser: [\"POST /user/codespaces/{codespace_name}/stop\"],\n      stopInOrganization: [\"POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop\"],\n      updateForAuthenticatedUser: [\"PATCH /user/codespaces/{codespace_name}\"]\n    },\n    dependabot: {\n      addSelectedRepoToOrgSecret: [\"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"],\n      createOrUpdateOrgSecret: [\"PUT /orgs/{org}/dependabot/secrets/{secret_name}\"],\n      createOrUpdateRepoSecret: [\"PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"],\n      deleteOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}\"],\n      deleteRepoSecret: [\"DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"],\n      getOrgPublicKey: [\"GET /orgs/{org}/dependabot/secrets/public-key\"],\n      getOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}\"],\n      getRepoPublicKey: [\"GET /repos/{owner}/{repo}/dependabot/secrets/public-key\"],\n      getRepoSecret: [\"GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}\"],\n      listOrgSecrets: [\"GET /orgs/{org}/dependabot/secrets\"],\n      listRepoSecrets: [\"GET /repos/{owner}/{repo}/dependabot/secrets\"],\n      listSelectedReposForOrgSecret: [\"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"],\n      removeSelectedRepoFromOrgSecret: [\"DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}\"],\n      setSelectedReposForOrgSecret: [\"PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories\"]\n    },\n    dependencyGraph: {\n      createRepositorySnapshot: [\"POST /repos/{owner}/{repo}/dependency-graph/snapshots\"],\n      diffRange: [\"GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}\"]\n    },\n    emojis: {\n      get: [\"GET /emojis\"]\n    },\n    enterpriseAdmin: {\n      addCustomLabelsToSelfHostedRunnerForEnterprise: [\"POST /enterprises/{enterprise}/actions/runners/{runner_id}/labels\"],\n      disableSelectedOrganizationGithubActionsEnterprise: [\"DELETE /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n      enableSelectedOrganizationGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations/{org_id}\"],\n      getAllowedActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n      getGithubActionsPermissionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions\"],\n      getServerStatistics: [\"GET /enterprise-installation/{enterprise_or_org}/server-statistics\"],\n      listLabelsForSelfHostedRunnerForEnterprise: [\"GET /enterprises/{enterprise}/actions/runners/{runner_id}/labels\"],\n      listSelectedOrganizationsEnabledGithubActionsEnterprise: [\"GET /enterprises/{enterprise}/actions/permissions/organizations\"],\n      removeAllCustomLabelsFromSelfHostedRunnerForEnterprise: [\"DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels\"],\n      removeCustomLabelFromSelfHostedRunnerForEnterprise: [\"DELETE /enterprises/{enterprise}/actions/runners/{runner_id}/labels/{name}\"],\n      setAllowedActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/selected-actions\"],\n      setCustomLabelsForSelfHostedRunnerForEnterprise: [\"PUT /enterprises/{enterprise}/actions/runners/{runner_id}/labels\"],\n      setGithubActionsPermissionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions\"],\n      setSelectedOrganizationsEnabledGithubActionsEnterprise: [\"PUT /enterprises/{enterprise}/actions/permissions/organizations\"]\n    },\n    gists: {\n      checkIsStarred: [\"GET /gists/{gist_id}/star\"],\n      create: [\"POST /gists\"],\n      createComment: [\"POST /gists/{gist_id}/comments\"],\n      delete: [\"DELETE /gists/{gist_id}\"],\n      deleteComment: [\"DELETE /gists/{gist_id}/comments/{comment_id}\"],\n      fork: [\"POST /gists/{gist_id}/forks\"],\n      get: [\"GET /gists/{gist_id}\"],\n      getComment: [\"GET /gists/{gist_id}/comments/{comment_id}\"],\n      getRevision: [\"GET /gists/{gist_id}/{sha}\"],\n      list: [\"GET /gists\"],\n      listComments: [\"GET /gists/{gist_id}/comments\"],\n      listCommits: [\"GET /gists/{gist_id}/commits\"],\n      listForUser: [\"GET /users/{username}/gists\"],\n      listForks: [\"GET /gists/{gist_id}/forks\"],\n      listPublic: [\"GET /gists/public\"],\n      listStarred: [\"GET /gists/starred\"],\n      star: [\"PUT /gists/{gist_id}/star\"],\n      unstar: [\"DELETE /gists/{gist_id}/star\"],\n      update: [\"PATCH /gists/{gist_id}\"],\n      updateComment: [\"PATCH /gists/{gist_id}/comments/{comment_id}\"]\n    },\n    git: {\n      createBlob: [\"POST /repos/{owner}/{repo}/git/blobs\"],\n      createCommit: [\"POST /repos/{owner}/{repo}/git/commits\"],\n      createRef: [\"POST /repos/{owner}/{repo}/git/refs\"],\n      createTag: [\"POST /repos/{owner}/{repo}/git/tags\"],\n      createTree: [\"POST /repos/{owner}/{repo}/git/trees\"],\n      deleteRef: [\"DELETE /repos/{owner}/{repo}/git/refs/{ref}\"],\n      getBlob: [\"GET /repos/{owner}/{repo}/git/blobs/{file_sha}\"],\n      getCommit: [\"GET /repos/{owner}/{repo}/git/commits/{commit_sha}\"],\n      getRef: [\"GET /repos/{owner}/{repo}/git/ref/{ref}\"],\n      getTag: [\"GET /repos/{owner}/{repo}/git/tags/{tag_sha}\"],\n      getTree: [\"GET /repos/{owner}/{repo}/git/trees/{tree_sha}\"],\n      listMatchingRefs: [\"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\"],\n      updateRef: [\"PATCH /repos/{owner}/{repo}/git/refs/{ref}\"]\n    },\n    gitignore: {\n      getAllTemplates: [\"GET /gitignore/templates\"],\n      getTemplate: [\"GET /gitignore/templates/{name}\"]\n    },\n    interactions: {\n      getRestrictionsForAuthenticatedUser: [\"GET /user/interaction-limits\"],\n      getRestrictionsForOrg: [\"GET /orgs/{org}/interaction-limits\"],\n      getRestrictionsForRepo: [\"GET /repos/{owner}/{repo}/interaction-limits\"],\n      getRestrictionsForYourPublicRepos: [\"GET /user/interaction-limits\", {}, {\n        renamed: [\"interactions\", \"getRestrictionsForAuthenticatedUser\"]\n      }],\n      removeRestrictionsForAuthenticatedUser: [\"DELETE /user/interaction-limits\"],\n      removeRestrictionsForOrg: [\"DELETE /orgs/{org}/interaction-limits\"],\n      removeRestrictionsForRepo: [\"DELETE /repos/{owner}/{repo}/interaction-limits\"],\n      removeRestrictionsForYourPublicRepos: [\"DELETE /user/interaction-limits\", {}, {\n        renamed: [\"interactions\", \"removeRestrictionsForAuthenticatedUser\"]\n      }],\n      setRestrictionsForAuthenticatedUser: [\"PUT /user/interaction-limits\"],\n      setRestrictionsForOrg: [\"PUT /orgs/{org}/interaction-limits\"],\n      setRestrictionsForRepo: [\"PUT /repos/{owner}/{repo}/interaction-limits\"],\n      setRestrictionsForYourPublicRepos: [\"PUT /user/interaction-limits\", {}, {\n        renamed: [\"interactions\", \"setRestrictionsForAuthenticatedUser\"]\n      }]\n    },\n    issues: {\n      addAssignees: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n      addLabels: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n      checkUserCanBeAssigned: [\"GET /repos/{owner}/{repo}/assignees/{assignee}\"],\n      create: [\"POST /repos/{owner}/{repo}/issues\"],\n      createComment: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n      createLabel: [\"POST /repos/{owner}/{repo}/labels\"],\n      createMilestone: [\"POST /repos/{owner}/{repo}/milestones\"],\n      deleteComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n      deleteLabel: [\"DELETE /repos/{owner}/{repo}/labels/{name}\"],\n      deleteMilestone: [\"DELETE /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n      get: [\"GET /repos/{owner}/{repo}/issues/{issue_number}\"],\n      getComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n      getEvent: [\"GET /repos/{owner}/{repo}/issues/events/{event_id}\"],\n      getLabel: [\"GET /repos/{owner}/{repo}/labels/{name}\"],\n      getMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}\"],\n      list: [\"GET /issues\"],\n      listAssignees: [\"GET /repos/{owner}/{repo}/assignees\"],\n      listComments: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\"],\n      listCommentsForRepo: [\"GET /repos/{owner}/{repo}/issues/comments\"],\n      listEvents: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/events\"],\n      listEventsForRepo: [\"GET /repos/{owner}/{repo}/issues/events\"],\n      listEventsForTimeline: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\"],\n      listForAuthenticatedUser: [\"GET /user/issues\"],\n      listForOrg: [\"GET /orgs/{org}/issues\"],\n      listForRepo: [\"GET /repos/{owner}/{repo}/issues\"],\n      listLabelsForMilestone: [\"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\"],\n      listLabelsForRepo: [\"GET /repos/{owner}/{repo}/labels\"],\n      listLabelsOnIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n      listMilestones: [\"GET /repos/{owner}/{repo}/milestones\"],\n      lock: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n      removeAllLabels: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n      removeAssignees: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees\"],\n      removeLabel: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}\"],\n      setLabels: [\"PUT /repos/{owner}/{repo}/issues/{issue_number}/labels\"],\n      unlock: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock\"],\n      update: [\"PATCH /repos/{owner}/{repo}/issues/{issue_number}\"],\n      updateComment: [\"PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}\"],\n      updateLabel: [\"PATCH /repos/{owner}/{repo}/labels/{name}\"],\n      updateMilestone: [\"PATCH /repos/{owner}/{repo}/milestones/{milestone_number}\"]\n    },\n    licenses: {\n      get: [\"GET /licenses/{license}\"],\n      getAllCommonlyUsed: [\"GET /licenses\"],\n      getForRepo: [\"GET /repos/{owner}/{repo}/license\"]\n    },\n    markdown: {\n      render: [\"POST /markdown\"],\n      renderRaw: [\"POST /markdown/raw\", {\n        headers: {\n          \"content-type\": \"text/plain; charset=utf-8\"\n        }\n      }]\n    },\n    meta: {\n      get: [\"GET /meta\"],\n      getOctocat: [\"GET /octocat\"],\n      getZen: [\"GET /zen\"],\n      root: [\"GET /\"]\n    },\n    migrations: {\n      cancelImport: [\"DELETE /repos/{owner}/{repo}/import\"],\n      deleteArchiveForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/archive\"],\n      deleteArchiveForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/archive\"],\n      downloadArchiveForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/archive\"],\n      getArchiveForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/archive\"],\n      getCommitAuthors: [\"GET /repos/{owner}/{repo}/import/authors\"],\n      getImportStatus: [\"GET /repos/{owner}/{repo}/import\"],\n      getLargeFiles: [\"GET /repos/{owner}/{repo}/import/large_files\"],\n      getStatusForAuthenticatedUser: [\"GET /user/migrations/{migration_id}\"],\n      getStatusForOrg: [\"GET /orgs/{org}/migrations/{migration_id}\"],\n      listForAuthenticatedUser: [\"GET /user/migrations\"],\n      listForOrg: [\"GET /orgs/{org}/migrations\"],\n      listReposForAuthenticatedUser: [\"GET /user/migrations/{migration_id}/repositories\"],\n      listReposForOrg: [\"GET /orgs/{org}/migrations/{migration_id}/repositories\"],\n      listReposForUser: [\"GET /user/migrations/{migration_id}/repositories\", {}, {\n        renamed: [\"migrations\", \"listReposForAuthenticatedUser\"]\n      }],\n      mapCommitAuthor: [\"PATCH /repos/{owner}/{repo}/import/authors/{author_id}\"],\n      setLfsPreference: [\"PATCH /repos/{owner}/{repo}/import/lfs\"],\n      startForAuthenticatedUser: [\"POST /user/migrations\"],\n      startForOrg: [\"POST /orgs/{org}/migrations\"],\n      startImport: [\"PUT /repos/{owner}/{repo}/import\"],\n      unlockRepoForAuthenticatedUser: [\"DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock\"],\n      unlockRepoForOrg: [\"DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock\"],\n      updateImport: [\"PATCH /repos/{owner}/{repo}/import\"]\n    },\n    orgs: {\n      blockUser: [\"PUT /orgs/{org}/blocks/{username}\"],\n      cancelInvitation: [\"DELETE /orgs/{org}/invitations/{invitation_id}\"],\n      checkBlockedUser: [\"GET /orgs/{org}/blocks/{username}\"],\n      checkMembershipForUser: [\"GET /orgs/{org}/members/{username}\"],\n      checkPublicMembershipForUser: [\"GET /orgs/{org}/public_members/{username}\"],\n      convertMemberToOutsideCollaborator: [\"PUT /orgs/{org}/outside_collaborators/{username}\"],\n      createInvitation: [\"POST /orgs/{org}/invitations\"],\n      createWebhook: [\"POST /orgs/{org}/hooks\"],\n      deleteWebhook: [\"DELETE /orgs/{org}/hooks/{hook_id}\"],\n      get: [\"GET /orgs/{org}\"],\n      getMembershipForAuthenticatedUser: [\"GET /user/memberships/orgs/{org}\"],\n      getMembershipForUser: [\"GET /orgs/{org}/memberships/{username}\"],\n      getWebhook: [\"GET /orgs/{org}/hooks/{hook_id}\"],\n      getWebhookConfigForOrg: [\"GET /orgs/{org}/hooks/{hook_id}/config\"],\n      getWebhookDelivery: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}\"],\n      list: [\"GET /organizations\"],\n      listAppInstallations: [\"GET /orgs/{org}/installations\"],\n      listBlockedUsers: [\"GET /orgs/{org}/blocks\"],\n      listCustomRoles: [\"GET /organizations/{organization_id}/custom_roles\"],\n      listFailedInvitations: [\"GET /orgs/{org}/failed_invitations\"],\n      listForAuthenticatedUser: [\"GET /user/orgs\"],\n      listForUser: [\"GET /users/{username}/orgs\"],\n      listInvitationTeams: [\"GET /orgs/{org}/invitations/{invitation_id}/teams\"],\n      listMembers: [\"GET /orgs/{org}/members\"],\n      listMembershipsForAuthenticatedUser: [\"GET /user/memberships/orgs\"],\n      listOutsideCollaborators: [\"GET /orgs/{org}/outside_collaborators\"],\n      listPendingInvitations: [\"GET /orgs/{org}/invitations\"],\n      listPublicMembers: [\"GET /orgs/{org}/public_members\"],\n      listWebhookDeliveries: [\"GET /orgs/{org}/hooks/{hook_id}/deliveries\"],\n      listWebhooks: [\"GET /orgs/{org}/hooks\"],\n      pingWebhook: [\"POST /orgs/{org}/hooks/{hook_id}/pings\"],\n      redeliverWebhookDelivery: [\"POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"],\n      removeMember: [\"DELETE /orgs/{org}/members/{username}\"],\n      removeMembershipForUser: [\"DELETE /orgs/{org}/memberships/{username}\"],\n      removeOutsideCollaborator: [\"DELETE /orgs/{org}/outside_collaborators/{username}\"],\n      removePublicMembershipForAuthenticatedUser: [\"DELETE /orgs/{org}/public_members/{username}\"],\n      setMembershipForUser: [\"PUT /orgs/{org}/memberships/{username}\"],\n      setPublicMembershipForAuthenticatedUser: [\"PUT /orgs/{org}/public_members/{username}\"],\n      unblockUser: [\"DELETE /orgs/{org}/blocks/{username}\"],\n      update: [\"PATCH /orgs/{org}\"],\n      updateMembershipForAuthenticatedUser: [\"PATCH /user/memberships/orgs/{org}\"],\n      updateWebhook: [\"PATCH /orgs/{org}/hooks/{hook_id}\"],\n      updateWebhookConfigForOrg: [\"PATCH /orgs/{org}/hooks/{hook_id}/config\"]\n    },\n    packages: {\n      deletePackageForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}\"],\n      deletePackageForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}\"],\n      deletePackageForUser: [\"DELETE /users/{username}/packages/{package_type}/{package_name}\"],\n      deletePackageVersionForAuthenticatedUser: [\"DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n      deletePackageVersionForOrg: [\"DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n      deletePackageVersionForUser: [\"DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n      getAllPackageVersionsForAPackageOwnedByAnOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\", {}, {\n        renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByOrg\"]\n      }],\n      getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\", {}, {\n        renamed: [\"packages\", \"getAllPackageVersionsForPackageOwnedByAuthenticatedUser\"]\n      }],\n      getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions\"],\n      getAllPackageVersionsForPackageOwnedByOrg: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\"],\n      getAllPackageVersionsForPackageOwnedByUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions\"],\n      getPackageForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}\"],\n      getPackageForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}\"],\n      getPackageForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}\"],\n      getPackageVersionForAuthenticatedUser: [\"GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n      getPackageVersionForOrganization: [\"GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n      getPackageVersionForUser: [\"GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}\"],\n      listPackagesForAuthenticatedUser: [\"GET /user/packages\"],\n      listPackagesForOrganization: [\"GET /orgs/{org}/packages\"],\n      listPackagesForUser: [\"GET /users/{username}/packages\"],\n      restorePackageForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/restore{?token}\"],\n      restorePackageForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}\"],\n      restorePackageForUser: [\"POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}\"],\n      restorePackageVersionForAuthenticatedUser: [\"POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n      restorePackageVersionForOrg: [\"POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"],\n      restorePackageVersionForUser: [\"POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore\"]\n    },\n    projects: {\n      addCollaborator: [\"PUT /projects/{project_id}/collaborators/{username}\"],\n      createCard: [\"POST /projects/columns/{column_id}/cards\"],\n      createColumn: [\"POST /projects/{project_id}/columns\"],\n      createForAuthenticatedUser: [\"POST /user/projects\"],\n      createForOrg: [\"POST /orgs/{org}/projects\"],\n      createForRepo: [\"POST /repos/{owner}/{repo}/projects\"],\n      delete: [\"DELETE /projects/{project_id}\"],\n      deleteCard: [\"DELETE /projects/columns/cards/{card_id}\"],\n      deleteColumn: [\"DELETE /projects/columns/{column_id}\"],\n      get: [\"GET /projects/{project_id}\"],\n      getCard: [\"GET /projects/columns/cards/{card_id}\"],\n      getColumn: [\"GET /projects/columns/{column_id}\"],\n      getPermissionForUser: [\"GET /projects/{project_id}/collaborators/{username}/permission\"],\n      listCards: [\"GET /projects/columns/{column_id}/cards\"],\n      listCollaborators: [\"GET /projects/{project_id}/collaborators\"],\n      listColumns: [\"GET /projects/{project_id}/columns\"],\n      listForOrg: [\"GET /orgs/{org}/projects\"],\n      listForRepo: [\"GET /repos/{owner}/{repo}/projects\"],\n      listForUser: [\"GET /users/{username}/projects\"],\n      moveCard: [\"POST /projects/columns/cards/{card_id}/moves\"],\n      moveColumn: [\"POST /projects/columns/{column_id}/moves\"],\n      removeCollaborator: [\"DELETE /projects/{project_id}/collaborators/{username}\"],\n      update: [\"PATCH /projects/{project_id}\"],\n      updateCard: [\"PATCH /projects/columns/cards/{card_id}\"],\n      updateColumn: [\"PATCH /projects/columns/{column_id}\"]\n    },\n    pulls: {\n      checkIfMerged: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n      create: [\"POST /repos/{owner}/{repo}/pulls\"],\n      createReplyForReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies\"],\n      createReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n      createReviewComment: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n      deletePendingReview: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n      deleteReviewComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n      dismissReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals\"],\n      get: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}\"],\n      getReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n      getReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}\"],\n      list: [\"GET /repos/{owner}/{repo}/pulls\"],\n      listCommentsForReview: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\"],\n      listCommits: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\"],\n      listFiles: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\"],\n      listRequestedReviewers: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n      listReviewComments: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\"],\n      listReviewCommentsForRepo: [\"GET /repos/{owner}/{repo}/pulls/comments\"],\n      listReviews: [\"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\"],\n      merge: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge\"],\n      removeRequestedReviewers: [\"DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n      requestReviewers: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\"],\n      submitReview: [\"POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events\"],\n      update: [\"PATCH /repos/{owner}/{repo}/pulls/{pull_number}\"],\n      updateBranch: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch\"],\n      updateReview: [\"PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}\"],\n      updateReviewComment: [\"PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}\"]\n    },\n    rateLimit: {\n      get: [\"GET /rate_limit\"]\n    },\n    reactions: {\n      createForCommitComment: [\"POST /repos/{owner}/{repo}/comments/{comment_id}/reactions\"],\n      createForIssue: [\"POST /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n      createForIssueComment: [\"POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"],\n      createForPullRequestReviewComment: [\"POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"],\n      createForRelease: [\"POST /repos/{owner}/{repo}/releases/{release_id}/reactions\"],\n      createForTeamDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"],\n      createForTeamDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"],\n      deleteForCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}\"],\n      deleteForIssue: [\"DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}\"],\n      deleteForIssueComment: [\"DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}\"],\n      deleteForPullRequestComment: [\"DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}\"],\n      deleteForRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}\"],\n      deleteForTeamDiscussion: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}\"],\n      deleteForTeamDiscussionComment: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}\"],\n      listForCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\"],\n      listForIssue: [\"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\"],\n      listForIssueComment: [\"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\"],\n      listForPullRequestReviewComment: [\"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\"],\n      listForRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\"],\n      listForTeamDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\"],\n      listForTeamDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\"]\n    },\n    repos: {\n      acceptInvitation: [\"PATCH /user/repository_invitations/{invitation_id}\", {}, {\n        renamed: [\"repos\", \"acceptInvitationForAuthenticatedUser\"]\n      }],\n      acceptInvitationForAuthenticatedUser: [\"PATCH /user/repository_invitations/{invitation_id}\"],\n      addAppAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n        mapToData: \"apps\"\n      }],\n      addCollaborator: [\"PUT /repos/{owner}/{repo}/collaborators/{username}\"],\n      addStatusCheckContexts: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n        mapToData: \"contexts\"\n      }],\n      addTeamAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n        mapToData: \"teams\"\n      }],\n      addUserAccessRestrictions: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n        mapToData: \"users\"\n      }],\n      checkCollaborator: [\"GET /repos/{owner}/{repo}/collaborators/{username}\"],\n      checkVulnerabilityAlerts: [\"GET /repos/{owner}/{repo}/vulnerability-alerts\"],\n      codeownersErrors: [\"GET /repos/{owner}/{repo}/codeowners/errors\"],\n      compareCommits: [\"GET /repos/{owner}/{repo}/compare/{base}...{head}\"],\n      compareCommitsWithBasehead: [\"GET /repos/{owner}/{repo}/compare/{basehead}\"],\n      createAutolink: [\"POST /repos/{owner}/{repo}/autolinks\"],\n      createCommitComment: [\"POST /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n      createCommitSignatureProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"],\n      createCommitStatus: [\"POST /repos/{owner}/{repo}/statuses/{sha}\"],\n      createDeployKey: [\"POST /repos/{owner}/{repo}/keys\"],\n      createDeployment: [\"POST /repos/{owner}/{repo}/deployments\"],\n      createDeploymentStatus: [\"POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n      createDispatchEvent: [\"POST /repos/{owner}/{repo}/dispatches\"],\n      createForAuthenticatedUser: [\"POST /user/repos\"],\n      createFork: [\"POST /repos/{owner}/{repo}/forks\"],\n      createInOrg: [\"POST /orgs/{org}/repos\"],\n      createOrUpdateEnvironment: [\"PUT /repos/{owner}/{repo}/environments/{environment_name}\"],\n      createOrUpdateFileContents: [\"PUT /repos/{owner}/{repo}/contents/{path}\"],\n      createPagesSite: [\"POST /repos/{owner}/{repo}/pages\"],\n      createRelease: [\"POST /repos/{owner}/{repo}/releases\"],\n      createTagProtection: [\"POST /repos/{owner}/{repo}/tags/protection\"],\n      createUsingTemplate: [\"POST /repos/{template_owner}/{template_repo}/generate\"],\n      createWebhook: [\"POST /repos/{owner}/{repo}/hooks\"],\n      declineInvitation: [\"DELETE /user/repository_invitations/{invitation_id}\", {}, {\n        renamed: [\"repos\", \"declineInvitationForAuthenticatedUser\"]\n      }],\n      declineInvitationForAuthenticatedUser: [\"DELETE /user/repository_invitations/{invitation_id}\"],\n      delete: [\"DELETE /repos/{owner}/{repo}\"],\n      deleteAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n      deleteAdminBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n      deleteAnEnvironment: [\"DELETE /repos/{owner}/{repo}/environments/{environment_name}\"],\n      deleteAutolink: [\"DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n      deleteBranchProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection\"],\n      deleteCommitComment: [\"DELETE /repos/{owner}/{repo}/comments/{comment_id}\"],\n      deleteCommitSignatureProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"],\n      deleteDeployKey: [\"DELETE /repos/{owner}/{repo}/keys/{key_id}\"],\n      deleteDeployment: [\"DELETE /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n      deleteFile: [\"DELETE /repos/{owner}/{repo}/contents/{path}\"],\n      deleteInvitation: [\"DELETE /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n      deletePagesSite: [\"DELETE /repos/{owner}/{repo}/pages\"],\n      deletePullRequestReviewProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n      deleteRelease: [\"DELETE /repos/{owner}/{repo}/releases/{release_id}\"],\n      deleteReleaseAsset: [\"DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n      deleteTagProtection: [\"DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}\"],\n      deleteWebhook: [\"DELETE /repos/{owner}/{repo}/hooks/{hook_id}\"],\n      disableAutomatedSecurityFixes: [\"DELETE /repos/{owner}/{repo}/automated-security-fixes\"],\n      disableLfsForRepo: [\"DELETE /repos/{owner}/{repo}/lfs\"],\n      disableVulnerabilityAlerts: [\"DELETE /repos/{owner}/{repo}/vulnerability-alerts\"],\n      downloadArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\", {}, {\n        renamed: [\"repos\", \"downloadZipballArchive\"]\n      }],\n      downloadTarballArchive: [\"GET /repos/{owner}/{repo}/tarball/{ref}\"],\n      downloadZipballArchive: [\"GET /repos/{owner}/{repo}/zipball/{ref}\"],\n      enableAutomatedSecurityFixes: [\"PUT /repos/{owner}/{repo}/automated-security-fixes\"],\n      enableLfsForRepo: [\"PUT /repos/{owner}/{repo}/lfs\"],\n      enableVulnerabilityAlerts: [\"PUT /repos/{owner}/{repo}/vulnerability-alerts\"],\n      generateReleaseNotes: [\"POST /repos/{owner}/{repo}/releases/generate-notes\"],\n      get: [\"GET /repos/{owner}/{repo}\"],\n      getAccessRestrictions: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions\"],\n      getAdminBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n      getAllEnvironments: [\"GET /repos/{owner}/{repo}/environments\"],\n      getAllStatusCheckContexts: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\"],\n      getAllTopics: [\"GET /repos/{owner}/{repo}/topics\"],\n      getAppsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\"],\n      getAutolink: [\"GET /repos/{owner}/{repo}/autolinks/{autolink_id}\"],\n      getBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}\"],\n      getBranchProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection\"],\n      getClones: [\"GET /repos/{owner}/{repo}/traffic/clones\"],\n      getCodeFrequencyStats: [\"GET /repos/{owner}/{repo}/stats/code_frequency\"],\n      getCollaboratorPermissionLevel: [\"GET /repos/{owner}/{repo}/collaborators/{username}/permission\"],\n      getCombinedStatusForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/status\"],\n      getCommit: [\"GET /repos/{owner}/{repo}/commits/{ref}\"],\n      getCommitActivityStats: [\"GET /repos/{owner}/{repo}/stats/commit_activity\"],\n      getCommitComment: [\"GET /repos/{owner}/{repo}/comments/{comment_id}\"],\n      getCommitSignatureProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures\"],\n      getCommunityProfileMetrics: [\"GET /repos/{owner}/{repo}/community/profile\"],\n      getContent: [\"GET /repos/{owner}/{repo}/contents/{path}\"],\n      getContributorsStats: [\"GET /repos/{owner}/{repo}/stats/contributors\"],\n      getDeployKey: [\"GET /repos/{owner}/{repo}/keys/{key_id}\"],\n      getDeployment: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}\"],\n      getDeploymentStatus: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}\"],\n      getEnvironment: [\"GET /repos/{owner}/{repo}/environments/{environment_name}\"],\n      getLatestPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/latest\"],\n      getLatestRelease: [\"GET /repos/{owner}/{repo}/releases/latest\"],\n      getPages: [\"GET /repos/{owner}/{repo}/pages\"],\n      getPagesBuild: [\"GET /repos/{owner}/{repo}/pages/builds/{build_id}\"],\n      getPagesHealthCheck: [\"GET /repos/{owner}/{repo}/pages/health\"],\n      getParticipationStats: [\"GET /repos/{owner}/{repo}/stats/participation\"],\n      getPullRequestReviewProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n      getPunchCardStats: [\"GET /repos/{owner}/{repo}/stats/punch_card\"],\n      getReadme: [\"GET /repos/{owner}/{repo}/readme\"],\n      getReadmeInDirectory: [\"GET /repos/{owner}/{repo}/readme/{dir}\"],\n      getRelease: [\"GET /repos/{owner}/{repo}/releases/{release_id}\"],\n      getReleaseAsset: [\"GET /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n      getReleaseByTag: [\"GET /repos/{owner}/{repo}/releases/tags/{tag}\"],\n      getStatusChecksProtection: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n      getTeamsWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\"],\n      getTopPaths: [\"GET /repos/{owner}/{repo}/traffic/popular/paths\"],\n      getTopReferrers: [\"GET /repos/{owner}/{repo}/traffic/popular/referrers\"],\n      getUsersWithAccessToProtectedBranch: [\"GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\"],\n      getViews: [\"GET /repos/{owner}/{repo}/traffic/views\"],\n      getWebhook: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}\"],\n      getWebhookConfigForRepo: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n      getWebhookDelivery: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}\"],\n      listAutolinks: [\"GET /repos/{owner}/{repo}/autolinks\"],\n      listBranches: [\"GET /repos/{owner}/{repo}/branches\"],\n      listBranchesForHeadCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head\"],\n      listCollaborators: [\"GET /repos/{owner}/{repo}/collaborators\"],\n      listCommentsForCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\"],\n      listCommitCommentsForRepo: [\"GET /repos/{owner}/{repo}/comments\"],\n      listCommitStatusesForRef: [\"GET /repos/{owner}/{repo}/commits/{ref}/statuses\"],\n      listCommits: [\"GET /repos/{owner}/{repo}/commits\"],\n      listContributors: [\"GET /repos/{owner}/{repo}/contributors\"],\n      listDeployKeys: [\"GET /repos/{owner}/{repo}/keys\"],\n      listDeploymentStatuses: [\"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\"],\n      listDeployments: [\"GET /repos/{owner}/{repo}/deployments\"],\n      listForAuthenticatedUser: [\"GET /user/repos\"],\n      listForOrg: [\"GET /orgs/{org}/repos\"],\n      listForUser: [\"GET /users/{username}/repos\"],\n      listForks: [\"GET /repos/{owner}/{repo}/forks\"],\n      listInvitations: [\"GET /repos/{owner}/{repo}/invitations\"],\n      listInvitationsForAuthenticatedUser: [\"GET /user/repository_invitations\"],\n      listLanguages: [\"GET /repos/{owner}/{repo}/languages\"],\n      listPagesBuilds: [\"GET /repos/{owner}/{repo}/pages/builds\"],\n      listPublic: [\"GET /repositories\"],\n      listPullRequestsAssociatedWithCommit: [\"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\"],\n      listReleaseAssets: [\"GET /repos/{owner}/{repo}/releases/{release_id}/assets\"],\n      listReleases: [\"GET /repos/{owner}/{repo}/releases\"],\n      listTagProtection: [\"GET /repos/{owner}/{repo}/tags/protection\"],\n      listTags: [\"GET /repos/{owner}/{repo}/tags\"],\n      listTeams: [\"GET /repos/{owner}/{repo}/teams\"],\n      listWebhookDeliveries: [\"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\"],\n      listWebhooks: [\"GET /repos/{owner}/{repo}/hooks\"],\n      merge: [\"POST /repos/{owner}/{repo}/merges\"],\n      mergeUpstream: [\"POST /repos/{owner}/{repo}/merge-upstream\"],\n      pingWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/pings\"],\n      redeliverWebhookDelivery: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts\"],\n      removeAppAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n        mapToData: \"apps\"\n      }],\n      removeCollaborator: [\"DELETE /repos/{owner}/{repo}/collaborators/{username}\"],\n      removeStatusCheckContexts: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n        mapToData: \"contexts\"\n      }],\n      removeStatusCheckProtection: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n      removeTeamAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n        mapToData: \"teams\"\n      }],\n      removeUserAccessRestrictions: [\"DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n        mapToData: \"users\"\n      }],\n      renameBranch: [\"POST /repos/{owner}/{repo}/branches/{branch}/rename\"],\n      replaceAllTopics: [\"PUT /repos/{owner}/{repo}/topics\"],\n      requestPagesBuild: [\"POST /repos/{owner}/{repo}/pages/builds\"],\n      setAdminBranchProtection: [\"POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins\"],\n      setAppAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps\", {}, {\n        mapToData: \"apps\"\n      }],\n      setStatusCheckContexts: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts\", {}, {\n        mapToData: \"contexts\"\n      }],\n      setTeamAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams\", {}, {\n        mapToData: \"teams\"\n      }],\n      setUserAccessRestrictions: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users\", {}, {\n        mapToData: \"users\"\n      }],\n      testPushWebhook: [\"POST /repos/{owner}/{repo}/hooks/{hook_id}/tests\"],\n      transfer: [\"POST /repos/{owner}/{repo}/transfer\"],\n      update: [\"PATCH /repos/{owner}/{repo}\"],\n      updateBranchProtection: [\"PUT /repos/{owner}/{repo}/branches/{branch}/protection\"],\n      updateCommitComment: [\"PATCH /repos/{owner}/{repo}/comments/{comment_id}\"],\n      updateInformationAboutPagesSite: [\"PUT /repos/{owner}/{repo}/pages\"],\n      updateInvitation: [\"PATCH /repos/{owner}/{repo}/invitations/{invitation_id}\"],\n      updatePullRequestReviewProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews\"],\n      updateRelease: [\"PATCH /repos/{owner}/{repo}/releases/{release_id}\"],\n      updateReleaseAsset: [\"PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}\"],\n      updateStatusCheckPotection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\", {}, {\n        renamed: [\"repos\", \"updateStatusCheckProtection\"]\n      }],\n      updateStatusCheckProtection: [\"PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks\"],\n      updateWebhook: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}\"],\n      updateWebhookConfigForRepo: [\"PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config\"],\n      uploadReleaseAsset: [\"POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}\", {\n        baseUrl: \"https://uploads.github.com\"\n      }]\n    },\n    search: {\n      code: [\"GET /search/code\"],\n      commits: [\"GET /search/commits\"],\n      issuesAndPullRequests: [\"GET /search/issues\"],\n      labels: [\"GET /search/labels\"],\n      repos: [\"GET /search/repositories\"],\n      topics: [\"GET /search/topics\"],\n      users: [\"GET /search/users\"]\n    },\n    secretScanning: {\n      getAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"],\n      listAlertsForEnterprise: [\"GET /enterprises/{enterprise}/secret-scanning/alerts\"],\n      listAlertsForOrg: [\"GET /orgs/{org}/secret-scanning/alerts\"],\n      listAlertsForRepo: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts\"],\n      listLocationsForAlert: [\"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\"],\n      updateAlert: [\"PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}\"]\n    },\n    teams: {\n      addOrUpdateMembershipForUserInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n      addOrUpdateProjectPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n      addOrUpdateRepoPermissionsInOrg: [\"PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n      checkPermissionsForProjectInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n      checkPermissionsForRepoInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n      create: [\"POST /orgs/{org}/teams\"],\n      createDiscussionCommentInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n      createDiscussionInOrg: [\"POST /orgs/{org}/teams/{team_slug}/discussions\"],\n      deleteDiscussionCommentInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n      deleteDiscussionInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n      deleteInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}\"],\n      getByName: [\"GET /orgs/{org}/teams/{team_slug}\"],\n      getDiscussionCommentInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n      getDiscussionInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n      getMembershipForUserInOrg: [\"GET /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n      list: [\"GET /orgs/{org}/teams\"],\n      listChildInOrg: [\"GET /orgs/{org}/teams/{team_slug}/teams\"],\n      listDiscussionCommentsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\"],\n      listDiscussionsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/discussions\"],\n      listForAuthenticatedUser: [\"GET /user/teams\"],\n      listMembersInOrg: [\"GET /orgs/{org}/teams/{team_slug}/members\"],\n      listPendingInvitationsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/invitations\"],\n      listProjectsInOrg: [\"GET /orgs/{org}/teams/{team_slug}/projects\"],\n      listReposInOrg: [\"GET /orgs/{org}/teams/{team_slug}/repos\"],\n      removeMembershipForUserInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}\"],\n      removeProjectInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}\"],\n      removeRepoInOrg: [\"DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}\"],\n      updateDiscussionCommentInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}\"],\n      updateDiscussionInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}\"],\n      updateInOrg: [\"PATCH /orgs/{org}/teams/{team_slug}\"]\n    },\n    users: {\n      addEmailForAuthenticated: [\"POST /user/emails\", {}, {\n        renamed: [\"users\", \"addEmailForAuthenticatedUser\"]\n      }],\n      addEmailForAuthenticatedUser: [\"POST /user/emails\"],\n      block: [\"PUT /user/blocks/{username}\"],\n      checkBlocked: [\"GET /user/blocks/{username}\"],\n      checkFollowingForUser: [\"GET /users/{username}/following/{target_user}\"],\n      checkPersonIsFollowedByAuthenticated: [\"GET /user/following/{username}\"],\n      createGpgKeyForAuthenticated: [\"POST /user/gpg_keys\", {}, {\n        renamed: [\"users\", \"createGpgKeyForAuthenticatedUser\"]\n      }],\n      createGpgKeyForAuthenticatedUser: [\"POST /user/gpg_keys\"],\n      createPublicSshKeyForAuthenticated: [\"POST /user/keys\", {}, {\n        renamed: [\"users\", \"createPublicSshKeyForAuthenticatedUser\"]\n      }],\n      createPublicSshKeyForAuthenticatedUser: [\"POST /user/keys\"],\n      deleteEmailForAuthenticated: [\"DELETE /user/emails\", {}, {\n        renamed: [\"users\", \"deleteEmailForAuthenticatedUser\"]\n      }],\n      deleteEmailForAuthenticatedUser: [\"DELETE /user/emails\"],\n      deleteGpgKeyForAuthenticated: [\"DELETE /user/gpg_keys/{gpg_key_id}\", {}, {\n        renamed: [\"users\", \"deleteGpgKeyForAuthenticatedUser\"]\n      }],\n      deleteGpgKeyForAuthenticatedUser: [\"DELETE /user/gpg_keys/{gpg_key_id}\"],\n      deletePublicSshKeyForAuthenticated: [\"DELETE /user/keys/{key_id}\", {}, {\n        renamed: [\"users\", \"deletePublicSshKeyForAuthenticatedUser\"]\n      }],\n      deletePublicSshKeyForAuthenticatedUser: [\"DELETE /user/keys/{key_id}\"],\n      follow: [\"PUT /user/following/{username}\"],\n      getAuthenticated: [\"GET /user\"],\n      getByUsername: [\"GET /users/{username}\"],\n      getContextForUser: [\"GET /users/{username}/hovercard\"],\n      getGpgKeyForAuthenticated: [\"GET /user/gpg_keys/{gpg_key_id}\", {}, {\n        renamed: [\"users\", \"getGpgKeyForAuthenticatedUser\"]\n      }],\n      getGpgKeyForAuthenticatedUser: [\"GET /user/gpg_keys/{gpg_key_id}\"],\n      getPublicSshKeyForAuthenticated: [\"GET /user/keys/{key_id}\", {}, {\n        renamed: [\"users\", \"getPublicSshKeyForAuthenticatedUser\"]\n      }],\n      getPublicSshKeyForAuthenticatedUser: [\"GET /user/keys/{key_id}\"],\n      list: [\"GET /users\"],\n      listBlockedByAuthenticated: [\"GET /user/blocks\", {}, {\n        renamed: [\"users\", \"listBlockedByAuthenticatedUser\"]\n      }],\n      listBlockedByAuthenticatedUser: [\"GET /user/blocks\"],\n      listEmailsForAuthenticated: [\"GET /user/emails\", {}, {\n        renamed: [\"users\", \"listEmailsForAuthenticatedUser\"]\n      }],\n      listEmailsForAuthenticatedUser: [\"GET /user/emails\"],\n      listFollowedByAuthenticated: [\"GET /user/following\", {}, {\n        renamed: [\"users\", \"listFollowedByAuthenticatedUser\"]\n      }],\n      listFollowedByAuthenticatedUser: [\"GET /user/following\"],\n      listFollowersForAuthenticatedUser: [\"GET /user/followers\"],\n      listFollowersForUser: [\"GET /users/{username}/followers\"],\n      listFollowingForUser: [\"GET /users/{username}/following\"],\n      listGpgKeysForAuthenticated: [\"GET /user/gpg_keys\", {}, {\n        renamed: [\"users\", \"listGpgKeysForAuthenticatedUser\"]\n      }],\n      listGpgKeysForAuthenticatedUser: [\"GET /user/gpg_keys\"],\n      listGpgKeysForUser: [\"GET /users/{username}/gpg_keys\"],\n      listPublicEmailsForAuthenticated: [\"GET /user/public_emails\", {}, {\n        renamed: [\"users\", \"listPublicEmailsForAuthenticatedUser\"]\n      }],\n      listPublicEmailsForAuthenticatedUser: [\"GET /user/public_emails\"],\n      listPublicKeysForUser: [\"GET /users/{username}/keys\"],\n      listPublicSshKeysForAuthenticated: [\"GET /user/keys\", {}, {\n        renamed: [\"users\", \"listPublicSshKeysForAuthenticatedUser\"]\n      }],\n      listPublicSshKeysForAuthenticatedUser: [\"GET /user/keys\"],\n      setPrimaryEmailVisibilityForAuthenticated: [\"PATCH /user/email/visibility\", {}, {\n        renamed: [\"users\", \"setPrimaryEmailVisibilityForAuthenticatedUser\"]\n      }],\n      setPrimaryEmailVisibilityForAuthenticatedUser: [\"PATCH /user/email/visibility\"],\n      unblock: [\"DELETE /user/blocks/{username}\"],\n      unfollow: [\"DELETE /user/following/{username}\"],\n      updateAuthenticated: [\"PATCH /user\"]\n    }\n  };\n  var VERSION = \"5.16.2\";\n  restEndpointMethods.VERSION = VERSION;\n  legacyRestEndpointMethods.VERSION = VERSION;\n  exports.legacyRestEndpointMethods = legacyRestEndpointMethods;\n  exports.restEndpointMethods = restEndpointMethods;\n});\n\n// node_modules/@octokit/plugin-paginate-rest/dist-node/index.js\nvar require_dist_node12 = __commonJS((exports) => {\n  var ownKeys = function(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function(sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  };\n  var _objectSpread2 = function(target) {\n    for (var i = 1;i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), true).forEach(function(key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  };\n  var _defineProperty = function(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  };\n  var normalizePaginatedListResponse = function(response) {\n    if (!response.data) {\n      return _objectSpread2(_objectSpread2({}, response), {}, {\n        data: []\n      });\n    }\n    const responseNeedsNormalization = (\"total_count\" in response.data) && !(\"url\" in response.data);\n    if (!responseNeedsNormalization)\n      return response;\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    const data = response.data[namespaceKey];\n    response.data = data;\n    if (typeof incompleteResults !== \"undefined\") {\n      response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n      response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n    return response;\n  };\n  var iterator = function(octokit, route, parameters) {\n    const options = typeof route === \"function\" ? route.endpoint(parameters) : octokit.request.endpoint(route, parameters);\n    const requestMethod = typeof route === \"function\" ? route : octokit.request;\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n      [Symbol.asyncIterator]: () => ({\n        async next() {\n          if (!url)\n            return {\n              done: true\n            };\n          try {\n            const response = await requestMethod({\n              method,\n              url,\n              headers\n            });\n            const normalizedResponse = normalizePaginatedListResponse(response);\n            url = ((normalizedResponse.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n            return {\n              value: normalizedResponse\n            };\n          } catch (error) {\n            if (error.status !== 409)\n              throw error;\n            url = \"\";\n            return {\n              value: {\n                status: 200,\n                headers: {},\n                data: []\n              }\n            };\n          }\n        }\n      })\n    };\n  };\n  var paginate = function(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n      mapFn = parameters;\n      parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n  };\n  var gather = function(octokit, results, iterator2, mapFn) {\n    return iterator2.next().then((result) => {\n      if (result.done) {\n        return results;\n      }\n      let earlyExit = false;\n      function done() {\n        earlyExit = true;\n      }\n      results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n      if (earlyExit) {\n        return results;\n      }\n      return gather(octokit, results, iterator2, mapFn);\n    });\n  };\n  var isPaginatingEndpoint = function(arg) {\n    if (typeof arg === \"string\") {\n      return paginatingEndpoints.includes(arg);\n    } else {\n      return false;\n    }\n  };\n  var paginateRest = function(octokit) {\n    return {\n      paginate: Object.assign(paginate.bind(null, octokit), {\n        iterator: iterator.bind(null, octokit)\n      })\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  var VERSION = \"2.21.3\";\n  var composePaginateRest = Object.assign(paginate, {\n    iterator\n  });\n  var paginatingEndpoints = [\"GET /app/hook/deliveries\", \"GET /app/installations\", \"GET /applications/grants\", \"GET /authorizations\", \"GET /enterprises/{enterprise}/actions/permissions/organizations\", \"GET /enterprises/{enterprise}/actions/runner-groups\", \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/organizations\", \"GET /enterprises/{enterprise}/actions/runner-groups/{runner_group_id}/runners\", \"GET /enterprises/{enterprise}/actions/runners\", \"GET /enterprises/{enterprise}/audit-log\", \"GET /enterprises/{enterprise}/secret-scanning/alerts\", \"GET /enterprises/{enterprise}/settings/billing/advanced-security\", \"GET /events\", \"GET /gists\", \"GET /gists/public\", \"GET /gists/starred\", \"GET /gists/{gist_id}/comments\", \"GET /gists/{gist_id}/commits\", \"GET /gists/{gist_id}/forks\", \"GET /installation/repositories\", \"GET /issues\", \"GET /licenses\", \"GET /marketplace_listing/plans\", \"GET /marketplace_listing/plans/{plan_id}/accounts\", \"GET /marketplace_listing/stubbed/plans\", \"GET /marketplace_listing/stubbed/plans/{plan_id}/accounts\", \"GET /networks/{owner}/{repo}/events\", \"GET /notifications\", \"GET /organizations\", \"GET /orgs/{org}/actions/cache/usage-by-repository\", \"GET /orgs/{org}/actions/permissions/repositories\", \"GET /orgs/{org}/actions/runner-groups\", \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/repositories\", \"GET /orgs/{org}/actions/runner-groups/{runner_group_id}/runners\", \"GET /orgs/{org}/actions/runners\", \"GET /orgs/{org}/actions/secrets\", \"GET /orgs/{org}/actions/secrets/{secret_name}/repositories\", \"GET /orgs/{org}/audit-log\", \"GET /orgs/{org}/blocks\", \"GET /orgs/{org}/code-scanning/alerts\", \"GET /orgs/{org}/codespaces\", \"GET /orgs/{org}/credential-authorizations\", \"GET /orgs/{org}/dependabot/secrets\", \"GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories\", \"GET /orgs/{org}/events\", \"GET /orgs/{org}/external-groups\", \"GET /orgs/{org}/failed_invitations\", \"GET /orgs/{org}/hooks\", \"GET /orgs/{org}/hooks/{hook_id}/deliveries\", \"GET /orgs/{org}/installations\", \"GET /orgs/{org}/invitations\", \"GET /orgs/{org}/invitations/{invitation_id}/teams\", \"GET /orgs/{org}/issues\", \"GET /orgs/{org}/members\", \"GET /orgs/{org}/migrations\", \"GET /orgs/{org}/migrations/{migration_id}/repositories\", \"GET /orgs/{org}/outside_collaborators\", \"GET /orgs/{org}/packages\", \"GET /orgs/{org}/packages/{package_type}/{package_name}/versions\", \"GET /orgs/{org}/projects\", \"GET /orgs/{org}/public_members\", \"GET /orgs/{org}/repos\", \"GET /orgs/{org}/secret-scanning/alerts\", \"GET /orgs/{org}/settings/billing/advanced-security\", \"GET /orgs/{org}/team-sync/groups\", \"GET /orgs/{org}/teams\", \"GET /orgs/{org}/teams/{team_slug}/discussions\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions\", \"GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions\", \"GET /orgs/{org}/teams/{team_slug}/invitations\", \"GET /orgs/{org}/teams/{team_slug}/members\", \"GET /orgs/{org}/teams/{team_slug}/projects\", \"GET /orgs/{org}/teams/{team_slug}/repos\", \"GET /orgs/{org}/teams/{team_slug}/teams\", \"GET /projects/columns/{column_id}/cards\", \"GET /projects/{project_id}/collaborators\", \"GET /projects/{project_id}/columns\", \"GET /repos/{owner}/{repo}/actions/artifacts\", \"GET /repos/{owner}/{repo}/actions/caches\", \"GET /repos/{owner}/{repo}/actions/runners\", \"GET /repos/{owner}/{repo}/actions/runs\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs\", \"GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs\", \"GET /repos/{owner}/{repo}/actions/secrets\", \"GET /repos/{owner}/{repo}/actions/workflows\", \"GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs\", \"GET /repos/{owner}/{repo}/assignees\", \"GET /repos/{owner}/{repo}/branches\", \"GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations\", \"GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs\", \"GET /repos/{owner}/{repo}/code-scanning/alerts\", \"GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances\", \"GET /repos/{owner}/{repo}/code-scanning/analyses\", \"GET /repos/{owner}/{repo}/codespaces\", \"GET /repos/{owner}/{repo}/codespaces/devcontainers\", \"GET /repos/{owner}/{repo}/codespaces/secrets\", \"GET /repos/{owner}/{repo}/collaborators\", \"GET /repos/{owner}/{repo}/comments\", \"GET /repos/{owner}/{repo}/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/commits\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/comments\", \"GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls\", \"GET /repos/{owner}/{repo}/commits/{ref}/check-runs\", \"GET /repos/{owner}/{repo}/commits/{ref}/check-suites\", \"GET /repos/{owner}/{repo}/commits/{ref}/status\", \"GET /repos/{owner}/{repo}/commits/{ref}/statuses\", \"GET /repos/{owner}/{repo}/contributors\", \"GET /repos/{owner}/{repo}/dependabot/secrets\", \"GET /repos/{owner}/{repo}/deployments\", \"GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses\", \"GET /repos/{owner}/{repo}/environments\", \"GET /repos/{owner}/{repo}/events\", \"GET /repos/{owner}/{repo}/forks\", \"GET /repos/{owner}/{repo}/git/matching-refs/{ref}\", \"GET /repos/{owner}/{repo}/hooks\", \"GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries\", \"GET /repos/{owner}/{repo}/invitations\", \"GET /repos/{owner}/{repo}/issues\", \"GET /repos/{owner}/{repo}/issues/comments\", \"GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/issues/events\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/comments\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/events\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/labels\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/reactions\", \"GET /repos/{owner}/{repo}/issues/{issue_number}/timeline\", \"GET /repos/{owner}/{repo}/keys\", \"GET /repos/{owner}/{repo}/labels\", \"GET /repos/{owner}/{repo}/milestones\", \"GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels\", \"GET /repos/{owner}/{repo}/notifications\", \"GET /repos/{owner}/{repo}/pages/builds\", \"GET /repos/{owner}/{repo}/projects\", \"GET /repos/{owner}/{repo}/pulls\", \"GET /repos/{owner}/{repo}/pulls/comments\", \"GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/comments\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/commits\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/files\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews\", \"GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments\", \"GET /repos/{owner}/{repo}/releases\", \"GET /repos/{owner}/{repo}/releases/{release_id}/assets\", \"GET /repos/{owner}/{repo}/releases/{release_id}/reactions\", \"GET /repos/{owner}/{repo}/secret-scanning/alerts\", \"GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations\", \"GET /repos/{owner}/{repo}/stargazers\", \"GET /repos/{owner}/{repo}/subscribers\", \"GET /repos/{owner}/{repo}/tags\", \"GET /repos/{owner}/{repo}/teams\", \"GET /repos/{owner}/{repo}/topics\", \"GET /repositories\", \"GET /repositories/{repository_id}/environments/{environment_name}/secrets\", \"GET /search/code\", \"GET /search/commits\", \"GET /search/issues\", \"GET /search/labels\", \"GET /search/repositories\", \"GET /search/topics\", \"GET /search/users\", \"GET /teams/{team_id}/discussions\", \"GET /teams/{team_id}/discussions/{discussion_number}/comments\", \"GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions\", \"GET /teams/{team_id}/discussions/{discussion_number}/reactions\", \"GET /teams/{team_id}/invitations\", \"GET /teams/{team_id}/members\", \"GET /teams/{team_id}/projects\", \"GET /teams/{team_id}/repos\", \"GET /teams/{team_id}/teams\", \"GET /user/blocks\", \"GET /user/codespaces\", \"GET /user/codespaces/secrets\", \"GET /user/emails\", \"GET /user/followers\", \"GET /user/following\", \"GET /user/gpg_keys\", \"GET /user/installations\", \"GET /user/installations/{installation_id}/repositories\", \"GET /user/issues\", \"GET /user/keys\", \"GET /user/marketplace_purchases\", \"GET /user/marketplace_purchases/stubbed\", \"GET /user/memberships/orgs\", \"GET /user/migrations\", \"GET /user/migrations/{migration_id}/repositories\", \"GET /user/orgs\", \"GET /user/packages\", \"GET /user/packages/{package_type}/{package_name}/versions\", \"GET /user/public_emails\", \"GET /user/repos\", \"GET /user/repository_invitations\", \"GET /user/starred\", \"GET /user/subscriptions\", \"GET /user/teams\", \"GET /users\", \"GET /users/{username}/events\", \"GET /users/{username}/events/orgs/{org}\", \"GET /users/{username}/events/public\", \"GET /users/{username}/followers\", \"GET /users/{username}/following\", \"GET /users/{username}/gists\", \"GET /users/{username}/gpg_keys\", \"GET /users/{username}/keys\", \"GET /users/{username}/orgs\", \"GET /users/{username}/packages\", \"GET /users/{username}/projects\", \"GET /users/{username}/received_events\", \"GET /users/{username}/received_events/public\", \"GET /users/{username}/repos\", \"GET /users/{username}/starred\", \"GET /users/{username}/subscriptions\"];\n  paginateRest.VERSION = VERSION;\n  exports.composePaginateRest = composePaginateRest;\n  exports.isPaginatingEndpoint = isPaginatingEndpoint;\n  exports.paginateRest = paginateRest;\n  exports.paginatingEndpoints = paginatingEndpoints;\n});\n\n// node_modules/@actions/github/lib/utils.js\nvar require_utils4 = __commonJS((exports) => {\n  var getOctokitOptions = function(token, options) {\n    const opts = Object.assign({}, options || {});\n    const auth = Utils.getAuthString(token, opts);\n    if (auth) {\n      opts.auth = auth;\n    }\n    return opts;\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.getOctokitOptions = exports.GitHub = exports.defaults = exports.context = undefined;\n  var Context = __importStar(require_context());\n  var Utils = __importStar(require_utils3());\n  var core_1 = require_dist_node8();\n  var plugin_rest_endpoint_methods_1 = require_dist_node11();\n  var plugin_paginate_rest_1 = require_dist_node12();\n  exports.context = new Context.Context;\n  var baseUrl = Utils.getApiBaseUrl();\n  exports.defaults = {\n    baseUrl,\n    request: {\n      agent: Utils.getProxyAgent(baseUrl)\n    }\n  };\n  exports.GitHub = core_1.Octokit.plugin(plugin_rest_endpoint_methods_1.restEndpointMethods, plugin_paginate_rest_1.paginateRest).defaults(exports.defaults);\n  exports.getOctokitOptions = getOctokitOptions;\n});\n\n// node_modules/@actions/github/lib/github.js\nvar require_github = __commonJS((exports) => {\n  var getOctokit = function(token, options, ...additionalPlugins) {\n    const GitHubWithPlugins = utils_1.GitHub.plugin(...additionalPlugins);\n    return new GitHubWithPlugins(utils_1.getOctokitOptions(token, options));\n  };\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() {\n      return m[k];\n    } });\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.getOctokit = exports.context = undefined;\n  var Context = __importStar(require_context());\n  var utils_1 = require_utils4();\n  exports.context = new Context.Context;\n  exports.getOctokit = getOctokit;\n});\n\n// node_modules/@npmcli/package-json/lib/update-dependencies.js\nvar require_update_dependencies = __commonJS((exports, module) => {\n  var depTypes = new Set([\n    \"dependencies\",\n    \"optionalDependencies\",\n    \"devDependencies\",\n    \"peerDependencies\"\n  ]);\n  var orderDeps = (content) => {\n    for (const type of depTypes) {\n      if (content && content[type]) {\n        content[type] = Object.keys(content[type]).sort((a, b) => a.localeCompare(b, \"en\")).reduce((res, key) => {\n          res[key] = content[type][key];\n          return res;\n        }, {});\n      }\n    }\n    return content;\n  };\n  var updateDependencies = ({ content, originalContent }) => {\n    const pkg = orderDeps({\n      ...content\n    });\n    if (pkg.dependencies) {\n      if (pkg.optionalDependencies) {\n        for (const name of Object.keys(pkg.optionalDependencies)) {\n          delete pkg.dependencies[name];\n        }\n      }\n    }\n    const result = { ...originalContent };\n    for (const type of depTypes) {\n      if (pkg[type]) {\n        result[type] = pkg[type];\n      }\n      const emptyDepType = pkg[type] && typeof pkg === \"object\" && Object.keys(pkg[type]).length === 0;\n      if (emptyDepType) {\n        delete result[type];\n      }\n    }\n    const { dependencies: origProd, peerDependencies: origPeer } = originalContent || {};\n    const { peerDependencies: newPeer } = result;\n    if (origProd && origPeer && newPeer) {\n      for (const name of Object.keys(origPeer)) {\n        if (origProd[name] !== undefined && newPeer[name] !== undefined) {\n          result.dependencies = result.dependencies || {};\n          result.dependencies[name] = newPeer[name];\n        }\n      }\n    }\n    return result;\n  };\n  updateDependencies.knownKeys = depTypes;\n  module.exports = updateDependencies;\n});\n\n// node_modules/@npmcli/package-json/lib/update-scripts.js\nvar require_update_scripts = __commonJS((exports, module) => {\n  var updateScripts = ({ content, originalContent = {} }) => {\n    const newScripts = content.scripts;\n    if (!newScripts) {\n      return originalContent;\n    }\n    const hasInvalidScripts = () => Object.entries(newScripts).some(([key, value]) => typeof key !== \"string\" || typeof value !== \"string\");\n    if (hasInvalidScripts()) {\n      throw Object.assign(new TypeError(\"package.json scripts should be a key-value pair of strings.\"), { code: \"ESCRIPTSINVALID\" });\n    }\n    return {\n      ...originalContent,\n      scripts: {\n        ...newScripts\n      }\n    };\n  };\n  module.exports = updateScripts;\n});\n\n// node_modules/@npmcli/package-json/lib/update-workspaces.js\nvar require_update_workspaces = __commonJS((exports, module) => {\n  var updateWorkspaces = ({ content, originalContent = {} }) => {\n    const newWorkspaces = content.workspaces;\n    if (!newWorkspaces) {\n      return originalContent;\n    }\n    const hasInvalidWorkspaces = () => newWorkspaces.some((w) => !(typeof w === \"string\"));\n    if (!newWorkspaces.length || hasInvalidWorkspaces()) {\n      throw Object.assign(new TypeError(\"workspaces should be an array of strings.\"), { code: \"EWORKSPACESINVALID\" });\n    }\n    return {\n      ...originalContent,\n      workspaces: [\n        ...newWorkspaces\n      ]\n    };\n  };\n  module.exports = updateWorkspaces;\n});\n\n// node_modules/balanced-match/index.js\nvar require_balanced_match = __commonJS((exports, module) => {\n  var balanced = function(a, b, str) {\n    if (a instanceof RegExp)\n      a = maybeMatch(a, str);\n    if (b instanceof RegExp)\n      b = maybeMatch(b, str);\n    var r = range(a, b, str);\n    return r && {\n      start: r[0],\n      end: r[1],\n      pre: str.slice(0, r[0]),\n      body: str.slice(r[0] + a.length, r[1]),\n      post: str.slice(r[1] + b.length)\n    };\n  };\n  var maybeMatch = function(reg, str) {\n    var m = str.match(reg);\n    return m ? m[0] : null;\n  };\n  var range = function(a, b, str) {\n    var begs, beg, left, right, result;\n    var ai = str.indexOf(a);\n    var bi = str.indexOf(b, ai + 1);\n    var i = ai;\n    if (ai >= 0 && bi > 0) {\n      if (a === b) {\n        return [ai, bi];\n      }\n      begs = [];\n      left = str.length;\n      while (i >= 0 && !result) {\n        if (i == ai) {\n          begs.push(i);\n          ai = str.indexOf(a, i + 1);\n        } else if (begs.length == 1) {\n          result = [begs.pop(), bi];\n        } else {\n          beg = begs.pop();\n          if (beg < left) {\n            left = beg;\n            right = bi;\n          }\n          bi = str.indexOf(b, i + 1);\n        }\n        i = ai < bi && ai >= 0 ? ai : bi;\n      }\n      if (begs.length) {\n        result = [left, right];\n      }\n    }\n    return result;\n  };\n  module.exports = balanced;\n  balanced.range = range;\n});\n\n// node_modules/glob/node_modules/minimatch/node_modules/brace-expansion/index.js\nvar require_brace_expansion = __commonJS((exports, module) => {\n  var numeric = function(str) {\n    return parseInt(str, 10) == str ? parseInt(str, 10) : str.charCodeAt(0);\n  };\n  var escapeBraces = function(str) {\n    return str.split(\"\\\\\\\\\").join(escSlash).split(\"\\\\{\").join(escOpen).split(\"\\\\}\").join(escClose).split(\"\\\\,\").join(escComma).split(\"\\\\.\").join(escPeriod);\n  };\n  var unescapeBraces = function(str) {\n    return str.split(escSlash).join(\"\\\\\").split(escOpen).join(\"{\").split(escClose).join(\"}\").split(escComma).join(\",\").split(escPeriod).join(\".\");\n  };\n  var parseCommaParts = function(str) {\n    if (!str)\n      return [\"\"];\n    var parts = [];\n    var m = balanced(\"{\", \"}\", str);\n    if (!m)\n      return str.split(\",\");\n    var pre = m.pre;\n    var body = m.body;\n    var post = m.post;\n    var p = pre.split(\",\");\n    p[p.length - 1] += \"{\" + body + \"}\";\n    var postParts = parseCommaParts(post);\n    if (post.length) {\n      p[p.length - 1] += postParts.shift();\n      p.push.apply(p, postParts);\n    }\n    parts.push.apply(parts, p);\n    return parts;\n  };\n  var expandTop = function(str) {\n    if (!str)\n      return [];\n    if (str.substr(0, 2) === \"{}\") {\n      str = \"\\\\{\\\\}\" + str.substr(2);\n    }\n    return expand(escapeBraces(str), true).map(unescapeBraces);\n  };\n  var embrace = function(str) {\n    return \"{\" + str + \"}\";\n  };\n  var isPadded = function(el) {\n    return /^-?0\\d/.test(el);\n  };\n  var lte = function(i, y) {\n    return i <= y;\n  };\n  var gte = function(i, y) {\n    return i >= y;\n  };\n  var expand = function(str, isTop) {\n    var expansions = [];\n    var m = balanced(\"{\", \"}\", str);\n    if (!m)\n      return [str];\n    var pre = m.pre;\n    var post = m.post.length ? expand(m.post, false) : [\"\"];\n    if (/\\$$/.test(m.pre)) {\n      for (var k = 0;k < post.length; k++) {\n        var expansion = pre + \"{\" + m.body + \"}\" + post[k];\n        expansions.push(expansion);\n      }\n    } else {\n      var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n      var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n      var isSequence = isNumericSequence || isAlphaSequence;\n      var isOptions = m.body.indexOf(\",\") >= 0;\n      if (!isSequence && !isOptions) {\n        if (m.post.match(/,.*\\}/)) {\n          str = m.pre + \"{\" + m.body + escClose + m.post;\n          return expand(str);\n        }\n        return [str];\n      }\n      var n;\n      if (isSequence) {\n        n = m.body.split(/\\.\\./);\n      } else {\n        n = parseCommaParts(m.body);\n        if (n.length === 1) {\n          n = expand(n[0], false).map(embrace);\n          if (n.length === 1) {\n            return post.map(function(p) {\n              return m.pre + n[0] + p;\n            });\n          }\n        }\n      }\n      var N;\n      if (isSequence) {\n        var x = numeric(n[0]);\n        var y = numeric(n[1]);\n        var width = Math.max(n[0].length, n[1].length);\n        var incr = n.length == 3 ? Math.abs(numeric(n[2])) : 1;\n        var test = lte;\n        var reverse = y < x;\n        if (reverse) {\n          incr *= -1;\n          test = gte;\n        }\n        var pad = n.some(isPadded);\n        N = [];\n        for (var i = x;test(i, y); i += incr) {\n          var c;\n          if (isAlphaSequence) {\n            c = String.fromCharCode(i);\n            if (c === \"\\\\\")\n              c = \"\";\n          } else {\n            c = String(i);\n            if (pad) {\n              var need = width - c.length;\n              if (need > 0) {\n                var z = new Array(need + 1).join(\"0\");\n                if (i < 0)\n                  c = \"-\" + z + c.slice(1);\n                else\n                  c = z + c;\n              }\n            }\n          }\n          N.push(c);\n        }\n      } else {\n        N = [];\n        for (var j = 0;j < n.length; j++) {\n          N.push.apply(N, expand(n[j], false));\n        }\n      }\n      for (var j = 0;j < N.length; j++) {\n        for (var k = 0;k < post.length; k++) {\n          var expansion = pre + N[j] + post[k];\n          if (!isTop || isSequence || expansion)\n            expansions.push(expansion);\n        }\n      }\n    }\n    return expansions;\n  };\n  var balanced = require_balanced_match();\n  module.exports = expandTop;\n  var escSlash = \"\\0SLASH\" + Math.random() + \"\\0\";\n  var escOpen = \"\\0OPEN\" + Math.random() + \"\\0\";\n  var escClose = \"\\0CLOSE\" + Math.random() + \"\\0\";\n  var escComma = \"\\0COMMA\" + Math.random() + \"\\0\";\n  var escPeriod = \"\\0PERIOD\" + Math.random() + \"\\0\";\n});\n\n// node_modules/glob/node_modules/minimatch/dist/cjs/assert-valid-pattern.js\nvar require_assert_valid_pattern = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.assertValidPattern = undefined;\n  var MAX_PATTERN_LENGTH = 1024 * 64;\n  var assertValidPattern = (pattern) => {\n    if (typeof pattern !== \"string\") {\n      throw new TypeError(\"invalid pattern\");\n    }\n    if (pattern.length > MAX_PATTERN_LENGTH) {\n      throw new TypeError(\"pattern is too long\");\n    }\n  };\n  exports.assertValidPattern = assertValidPattern;\n});\n\n// node_modules/glob/node_modules/minimatch/dist/cjs/brace-expressions.js\nvar require_brace_expressions = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.parseClass = undefined;\n  var posixClasses = {\n    \"[:alnum:]\": [\"\\\\p{L}\\\\p{Nl}\\\\p{Nd}\", true],\n    \"[:alpha:]\": [\"\\\\p{L}\\\\p{Nl}\", true],\n    \"[:ascii:]\": [\"\\\\x00-\\\\x7f\", false],\n    \"[:blank:]\": [\"\\\\p{Zs}\\\\t\", true],\n    \"[:cntrl:]\": [\"\\\\p{Cc}\", true],\n    \"[:digit:]\": [\"\\\\p{Nd}\", true],\n    \"[:graph:]\": [\"\\\\p{Z}\\\\p{C}\", true, true],\n    \"[:lower:]\": [\"\\\\p{Ll}\", true],\n    \"[:print:]\": [\"\\\\p{C}\", true],\n    \"[:punct:]\": [\"\\\\p{P}\", true],\n    \"[:space:]\": [\"\\\\p{Z}\\\\t\\\\r\\\\n\\\\v\\\\f\", true],\n    \"[:upper:]\": [\"\\\\p{Lu}\", true],\n    \"[:word:]\": [\"\\\\p{L}\\\\p{Nl}\\\\p{Nd}\\\\p{Pc}\", true],\n    \"[:xdigit:]\": [\"A-Fa-f0-9\", false]\n  };\n  var braceEscape = (s) => s.replace(/[[\\]\\\\-]/g, \"\\\\$&\");\n  var regexpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  var rangesToString = (ranges) => ranges.join(\"\");\n  var parseClass = (glob, position) => {\n    const pos = position;\n    if (glob.charAt(pos) !== \"[\") {\n      throw new Error(\"not in a brace expression\");\n    }\n    const ranges = [];\n    const negs = [];\n    let i = pos + 1;\n    let sawStart = false;\n    let uflag = false;\n    let escaping = false;\n    let negate = false;\n    let endPos = pos;\n    let rangeStart = \"\";\n    WHILE:\n      while (i < glob.length) {\n        const c = glob.charAt(i);\n        if ((c === \"!\" || c === \"^\") && i === pos + 1) {\n          negate = true;\n          i++;\n          continue;\n        }\n        if (c === \"]\" && sawStart && !escaping) {\n          endPos = i + 1;\n          break;\n        }\n        sawStart = true;\n        if (c === \"\\\\\") {\n          if (!escaping) {\n            escaping = true;\n            i++;\n            continue;\n          }\n        }\n        if (c === \"[\" && !escaping) {\n          for (const [cls, [unip, u, neg]] of Object.entries(posixClasses)) {\n            if (glob.startsWith(cls, i)) {\n              if (rangeStart) {\n                return [\"$.\", false, glob.length - pos, true];\n              }\n              i += cls.length;\n              if (neg)\n                negs.push(unip);\n              else\n                ranges.push(unip);\n              uflag = uflag || u;\n              continue WHILE;\n            }\n          }\n        }\n        escaping = false;\n        if (rangeStart) {\n          if (c > rangeStart) {\n            ranges.push(braceEscape(rangeStart) + \"-\" + braceEscape(c));\n          } else if (c === rangeStart) {\n            ranges.push(braceEscape(c));\n          }\n          rangeStart = \"\";\n          i++;\n          continue;\n        }\n        if (glob.startsWith(\"-]\", i + 1)) {\n          ranges.push(braceEscape(c + \"-\"));\n          i += 2;\n          continue;\n        }\n        if (glob.startsWith(\"-\", i + 1)) {\n          rangeStart = c;\n          i += 2;\n          continue;\n        }\n        ranges.push(braceEscape(c));\n        i++;\n      }\n    if (endPos < i) {\n      return [\"\", false, 0, false];\n    }\n    if (!ranges.length && !negs.length) {\n      return [\"$.\", false, glob.length - pos, true];\n    }\n    if (negs.length === 0 && ranges.length === 1 && /^\\\\?.$/.test(ranges[0]) && !negate) {\n      const r = ranges[0].length === 2 ? ranges[0].slice(-1) : ranges[0];\n      return [regexpEscape(r), false, endPos - pos, false];\n    }\n    const sranges = \"[\" + (negate ? \"^\" : \"\") + rangesToString(ranges) + \"]\";\n    const snegs = \"[\" + (negate ? \"\" : \"^\") + rangesToString(negs) + \"]\";\n    const comb = ranges.length && negs.length ? \"(\" + sranges + \"|\" + snegs + \")\" : ranges.length ? sranges : snegs;\n    return [comb, uflag, endPos - pos, true];\n  };\n  exports.parseClass = parseClass;\n});\n\n// node_modules/glob/node_modules/minimatch/dist/cjs/unescape.js\nvar require_unescape = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.unescape = undefined;\n  var unescape2 = (s, { windowsPathsNoEscape = false } = {}) => {\n    return windowsPathsNoEscape ? s.replace(/\\[([^\\/\\\\])\\]/g, \"$1\") : s.replace(/((?!\\\\).|^)\\[([^\\/\\\\])\\]/g, \"$1$2\").replace(/\\\\([^\\/])/g, \"$1\");\n  };\n  exports.unescape = unescape2;\n});\n\n// node_modules/glob/node_modules/minimatch/dist/cjs/ast.js\nvar require_ast = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.AST = undefined;\n  var brace_expressions_js_1 = require_brace_expressions();\n  var unescape_js_1 = require_unescape();\n  var types = new Set([\"!\", \"?\", \"+\", \"*\", \"@\"]);\n  var isExtglobType = (c) => types.has(c);\n  var startNoTraversal = \"(?!(?:^|/)\\\\.\\\\.?(?:$|/))\";\n  var startNoDot = \"(?!\\\\.)\";\n  var addPatternStart = new Set([\"[\", \".\"]);\n  var justDots = new Set([\"..\", \".\"]);\n  var reSpecials = new Set(\"().*{}+?[]^$\\\\!\");\n  var regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  var qmark = \"[^/]\";\n  var star = qmark + \"*?\";\n  var starNoEmpty = qmark + \"+?\";\n\n  class AST {\n    type;\n    #root;\n    #hasMagic;\n    #uflag = false;\n    #parts = [];\n    #parent;\n    #parentIndex;\n    #negs;\n    #filledNegs = false;\n    #options;\n    #toString;\n    #emptyExt = false;\n    constructor(type, parent, options = {}) {\n      this.type = type;\n      if (type)\n        this.#hasMagic = true;\n      this.#parent = parent;\n      this.#root = this.#parent ? this.#parent.#root : this;\n      this.#options = this.#root === this ? options : this.#root.#options;\n      this.#negs = this.#root === this ? [] : this.#root.#negs;\n      if (type === \"!\" && !this.#root.#filledNegs)\n        this.#negs.push(this);\n      this.#parentIndex = this.#parent ? this.#parent.#parts.length : 0;\n    }\n    get hasMagic() {\n      if (this.#hasMagic !== undefined)\n        return this.#hasMagic;\n      for (const p of this.#parts) {\n        if (typeof p === \"string\")\n          continue;\n        if (p.type || p.hasMagic)\n          return this.#hasMagic = true;\n      }\n      return this.#hasMagic;\n    }\n    toString() {\n      if (this.#toString !== undefined)\n        return this.#toString;\n      if (!this.type) {\n        return this.#toString = this.#parts.map((p) => String(p)).join(\"\");\n      } else {\n        return this.#toString = this.type + \"(\" + this.#parts.map((p) => String(p)).join(\"|\") + \")\";\n      }\n    }\n    #fillNegs() {\n      if (this !== this.#root)\n        throw new Error(\"should only call on root\");\n      if (this.#filledNegs)\n        return this;\n      this.toString();\n      this.#filledNegs = true;\n      let n;\n      while (n = this.#negs.pop()) {\n        if (n.type !== \"!\")\n          continue;\n        let p = n;\n        let pp = p.#parent;\n        while (pp) {\n          for (let i = p.#parentIndex + 1;!pp.type && i < pp.#parts.length; i++) {\n            for (const part of n.#parts) {\n              if (typeof part === \"string\") {\n                throw new Error(\"string part in extglob AST??\");\n              }\n              part.copyIn(pp.#parts[i]);\n            }\n          }\n          p = pp;\n          pp = p.#parent;\n        }\n      }\n      return this;\n    }\n    push(...parts) {\n      for (const p of parts) {\n        if (p === \"\")\n          continue;\n        if (typeof p !== \"string\" && !(p instanceof AST && p.#parent === this)) {\n          throw new Error(\"invalid part: \" + p);\n        }\n        this.#parts.push(p);\n      }\n    }\n    toJSON() {\n      const ret = this.type === null ? this.#parts.slice().map((p) => typeof p === \"string\" ? p : p.toJSON()) : [this.type, ...this.#parts.map((p) => p.toJSON())];\n      if (this.isStart() && !this.type)\n        ret.unshift([]);\n      if (this.isEnd() && (this === this.#root || this.#root.#filledNegs && this.#parent?.type === \"!\")) {\n        ret.push({});\n      }\n      return ret;\n    }\n    isStart() {\n      if (this.#root === this)\n        return true;\n      if (!this.#parent?.isStart())\n        return false;\n      if (this.#parentIndex === 0)\n        return true;\n      const p = this.#parent;\n      for (let i = 0;i < this.#parentIndex; i++) {\n        const pp = p.#parts[i];\n        if (!(pp instanceof AST && pp.type === \"!\")) {\n          return false;\n        }\n      }\n      return true;\n    }\n    isEnd() {\n      if (this.#root === this)\n        return true;\n      if (this.#parent?.type === \"!\")\n        return true;\n      if (!this.#parent?.isEnd())\n        return false;\n      if (!this.type)\n        return this.#parent?.isEnd();\n      const pl = this.#parent ? this.#parent.#parts.length : 0;\n      return this.#parentIndex === pl - 1;\n    }\n    copyIn(part) {\n      if (typeof part === \"string\")\n        this.push(part);\n      else\n        this.push(part.clone(this));\n    }\n    clone(parent) {\n      const c = new AST(this.type, parent);\n      for (const p of this.#parts) {\n        c.copyIn(p);\n      }\n      return c;\n    }\n    static #parseAST(str, ast, pos, opt) {\n      let escaping = false;\n      let inBrace = false;\n      let braceStart = -1;\n      let braceNeg = false;\n      if (ast.type === null) {\n        let i2 = pos;\n        let acc2 = \"\";\n        while (i2 < str.length) {\n          const c = str.charAt(i2++);\n          if (escaping || c === \"\\\\\") {\n            escaping = !escaping;\n            acc2 += c;\n            continue;\n          }\n          if (inBrace) {\n            if (i2 === braceStart + 1) {\n              if (c === \"^\" || c === \"!\") {\n                braceNeg = true;\n              }\n            } else if (c === \"]\" && !(i2 === braceStart + 2 && braceNeg)) {\n              inBrace = false;\n            }\n            acc2 += c;\n            continue;\n          } else if (c === \"[\") {\n            inBrace = true;\n            braceStart = i2;\n            braceNeg = false;\n            acc2 += c;\n            continue;\n          }\n          if (!opt.noext && isExtglobType(c) && str.charAt(i2) === \"(\") {\n            ast.push(acc2);\n            acc2 = \"\";\n            const ext = new AST(c, ast);\n            i2 = AST.#parseAST(str, ext, i2, opt);\n            ast.push(ext);\n            continue;\n          }\n          acc2 += c;\n        }\n        ast.push(acc2);\n        return i2;\n      }\n      let i = pos + 1;\n      let part = new AST(null, ast);\n      const parts = [];\n      let acc = \"\";\n      while (i < str.length) {\n        const c = str.charAt(i++);\n        if (escaping || c === \"\\\\\") {\n          escaping = !escaping;\n          acc += c;\n          continue;\n        }\n        if (inBrace) {\n          if (i === braceStart + 1) {\n            if (c === \"^\" || c === \"!\") {\n              braceNeg = true;\n            }\n          } else if (c === \"]\" && !(i === braceStart + 2 && braceNeg)) {\n            inBrace = false;\n          }\n          acc += c;\n          continue;\n        } else if (c === \"[\") {\n          inBrace = true;\n          braceStart = i;\n          braceNeg = false;\n          acc += c;\n          continue;\n        }\n        if (isExtglobType(c) && str.charAt(i) === \"(\") {\n          part.push(acc);\n          acc = \"\";\n          const ext = new AST(c, part);\n          part.push(ext);\n          i = AST.#parseAST(str, ext, i, opt);\n          continue;\n        }\n        if (c === \"|\") {\n          part.push(acc);\n          acc = \"\";\n          parts.push(part);\n          part = new AST(null, ast);\n          continue;\n        }\n        if (c === \")\") {\n          if (acc === \"\" && ast.#parts.length === 0) {\n            ast.#emptyExt = true;\n          }\n          part.push(acc);\n          acc = \"\";\n          ast.push(...parts, part);\n          return i;\n        }\n        acc += c;\n      }\n      ast.type = null;\n      ast.#hasMagic = undefined;\n      ast.#parts = [str.substring(pos - 1)];\n      return i;\n    }\n    static fromGlob(pattern, options = {}) {\n      const ast = new AST(null, undefined, options);\n      AST.#parseAST(pattern, ast, 0, options);\n      return ast;\n    }\n    toMMPattern() {\n      if (this !== this.#root)\n        return this.#root.toMMPattern();\n      const glob = this.toString();\n      const [re, body, hasMagic, uflag] = this.toRegExpSource();\n      const anyMagic = hasMagic || this.#hasMagic || this.#options.nocase && !this.#options.nocaseMagicOnly && glob.toUpperCase() !== glob.toLowerCase();\n      if (!anyMagic) {\n        return body;\n      }\n      const flags = (this.#options.nocase ? \"i\" : \"\") + (uflag ? \"u\" : \"\");\n      return Object.assign(new RegExp(`^${re}$`, flags), {\n        _src: re,\n        _glob: glob\n      });\n    }\n    toRegExpSource(allowDot) {\n      const dot = allowDot ?? !!this.#options.dot;\n      if (this.#root === this)\n        this.#fillNegs();\n      if (!this.type) {\n        const noEmpty = this.isStart() && this.isEnd();\n        const src = this.#parts.map((p) => {\n          const [re, _, hasMagic, uflag] = typeof p === \"string\" ? AST.#parseGlob(p, this.#hasMagic, noEmpty) : p.toRegExpSource(allowDot);\n          this.#hasMagic = this.#hasMagic || hasMagic;\n          this.#uflag = this.#uflag || uflag;\n          return re;\n        }).join(\"\");\n        let start2 = \"\";\n        if (this.isStart()) {\n          if (typeof this.#parts[0] === \"string\") {\n            const dotTravAllowed = this.#parts.length === 1 && justDots.has(this.#parts[0]);\n            if (!dotTravAllowed) {\n              const aps = addPatternStart;\n              const needNoTrav = dot && aps.has(src.charAt(0)) || src.startsWith(\"\\\\.\") && aps.has(src.charAt(2)) || src.startsWith(\"\\\\.\\\\.\") && aps.has(src.charAt(4));\n              const needNoDot = !dot && !allowDot && aps.has(src.charAt(0));\n              start2 = needNoTrav ? startNoTraversal : needNoDot ? startNoDot : \"\";\n            }\n          }\n        }\n        let end = \"\";\n        if (this.isEnd() && this.#root.#filledNegs && this.#parent?.type === \"!\") {\n          end = \"(?:$|\\\\/)\";\n        }\n        const final2 = start2 + src + end;\n        return [\n          final2,\n          (0, unescape_js_1.unescape)(src),\n          this.#hasMagic = !!this.#hasMagic,\n          this.#uflag\n        ];\n      }\n      const repeated = this.type === \"*\" || this.type === \"+\";\n      const start = this.type === \"!\" ? \"(?:(?!(?:\" : \"(?:\";\n      let body = this.#partsToRegExp(dot);\n      if (this.isStart() && this.isEnd() && !body && this.type !== \"!\") {\n        const s = this.toString();\n        this.#parts = [s];\n        this.type = null;\n        this.#hasMagic = undefined;\n        return [s, (0, unescape_js_1.unescape)(this.toString()), false, false];\n      }\n      let bodyDotAllowed = !repeated || allowDot || dot || !startNoDot ? \"\" : this.#partsToRegExp(true);\n      if (bodyDotAllowed === body) {\n        bodyDotAllowed = \"\";\n      }\n      if (bodyDotAllowed) {\n        body = `(?:${body})(?:${bodyDotAllowed})*?`;\n      }\n      let final = \"\";\n      if (this.type === \"!\" && this.#emptyExt) {\n        final = (this.isStart() && !dot ? startNoDot : \"\") + starNoEmpty;\n      } else {\n        const close = this.type === \"!\" ? \"))\" + (this.isStart() && !dot && !allowDot ? startNoDot : \"\") + star + \")\" : this.type === \"@\" ? \")\" : this.type === \"?\" ? \")?\" : this.type === \"+\" && bodyDotAllowed ? \")\" : this.type === \"*\" && bodyDotAllowed ? `)?` : `)${this.type}`;\n        final = start + body + close;\n      }\n      return [\n        final,\n        (0, unescape_js_1.unescape)(body),\n        this.#hasMagic = !!this.#hasMagic,\n        this.#uflag\n      ];\n    }\n    #partsToRegExp(dot) {\n      return this.#parts.map((p) => {\n        if (typeof p === \"string\") {\n          throw new Error(\"string type in extglob ast??\");\n        }\n        const [re, _, _hasMagic, uflag] = p.toRegExpSource(dot);\n        this.#uflag = this.#uflag || uflag;\n        return re;\n      }).filter((p) => !(this.isStart() && this.isEnd()) || !!p).join(\"|\");\n    }\n    static #parseGlob(glob, hasMagic, noEmpty = false) {\n      let escaping = false;\n      let re = \"\";\n      let uflag = false;\n      for (let i = 0;i < glob.length; i++) {\n        const c = glob.charAt(i);\n        if (escaping) {\n          escaping = false;\n          re += (reSpecials.has(c) ? \"\\\\\" : \"\") + c;\n          continue;\n        }\n        if (c === \"\\\\\") {\n          if (i === glob.length - 1) {\n            re += \"\\\\\\\\\";\n          } else {\n            escaping = true;\n          }\n          continue;\n        }\n        if (c === \"[\") {\n          const [src, needUflag, consumed, magic] = (0, brace_expressions_js_1.parseClass)(glob, i);\n          if (consumed) {\n            re += src;\n            uflag = uflag || needUflag;\n            i += consumed - 1;\n            hasMagic = hasMagic || magic;\n            continue;\n          }\n        }\n        if (c === \"*\") {\n          if (noEmpty && glob === \"*\")\n            re += starNoEmpty;\n          else\n            re += star;\n          hasMagic = true;\n          continue;\n        }\n        if (c === \"?\") {\n          re += qmark;\n          hasMagic = true;\n          continue;\n        }\n        re += regExpEscape(c);\n      }\n      return [re, (0, unescape_js_1.unescape)(glob), !!hasMagic, uflag];\n    }\n  }\n  exports.AST = AST;\n});\n\n// node_modules/glob/node_modules/minimatch/dist/cjs/escape.js\nvar require_escape = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.escape = undefined;\n  var escape = (s, { windowsPathsNoEscape = false } = {}) => {\n    return windowsPathsNoEscape ? s.replace(/[?*()[\\]]/g, \"[$&]\") : s.replace(/[?*()[\\]\\\\]/g, \"\\\\$&\");\n  };\n  exports.escape = escape;\n});\n\n// node_modules/glob/node_modules/minimatch/dist/cjs/index.js\nvar require_cjs = __commonJS((exports) => {\n  var __importDefault = exports && exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.unescape = exports.escape = exports.AST = exports.Minimatch = exports.match = exports.makeRe = exports.braceExpand = exports.defaults = exports.filter = exports.GLOBSTAR = exports.sep = exports.minimatch = undefined;\n  var brace_expansion_1 = __importDefault(require_brace_expansion());\n  var assert_valid_pattern_js_1 = require_assert_valid_pattern();\n  var ast_js_1 = require_ast();\n  var escape_js_1 = require_escape();\n  var unescape_js_1 = require_unescape();\n  var minimatch = (p, pattern, options = {}) => {\n    (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n    if (!options.nocomment && pattern.charAt(0) === \"#\") {\n      return false;\n    }\n    return new Minimatch(pattern, options).match(p);\n  };\n  exports.minimatch = minimatch;\n  var starDotExtRE = /^\\*+([^+@!?\\*\\[\\(]*)$/;\n  var starDotExtTest = (ext2) => (f) => !f.startsWith(\".\") && f.endsWith(ext2);\n  var starDotExtTestDot = (ext2) => (f) => f.endsWith(ext2);\n  var starDotExtTestNocase = (ext2) => {\n    ext2 = ext2.toLowerCase();\n    return (f) => !f.startsWith(\".\") && f.toLowerCase().endsWith(ext2);\n  };\n  var starDotExtTestNocaseDot = (ext2) => {\n    ext2 = ext2.toLowerCase();\n    return (f) => f.toLowerCase().endsWith(ext2);\n  };\n  var starDotStarRE = /^\\*+\\.\\*+$/;\n  var starDotStarTest = (f) => !f.startsWith(\".\") && f.includes(\".\");\n  var starDotStarTestDot = (f) => f !== \".\" && f !== \"..\" && f.includes(\".\");\n  var dotStarRE = /^\\.\\*+$/;\n  var dotStarTest = (f) => f !== \".\" && f !== \"..\" && f.startsWith(\".\");\n  var starRE = /^\\*+$/;\n  var starTest = (f) => f.length !== 0 && !f.startsWith(\".\");\n  var starTestDot = (f) => f.length !== 0 && f !== \".\" && f !== \"..\";\n  var qmarksRE = /^\\?+([^+@!?\\*\\[\\(]*)?$/;\n  var qmarksTestNocase = ([$0, ext2 = \"\"]) => {\n    const noext = qmarksTestNoExt([$0]);\n    if (!ext2)\n      return noext;\n    ext2 = ext2.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext2);\n  };\n  var qmarksTestNocaseDot = ([$0, ext2 = \"\"]) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    if (!ext2)\n      return noext;\n    ext2 = ext2.toLowerCase();\n    return (f) => noext(f) && f.toLowerCase().endsWith(ext2);\n  };\n  var qmarksTestDot = ([$0, ext2 = \"\"]) => {\n    const noext = qmarksTestNoExtDot([$0]);\n    return !ext2 ? noext : (f) => noext(f) && f.endsWith(ext2);\n  };\n  var qmarksTest = ([$0, ext2 = \"\"]) => {\n    const noext = qmarksTestNoExt([$0]);\n    return !ext2 ? noext : (f) => noext(f) && f.endsWith(ext2);\n  };\n  var qmarksTestNoExt = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && !f.startsWith(\".\");\n  };\n  var qmarksTestNoExtDot = ([$0]) => {\n    const len = $0.length;\n    return (f) => f.length === len && f !== \".\" && f !== \"..\";\n  };\n  var defaultPlatform = typeof process === \"object\" && process ? typeof process.env === \"object\" && process.env && process.env.__MINIMATCH_TESTING_PLATFORM__ || process.platform : \"posix\";\n  var path = {\n    win32: { sep: \"\\\\\" },\n    posix: { sep: \"/\" }\n  };\n  exports.sep = defaultPlatform === \"win32\" ? path.win32.sep : path.posix.sep;\n  exports.minimatch.sep = exports.sep;\n  exports.GLOBSTAR = Symbol(\"globstar **\");\n  exports.minimatch.GLOBSTAR = exports.GLOBSTAR;\n  var qmark = \"[^/]\";\n  var star = qmark + \"*?\";\n  var twoStarDot = \"(?:(?!(?:\\\\/|^)(?:\\\\.{1,2})($|\\\\/)).)*?\";\n  var twoStarNoDot = \"(?:(?!(?:\\\\/|^)\\\\.).)*?\";\n  var filter = (pattern, options = {}) => (p) => (0, exports.minimatch)(p, pattern, options);\n  exports.filter = filter;\n  exports.minimatch.filter = exports.filter;\n  var ext = (a, b = {}) => Object.assign({}, a, b);\n  var defaults = (def) => {\n    if (!def || typeof def !== \"object\" || !Object.keys(def).length) {\n      return exports.minimatch;\n    }\n    const orig = exports.minimatch;\n    const m = (p, pattern, options = {}) => orig(p, pattern, ext(def, options));\n    return Object.assign(m, {\n      Minimatch: class Minimatch2 extends orig.Minimatch {\n        constructor(pattern, options = {}) {\n          super(pattern, ext(def, options));\n        }\n        static defaults(options) {\n          return orig.defaults(ext(def, options)).Minimatch;\n        }\n      },\n      AST: class AST extends orig.AST {\n        constructor(type, parent, options = {}) {\n          super(type, parent, ext(def, options));\n        }\n        static fromGlob(pattern, options = {}) {\n          return orig.AST.fromGlob(pattern, ext(def, options));\n        }\n      },\n      unescape: (s, options = {}) => orig.unescape(s, ext(def, options)),\n      escape: (s, options = {}) => orig.escape(s, ext(def, options)),\n      filter: (pattern, options = {}) => orig.filter(pattern, ext(def, options)),\n      defaults: (options) => orig.defaults(ext(def, options)),\n      makeRe: (pattern, options = {}) => orig.makeRe(pattern, ext(def, options)),\n      braceExpand: (pattern, options = {}) => orig.braceExpand(pattern, ext(def, options)),\n      match: (list, pattern, options = {}) => orig.match(list, pattern, ext(def, options)),\n      sep: orig.sep,\n      GLOBSTAR: exports.GLOBSTAR\n    });\n  };\n  exports.defaults = defaults;\n  exports.minimatch.defaults = exports.defaults;\n  var braceExpand = (pattern, options = {}) => {\n    (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n    if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n      return [pattern];\n    }\n    return (0, brace_expansion_1.default)(pattern);\n  };\n  exports.braceExpand = braceExpand;\n  exports.minimatch.braceExpand = exports.braceExpand;\n  var makeRe = (pattern, options = {}) => new Minimatch(pattern, options).makeRe();\n  exports.makeRe = makeRe;\n  exports.minimatch.makeRe = exports.makeRe;\n  var match = (list, pattern, options = {}) => {\n    const mm = new Minimatch(pattern, options);\n    list = list.filter((f) => mm.match(f));\n    if (mm.options.nonull && !list.length) {\n      list.push(pattern);\n    }\n    return list;\n  };\n  exports.match = match;\n  exports.minimatch.match = exports.match;\n  var globMagic = /[?*]|[+@!]\\(.*?\\)|\\[|\\]/;\n  var regExpEscape = (s) => s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n\n  class Minimatch {\n    options;\n    set;\n    pattern;\n    windowsPathsNoEscape;\n    nonegate;\n    negate;\n    comment;\n    empty;\n    preserveMultipleSlashes;\n    partial;\n    globSet;\n    globParts;\n    nocase;\n    isWindows;\n    platform;\n    windowsNoMagicRoot;\n    regexp;\n    constructor(pattern, options = {}) {\n      (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n      options = options || {};\n      this.options = options;\n      this.pattern = pattern;\n      this.platform = options.platform || defaultPlatform;\n      this.isWindows = this.platform === \"win32\";\n      this.windowsPathsNoEscape = !!options.windowsPathsNoEscape || options.allowWindowsEscape === false;\n      if (this.windowsPathsNoEscape) {\n        this.pattern = this.pattern.replace(/\\\\/g, \"/\");\n      }\n      this.preserveMultipleSlashes = !!options.preserveMultipleSlashes;\n      this.regexp = null;\n      this.negate = false;\n      this.nonegate = !!options.nonegate;\n      this.comment = false;\n      this.empty = false;\n      this.partial = !!options.partial;\n      this.nocase = !!this.options.nocase;\n      this.windowsNoMagicRoot = options.windowsNoMagicRoot !== undefined ? options.windowsNoMagicRoot : !!(this.isWindows && this.nocase);\n      this.globSet = [];\n      this.globParts = [];\n      this.set = [];\n      this.make();\n    }\n    hasMagic() {\n      if (this.options.magicalBraces && this.set.length > 1) {\n        return true;\n      }\n      for (const pattern of this.set) {\n        for (const part of pattern) {\n          if (typeof part !== \"string\")\n            return true;\n        }\n      }\n      return false;\n    }\n    debug(..._) {\n    }\n    make() {\n      const pattern = this.pattern;\n      const options = this.options;\n      if (!options.nocomment && pattern.charAt(0) === \"#\") {\n        this.comment = true;\n        return;\n      }\n      if (!pattern) {\n        this.empty = true;\n        return;\n      }\n      this.parseNegate();\n      this.globSet = [...new Set(this.braceExpand())];\n      if (options.debug) {\n        this.debug = (...args) => console.error(...args);\n      }\n      this.debug(this.pattern, this.globSet);\n      const rawGlobParts = this.globSet.map((s) => this.slashSplit(s));\n      this.globParts = this.preprocess(rawGlobParts);\n      this.debug(this.pattern, this.globParts);\n      let set = this.globParts.map((s, _, __) => {\n        if (this.isWindows && this.windowsNoMagicRoot) {\n          const isUNC = s[0] === \"\" && s[1] === \"\" && (s[2] === \"?\" || !globMagic.test(s[2])) && !globMagic.test(s[3]);\n          const isDrive = /^[a-z]:/i.test(s[0]);\n          if (isUNC) {\n            return [...s.slice(0, 4), ...s.slice(4).map((ss) => this.parse(ss))];\n          } else if (isDrive) {\n            return [s[0], ...s.slice(1).map((ss) => this.parse(ss))];\n          }\n        }\n        return s.map((ss) => this.parse(ss));\n      });\n      this.debug(this.pattern, set);\n      this.set = set.filter((s) => s.indexOf(false) === -1);\n      if (this.isWindows) {\n        for (let i = 0;i < this.set.length; i++) {\n          const p = this.set[i];\n          if (p[0] === \"\" && p[1] === \"\" && this.globParts[i][2] === \"?\" && typeof p[3] === \"string\" && /^[a-z]:$/i.test(p[3])) {\n            p[2] = \"?\";\n          }\n        }\n      }\n      this.debug(this.pattern, this.set);\n    }\n    preprocess(globParts) {\n      if (this.options.noglobstar) {\n        for (let i = 0;i < globParts.length; i++) {\n          for (let j = 0;j < globParts[i].length; j++) {\n            if (globParts[i][j] === \"**\") {\n              globParts[i][j] = \"*\";\n            }\n          }\n        }\n      }\n      const { optimizationLevel = 1 } = this.options;\n      if (optimizationLevel >= 2) {\n        globParts = this.firstPhasePreProcess(globParts);\n        globParts = this.secondPhasePreProcess(globParts);\n      } else if (optimizationLevel >= 1) {\n        globParts = this.levelOneOptimize(globParts);\n      } else {\n        globParts = this.adjascentGlobstarOptimize(globParts);\n      }\n      return globParts;\n    }\n    adjascentGlobstarOptimize(globParts) {\n      return globParts.map((parts) => {\n        let gs = -1;\n        while ((gs = parts.indexOf(\"**\", gs + 1)) !== -1) {\n          let i = gs;\n          while (parts[i + 1] === \"**\") {\n            i++;\n          }\n          if (i !== gs) {\n            parts.splice(gs, i - gs);\n          }\n        }\n        return parts;\n      });\n    }\n    levelOneOptimize(globParts) {\n      return globParts.map((parts) => {\n        parts = parts.reduce((set, part) => {\n          const prev = set[set.length - 1];\n          if (part === \"**\" && prev === \"**\") {\n            return set;\n          }\n          if (part === \"..\") {\n            if (prev && prev !== \"..\" && prev !== \".\" && prev !== \"**\") {\n              set.pop();\n              return set;\n            }\n          }\n          set.push(part);\n          return set;\n        }, []);\n        return parts.length === 0 ? [\"\"] : parts;\n      });\n    }\n    levelTwoFileOptimize(parts) {\n      if (!Array.isArray(parts)) {\n        parts = this.slashSplit(parts);\n      }\n      let didSomething = false;\n      do {\n        didSomething = false;\n        if (!this.preserveMultipleSlashes) {\n          for (let i = 1;i < parts.length - 1; i++) {\n            const p = parts[i];\n            if (i === 1 && p === \"\" && parts[0] === \"\")\n              continue;\n            if (p === \".\" || p === \"\") {\n              didSomething = true;\n              parts.splice(i, 1);\n              i--;\n            }\n          }\n          if (parts[0] === \".\" && parts.length === 2 && (parts[1] === \".\" || parts[1] === \"\")) {\n            didSomething = true;\n            parts.pop();\n          }\n        }\n        let dd = 0;\n        while ((dd = parts.indexOf(\"..\", dd + 1)) !== -1) {\n          const p = parts[dd - 1];\n          if (p && p !== \".\" && p !== \"..\" && p !== \"**\") {\n            didSomething = true;\n            parts.splice(dd - 1, 2);\n            dd -= 2;\n          }\n        }\n      } while (didSomething);\n      return parts.length === 0 ? [\"\"] : parts;\n    }\n    firstPhasePreProcess(globParts) {\n      let didSomething = false;\n      do {\n        didSomething = false;\n        for (let parts of globParts) {\n          let gs = -1;\n          while ((gs = parts.indexOf(\"**\", gs + 1)) !== -1) {\n            let gss = gs;\n            while (parts[gss + 1] === \"**\") {\n              gss++;\n            }\n            if (gss > gs) {\n              parts.splice(gs + 1, gss - gs);\n            }\n            let next = parts[gs + 1];\n            const p = parts[gs + 2];\n            const p2 = parts[gs + 3];\n            if (next !== \"..\")\n              continue;\n            if (!p || p === \".\" || p === \"..\" || !p2 || p2 === \".\" || p2 === \"..\") {\n              continue;\n            }\n            didSomething = true;\n            parts.splice(gs, 1);\n            const other = parts.slice(0);\n            other[gs] = \"**\";\n            globParts.push(other);\n            gs--;\n          }\n          if (!this.preserveMultipleSlashes) {\n            for (let i = 1;i < parts.length - 1; i++) {\n              const p = parts[i];\n              if (i === 1 && p === \"\" && parts[0] === \"\")\n                continue;\n              if (p === \".\" || p === \"\") {\n                didSomething = true;\n                parts.splice(i, 1);\n                i--;\n              }\n            }\n            if (parts[0] === \".\" && parts.length === 2 && (parts[1] === \".\" || parts[1] === \"\")) {\n              didSomething = true;\n              parts.pop();\n            }\n          }\n          let dd = 0;\n          while ((dd = parts.indexOf(\"..\", dd + 1)) !== -1) {\n            const p = parts[dd - 1];\n            if (p && p !== \".\" && p !== \"..\" && p !== \"**\") {\n              didSomething = true;\n              const needDot = dd === 1 && parts[dd + 1] === \"**\";\n              const splin = needDot ? [\".\"] : [];\n              parts.splice(dd - 1, 2, ...splin);\n              if (parts.length === 0)\n                parts.push(\"\");\n              dd -= 2;\n            }\n          }\n        }\n      } while (didSomething);\n      return globParts;\n    }\n    secondPhasePreProcess(globParts) {\n      for (let i = 0;i < globParts.length - 1; i++) {\n        for (let j = i + 1;j < globParts.length; j++) {\n          const matched = this.partsMatch(globParts[i], globParts[j], !this.preserveMultipleSlashes);\n          if (!matched)\n            continue;\n          globParts[i] = matched;\n          globParts[j] = [];\n        }\n      }\n      return globParts.filter((gs) => gs.length);\n    }\n    partsMatch(a, b, emptyGSMatch = false) {\n      let ai = 0;\n      let bi = 0;\n      let result = [];\n      let which = \"\";\n      while (ai < a.length && bi < b.length) {\n        if (a[ai] === b[bi]) {\n          result.push(which === \"b\" ? b[bi] : a[ai]);\n          ai++;\n          bi++;\n        } else if (emptyGSMatch && a[ai] === \"**\" && b[bi] === a[ai + 1]) {\n          result.push(a[ai]);\n          ai++;\n        } else if (emptyGSMatch && b[bi] === \"**\" && a[ai] === b[bi + 1]) {\n          result.push(b[bi]);\n          bi++;\n        } else if (a[ai] === \"*\" && b[bi] && (this.options.dot || !b[bi].startsWith(\".\")) && b[bi] !== \"**\") {\n          if (which === \"b\")\n            return false;\n          which = \"a\";\n          result.push(a[ai]);\n          ai++;\n          bi++;\n        } else if (b[bi] === \"*\" && a[ai] && (this.options.dot || !a[ai].startsWith(\".\")) && a[ai] !== \"**\") {\n          if (which === \"a\")\n            return false;\n          which = \"b\";\n          result.push(b[bi]);\n          ai++;\n          bi++;\n        } else {\n          return false;\n        }\n      }\n      return a.length === b.length && result;\n    }\n    parseNegate() {\n      if (this.nonegate)\n        return;\n      const pattern = this.pattern;\n      let negate = false;\n      let negateOffset = 0;\n      for (let i = 0;i < pattern.length && pattern.charAt(i) === \"!\"; i++) {\n        negate = !negate;\n        negateOffset++;\n      }\n      if (negateOffset)\n        this.pattern = pattern.slice(negateOffset);\n      this.negate = negate;\n    }\n    matchOne(file, pattern, partial = false) {\n      const options = this.options;\n      if (this.isWindows) {\n        const fileDrive = typeof file[0] === \"string\" && /^[a-z]:$/i.test(file[0]);\n        const fileUNC = !fileDrive && file[0] === \"\" && file[1] === \"\" && file[2] === \"?\" && /^[a-z]:$/i.test(file[3]);\n        const patternDrive = typeof pattern[0] === \"string\" && /^[a-z]:$/i.test(pattern[0]);\n        const patternUNC = !patternDrive && pattern[0] === \"\" && pattern[1] === \"\" && pattern[2] === \"?\" && typeof pattern[3] === \"string\" && /^[a-z]:$/i.test(pattern[3]);\n        const fdi = fileUNC ? 3 : fileDrive ? 0 : undefined;\n        const pdi = patternUNC ? 3 : patternDrive ? 0 : undefined;\n        if (typeof fdi === \"number\" && typeof pdi === \"number\") {\n          const [fd, pd] = [file[fdi], pattern[pdi]];\n          if (fd.toLowerCase() === pd.toLowerCase()) {\n            pattern[pdi] = fd;\n            if (pdi > fdi) {\n              pattern = pattern.slice(pdi);\n            } else if (fdi > pdi) {\n              file = file.slice(fdi);\n            }\n          }\n        }\n      }\n      const { optimizationLevel = 1 } = this.options;\n      if (optimizationLevel >= 2) {\n        file = this.levelTwoFileOptimize(file);\n      }\n      this.debug(\"matchOne\", this, { file, pattern });\n      this.debug(\"matchOne\", file.length, pattern.length);\n      for (var fi = 0, pi = 0, fl = file.length, pl = pattern.length;fi < fl && pi < pl; fi++, pi++) {\n        this.debug(\"matchOne loop\");\n        var p = pattern[pi];\n        var f = file[fi];\n        this.debug(pattern, p, f);\n        if (p === false) {\n          return false;\n        }\n        if (p === exports.GLOBSTAR) {\n          this.debug(\"GLOBSTAR\", [pattern, p, f]);\n          var fr = fi;\n          var pr = pi + 1;\n          if (pr === pl) {\n            this.debug(\"** at the end\");\n            for (;fi < fl; fi++) {\n              if (file[fi] === \".\" || file[fi] === \"..\" || !options.dot && file[fi].charAt(0) === \".\")\n                return false;\n            }\n            return true;\n          }\n          while (fr < fl) {\n            var swallowee = file[fr];\n            this.debug(\"\\nglobstar while\", file, fr, pattern, pr, swallowee);\n            if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n              this.debug(\"globstar found match!\", fr, fl, swallowee);\n              return true;\n            } else {\n              if (swallowee === \".\" || swallowee === \"..\" || !options.dot && swallowee.charAt(0) === \".\") {\n                this.debug(\"dot detected!\", file, fr, pattern, pr);\n                break;\n              }\n              this.debug(\"globstar swallow a segment, and continue\");\n              fr++;\n            }\n          }\n          if (partial) {\n            this.debug(\"\\n>>> no match, partial?\", file, fr, pattern, pr);\n            if (fr === fl) {\n              return true;\n            }\n          }\n          return false;\n        }\n        let hit;\n        if (typeof p === \"string\") {\n          hit = f === p;\n          this.debug(\"string match\", p, f, hit);\n        } else {\n          hit = p.test(f);\n          this.debug(\"pattern match\", p, f, hit);\n        }\n        if (!hit)\n          return false;\n      }\n      if (fi === fl && pi === pl) {\n        return true;\n      } else if (fi === fl) {\n        return partial;\n      } else if (pi === pl) {\n        return fi === fl - 1 && file[fi] === \"\";\n      } else {\n        throw new Error(\"wtf?\");\n      }\n    }\n    braceExpand() {\n      return (0, exports.braceExpand)(this.pattern, this.options);\n    }\n    parse(pattern) {\n      (0, assert_valid_pattern_js_1.assertValidPattern)(pattern);\n      const options = this.options;\n      if (pattern === \"**\")\n        return exports.GLOBSTAR;\n      if (pattern === \"\")\n        return \"\";\n      let m;\n      let fastTest = null;\n      if (m = pattern.match(starRE)) {\n        fastTest = options.dot ? starTestDot : starTest;\n      } else if (m = pattern.match(starDotExtRE)) {\n        fastTest = (options.nocase ? options.dot ? starDotExtTestNocaseDot : starDotExtTestNocase : options.dot ? starDotExtTestDot : starDotExtTest)(m[1]);\n      } else if (m = pattern.match(qmarksRE)) {\n        fastTest = (options.nocase ? options.dot ? qmarksTestNocaseDot : qmarksTestNocase : options.dot ? qmarksTestDot : qmarksTest)(m);\n      } else if (m = pattern.match(starDotStarRE)) {\n        fastTest = options.dot ? starDotStarTestDot : starDotStarTest;\n      } else if (m = pattern.match(dotStarRE)) {\n        fastTest = dotStarTest;\n      }\n      const re = ast_js_1.AST.fromGlob(pattern, this.options).toMMPattern();\n      return fastTest ? Object.assign(re, { test: fastTest }) : re;\n    }\n    makeRe() {\n      if (this.regexp || this.regexp === false)\n        return this.regexp;\n      const set = this.set;\n      if (!set.length) {\n        this.regexp = false;\n        return this.regexp;\n      }\n      const options = this.options;\n      const twoStar = options.noglobstar ? star : options.dot ? twoStarDot : twoStarNoDot;\n      const flags = new Set(options.nocase ? [\"i\"] : []);\n      let re = set.map((pattern) => {\n        const pp = pattern.map((p) => {\n          if (p instanceof RegExp) {\n            for (const f of p.flags.split(\"\"))\n              flags.add(f);\n          }\n          return typeof p === \"string\" ? regExpEscape(p) : p === exports.GLOBSTAR ? exports.GLOBSTAR : p._src;\n        });\n        pp.forEach((p, i) => {\n          const next = pp[i + 1];\n          const prev = pp[i - 1];\n          if (p !== exports.GLOBSTAR || prev === exports.GLOBSTAR) {\n            return;\n          }\n          if (prev === undefined) {\n            if (next !== undefined && next !== exports.GLOBSTAR) {\n              pp[i + 1] = \"(?:\\\\/|\" + twoStar + \"\\\\/)?\" + next;\n            } else {\n              pp[i] = twoStar;\n            }\n          } else if (next === undefined) {\n            pp[i - 1] = prev + \"(?:\\\\/|\" + twoStar + \")?\";\n          } else if (next !== exports.GLOBSTAR) {\n            pp[i - 1] = prev + \"(?:\\\\/|\\\\/\" + twoStar + \"\\\\/)\" + next;\n            pp[i + 1] = exports.GLOBSTAR;\n          }\n        });\n        return pp.filter((p) => p !== exports.GLOBSTAR).join(\"/\");\n      }).join(\"|\");\n      const [open, close] = set.length > 1 ? [\"(?:\", \")\"] : [\"\", \"\"];\n      re = \"^\" + open + re + close + \"$\";\n      if (this.negate)\n        re = \"^(?!\" + re + \").+$\";\n      try {\n        this.regexp = new RegExp(re, [...flags].join(\"\"));\n      } catch (ex) {\n        this.regexp = false;\n      }\n      return this.regexp;\n    }\n    slashSplit(p) {\n      if (this.preserveMultipleSlashes) {\n        return p.split(\"/\");\n      } else if (this.isWindows && /^\\/\\/[^\\/]+/.test(p)) {\n        return [\"\", ...p.split(/\\/+/)];\n      } else {\n        return p.split(/\\/+/);\n      }\n    }\n    match(f, partial = this.partial) {\n      this.debug(\"match\", f, this.pattern);\n      if (this.comment) {\n        return false;\n      }\n      if (this.empty) {\n        return f === \"\";\n      }\n      if (f === \"/\" && partial) {\n        return true;\n      }\n      const options = this.options;\n      if (this.isWindows) {\n        f = f.split(\"\\\\\").join(\"/\");\n      }\n      const ff = this.slashSplit(f);\n      this.debug(this.pattern, \"split\", ff);\n      const set = this.set;\n      this.debug(this.pattern, \"set\", set);\n      let filename = ff[ff.length - 1];\n      if (!filename) {\n        for (let i = ff.length - 2;!filename && i >= 0; i--) {\n          filename = ff[i];\n        }\n      }\n      for (let i = 0;i < set.length; i++) {\n        const pattern = set[i];\n        let file = ff;\n        if (options.matchBase && pattern.length === 1) {\n          file = [filename];\n        }\n        const hit = this.matchOne(file, pattern, partial);\n        if (hit) {\n          if (options.flipNegate) {\n            return true;\n          }\n          return !this.negate;\n        }\n      }\n      if (options.flipNegate) {\n        return false;\n      }\n      return this.negate;\n    }\n    static defaults(def) {\n      return exports.minimatch.defaults(def).Minimatch;\n    }\n  }\n  exports.Minimatch = Minimatch;\n  var ast_js_2 = require_ast();\n  Object.defineProperty(exports, \"AST\", { enumerable: true, get: function() {\n    return ast_js_2.AST;\n  } });\n  var escape_js_2 = require_escape();\n  Object.defineProperty(exports, \"escape\", { enumerable: true, get: function() {\n    return escape_js_2.escape;\n  } });\n  var unescape_js_2 = require_unescape();\n  Object.defineProperty(exports, \"unescape\", { enumerable: true, get: function() {\n    return unescape_js_2.unescape;\n  } });\n  exports.minimatch.AST = ast_js_1.AST;\n  exports.minimatch.Minimatch = Minimatch;\n  exports.minimatch.escape = escape_js_1.escape;\n  exports.minimatch.unescape = unescape_js_1.unescape;\n});\n\n// node_modules/path-scurry/node_modules/lru-cache/dist/cjs/index.js\nvar require_cjs2 = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.LRUCache = undefined;\n  var perf = typeof performance === \"object\" && performance && typeof performance.now === \"function\" ? performance : Date;\n  var warned = new Set;\n  var PROCESS = typeof process === \"object\" && !!process ? process : {};\n  var emitWarning = (msg, type, code, fn) => {\n    typeof PROCESS.emitWarning === \"function\" ? PROCESS.emitWarning(msg, type, code, fn) : console.error(`[${code}] ${type}: ${msg}`);\n  };\n  var AC = globalThis.AbortController;\n  var AS = globalThis.AbortSignal;\n  if (typeof AC === \"undefined\") {\n    AS = class AbortSignal2 {\n      onabort;\n      _onabort = [];\n      reason;\n      aborted = false;\n      addEventListener(_, fn) {\n        this._onabort.push(fn);\n      }\n    };\n    AC = class AbortController2 {\n      constructor() {\n        warnACPolyfill();\n      }\n      signal = new AS;\n      abort(reason) {\n        if (this.signal.aborted)\n          return;\n        this.signal.reason = reason;\n        this.signal.aborted = true;\n        for (const fn of this.signal._onabort) {\n          fn(reason);\n        }\n        this.signal.onabort?.(reason);\n      }\n    };\n    let printACPolyfillWarning = PROCESS.env?.LRU_CACHE_IGNORE_AC_WARNING !== \"1\";\n    const warnACPolyfill = () => {\n      if (!printACPolyfillWarning)\n        return;\n      printACPolyfillWarning = false;\n      emitWarning(\"AbortController is not defined. If using lru-cache in node 14, load an AbortController polyfill from the `node-abort-controller` package. A minimal polyfill is provided for use by LRUCache.fetch(), but it should not be relied upon in other contexts (eg, passing it to other APIs that use AbortController/AbortSignal might have undesirable effects). You may disable this with LRU_CACHE_IGNORE_AC_WARNING=1 in the env.\", \"NO_ABORT_CONTROLLER\", \"ENOTSUP\", warnACPolyfill);\n    };\n  }\n  var shouldWarn = (code) => !warned.has(code);\n  var TYPE = Symbol(\"type\");\n  var isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n  var getUintArray = (max) => !isPosInt(max) ? null : max <= Math.pow(2, 8) ? Uint8Array : max <= Math.pow(2, 16) ? Uint16Array : max <= Math.pow(2, 32) ? Uint32Array : max <= Number.MAX_SAFE_INTEGER ? ZeroArray : null;\n\n  class ZeroArray extends Array {\n    constructor(size) {\n      super(size);\n      this.fill(0);\n    }\n  }\n\n  class Stack {\n    heap;\n    length;\n    static #constructing = false;\n    static create(max) {\n      const HeapCls = getUintArray(max);\n      if (!HeapCls)\n        return [];\n      Stack.#constructing = true;\n      const s = new Stack(max, HeapCls);\n      Stack.#constructing = false;\n      return s;\n    }\n    constructor(max, HeapCls) {\n      if (!Stack.#constructing) {\n        throw new TypeError(\"instantiate Stack using Stack.create(n)\");\n      }\n      this.heap = new HeapCls(max);\n      this.length = 0;\n    }\n    push(n) {\n      this.heap[this.length++] = n;\n    }\n    pop() {\n      return this.heap[--this.length];\n    }\n  }\n\n  class LRUCache {\n    #max;\n    #maxSize;\n    #dispose;\n    #disposeAfter;\n    #fetchMethod;\n    ttl;\n    ttlResolution;\n    ttlAutopurge;\n    updateAgeOnGet;\n    updateAgeOnHas;\n    allowStale;\n    noDisposeOnSet;\n    noUpdateTTL;\n    maxEntrySize;\n    sizeCalculation;\n    noDeleteOnFetchRejection;\n    noDeleteOnStaleGet;\n    allowStaleOnFetchAbort;\n    allowStaleOnFetchRejection;\n    ignoreFetchAbort;\n    #size;\n    #calculatedSize;\n    #keyMap;\n    #keyList;\n    #valList;\n    #next;\n    #prev;\n    #head;\n    #tail;\n    #free;\n    #disposed;\n    #sizes;\n    #starts;\n    #ttls;\n    #hasDispose;\n    #hasFetchMethod;\n    #hasDisposeAfter;\n    static unsafeExposeInternals(c) {\n      return {\n        starts: c.#starts,\n        ttls: c.#ttls,\n        sizes: c.#sizes,\n        keyMap: c.#keyMap,\n        keyList: c.#keyList,\n        valList: c.#valList,\n        next: c.#next,\n        prev: c.#prev,\n        get head() {\n          return c.#head;\n        },\n        get tail() {\n          return c.#tail;\n        },\n        free: c.#free,\n        isBackgroundFetch: (p) => c.#isBackgroundFetch(p),\n        backgroundFetch: (k, index, options, context) => c.#backgroundFetch(k, index, options, context),\n        moveToTail: (index) => c.#moveToTail(index),\n        indexes: (options) => c.#indexes(options),\n        rindexes: (options) => c.#rindexes(options),\n        isStale: (index) => c.#isStale(index)\n      };\n    }\n    get max() {\n      return this.#max;\n    }\n    get maxSize() {\n      return this.#maxSize;\n    }\n    get calculatedSize() {\n      return this.#calculatedSize;\n    }\n    get size() {\n      return this.#size;\n    }\n    get fetchMethod() {\n      return this.#fetchMethod;\n    }\n    get dispose() {\n      return this.#dispose;\n    }\n    get disposeAfter() {\n      return this.#disposeAfter;\n    }\n    constructor(options) {\n      const { max = 0, ttl, ttlResolution = 1, ttlAutopurge, updateAgeOnGet, updateAgeOnHas, allowStale, dispose, disposeAfter, noDisposeOnSet, noUpdateTTL, maxSize = 0, maxEntrySize = 0, sizeCalculation, fetchMethod, noDeleteOnFetchRejection, noDeleteOnStaleGet, allowStaleOnFetchRejection, allowStaleOnFetchAbort, ignoreFetchAbort } = options;\n      if (max !== 0 && !isPosInt(max)) {\n        throw new TypeError(\"max option must be a nonnegative integer\");\n      }\n      const UintArray = max ? getUintArray(max) : Array;\n      if (!UintArray) {\n        throw new Error(\"invalid max value: \" + max);\n      }\n      this.#max = max;\n      this.#maxSize = maxSize;\n      this.maxEntrySize = maxEntrySize || this.#maxSize;\n      this.sizeCalculation = sizeCalculation;\n      if (this.sizeCalculation) {\n        if (!this.#maxSize && !this.maxEntrySize) {\n          throw new TypeError(\"cannot set sizeCalculation without setting maxSize or maxEntrySize\");\n        }\n        if (typeof this.sizeCalculation !== \"function\") {\n          throw new TypeError(\"sizeCalculation set to non-function\");\n        }\n      }\n      if (fetchMethod !== undefined && typeof fetchMethod !== \"function\") {\n        throw new TypeError(\"fetchMethod must be a function if specified\");\n      }\n      this.#fetchMethod = fetchMethod;\n      this.#hasFetchMethod = !!fetchMethod;\n      this.#keyMap = new Map;\n      this.#keyList = new Array(max).fill(undefined);\n      this.#valList = new Array(max).fill(undefined);\n      this.#next = new UintArray(max);\n      this.#prev = new UintArray(max);\n      this.#head = 0;\n      this.#tail = 0;\n      this.#free = Stack.create(max);\n      this.#size = 0;\n      this.#calculatedSize = 0;\n      if (typeof dispose === \"function\") {\n        this.#dispose = dispose;\n      }\n      if (typeof disposeAfter === \"function\") {\n        this.#disposeAfter = disposeAfter;\n        this.#disposed = [];\n      } else {\n        this.#disposeAfter = undefined;\n        this.#disposed = undefined;\n      }\n      this.#hasDispose = !!this.#dispose;\n      this.#hasDisposeAfter = !!this.#disposeAfter;\n      this.noDisposeOnSet = !!noDisposeOnSet;\n      this.noUpdateTTL = !!noUpdateTTL;\n      this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n      this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n      this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n      this.ignoreFetchAbort = !!ignoreFetchAbort;\n      if (this.maxEntrySize !== 0) {\n        if (this.#maxSize !== 0) {\n          if (!isPosInt(this.#maxSize)) {\n            throw new TypeError(\"maxSize must be a positive integer if specified\");\n          }\n        }\n        if (!isPosInt(this.maxEntrySize)) {\n          throw new TypeError(\"maxEntrySize must be a positive integer if specified\");\n        }\n        this.#initializeSizeTracking();\n      }\n      this.allowStale = !!allowStale;\n      this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n      this.updateAgeOnGet = !!updateAgeOnGet;\n      this.updateAgeOnHas = !!updateAgeOnHas;\n      this.ttlResolution = isPosInt(ttlResolution) || ttlResolution === 0 ? ttlResolution : 1;\n      this.ttlAutopurge = !!ttlAutopurge;\n      this.ttl = ttl || 0;\n      if (this.ttl) {\n        if (!isPosInt(this.ttl)) {\n          throw new TypeError(\"ttl must be a positive integer if specified\");\n        }\n        this.#initializeTTLTracking();\n      }\n      if (this.#max === 0 && this.ttl === 0 && this.#maxSize === 0) {\n        throw new TypeError(\"At least one of max, maxSize, or ttl is required\");\n      }\n      if (!this.ttlAutopurge && !this.#max && !this.#maxSize) {\n        const code = \"LRU_CACHE_UNBOUNDED\";\n        if (shouldWarn(code)) {\n          warned.add(code);\n          const msg = \"TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.\";\n          emitWarning(msg, \"UnboundedCacheWarning\", code, LRUCache);\n        }\n      }\n    }\n    getRemainingTTL(key) {\n      return this.#keyMap.has(key) ? Infinity : 0;\n    }\n    #initializeTTLTracking() {\n      const ttls = new ZeroArray(this.#max);\n      const starts = new ZeroArray(this.#max);\n      this.#ttls = ttls;\n      this.#starts = starts;\n      this.#setItemTTL = (index, ttl, start = perf.now()) => {\n        starts[index] = ttl !== 0 ? start : 0;\n        ttls[index] = ttl;\n        if (ttl !== 0 && this.ttlAutopurge) {\n          const t = setTimeout(() => {\n            if (this.#isStale(index)) {\n              this.delete(this.#keyList[index]);\n            }\n          }, ttl + 1);\n          if (t.unref) {\n            t.unref();\n          }\n        }\n      };\n      this.#updateItemAge = (index) => {\n        starts[index] = ttls[index] !== 0 ? perf.now() : 0;\n      };\n      this.#statusTTL = (status, index) => {\n        if (ttls[index]) {\n          const ttl = ttls[index];\n          const start = starts[index];\n          status.ttl = ttl;\n          status.start = start;\n          status.now = cachedNow || getNow();\n          const age = status.now - start;\n          status.remainingTTL = ttl - age;\n        }\n      };\n      let cachedNow = 0;\n      const getNow = () => {\n        const n = perf.now();\n        if (this.ttlResolution > 0) {\n          cachedNow = n;\n          const t = setTimeout(() => cachedNow = 0, this.ttlResolution);\n          if (t.unref) {\n            t.unref();\n          }\n        }\n        return n;\n      };\n      this.getRemainingTTL = (key) => {\n        const index = this.#keyMap.get(key);\n        if (index === undefined) {\n          return 0;\n        }\n        const ttl = ttls[index];\n        const start = starts[index];\n        if (ttl === 0 || start === 0) {\n          return Infinity;\n        }\n        const age = (cachedNow || getNow()) - start;\n        return ttl - age;\n      };\n      this.#isStale = (index) => {\n        return ttls[index] !== 0 && starts[index] !== 0 && (cachedNow || getNow()) - starts[index] > ttls[index];\n      };\n    }\n    #updateItemAge = () => {\n    };\n    #statusTTL = () => {\n    };\n    #setItemTTL = () => {\n    };\n    #isStale = () => false;\n    #initializeSizeTracking() {\n      const sizes = new ZeroArray(this.#max);\n      this.#calculatedSize = 0;\n      this.#sizes = sizes;\n      this.#removeItemSize = (index) => {\n        this.#calculatedSize -= sizes[index];\n        sizes[index] = 0;\n      };\n      this.#requireSize = (k, v, size, sizeCalculation) => {\n        if (this.#isBackgroundFetch(v)) {\n          return 0;\n        }\n        if (!isPosInt(size)) {\n          if (sizeCalculation) {\n            if (typeof sizeCalculation !== \"function\") {\n              throw new TypeError(\"sizeCalculation must be a function\");\n            }\n            size = sizeCalculation(v, k);\n            if (!isPosInt(size)) {\n              throw new TypeError(\"sizeCalculation return invalid (expect positive integer)\");\n            }\n          } else {\n            throw new TypeError(\"invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.\");\n          }\n        }\n        return size;\n      };\n      this.#addItemSize = (index, size, status) => {\n        sizes[index] = size;\n        if (this.#maxSize) {\n          const maxSize = this.#maxSize - sizes[index];\n          while (this.#calculatedSize > maxSize) {\n            this.#evict(true);\n          }\n        }\n        this.#calculatedSize += sizes[index];\n        if (status) {\n          status.entrySize = size;\n          status.totalCalculatedSize = this.#calculatedSize;\n        }\n      };\n    }\n    #removeItemSize = (_i) => {\n    };\n    #addItemSize = (_i, _s, _st) => {\n    };\n    #requireSize = (_k, _v, size, sizeCalculation) => {\n      if (size || sizeCalculation) {\n        throw new TypeError(\"cannot set size without setting maxSize or maxEntrySize on cache\");\n      }\n      return 0;\n    };\n    *#indexes({ allowStale = this.allowStale } = {}) {\n      if (this.#size) {\n        for (let i = this.#tail;; ) {\n          if (!this.#isValidIndex(i)) {\n            break;\n          }\n          if (allowStale || !this.#isStale(i)) {\n            yield i;\n          }\n          if (i === this.#head) {\n            break;\n          } else {\n            i = this.#prev[i];\n          }\n        }\n      }\n    }\n    *#rindexes({ allowStale = this.allowStale } = {}) {\n      if (this.#size) {\n        for (let i = this.#head;; ) {\n          if (!this.#isValidIndex(i)) {\n            break;\n          }\n          if (allowStale || !this.#isStale(i)) {\n            yield i;\n          }\n          if (i === this.#tail) {\n            break;\n          } else {\n            i = this.#next[i];\n          }\n        }\n      }\n    }\n    #isValidIndex(index) {\n      return index !== undefined && this.#keyMap.get(this.#keyList[index]) === index;\n    }\n    *entries() {\n      for (const i of this.#indexes()) {\n        if (this.#valList[i] !== undefined && this.#keyList[i] !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n          yield [this.#keyList[i], this.#valList[i]];\n        }\n      }\n    }\n    *rentries() {\n      for (const i of this.#rindexes()) {\n        if (this.#valList[i] !== undefined && this.#keyList[i] !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n          yield [this.#keyList[i], this.#valList[i]];\n        }\n      }\n    }\n    *keys() {\n      for (const i of this.#indexes()) {\n        const k = this.#keyList[i];\n        if (k !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n          yield k;\n        }\n      }\n    }\n    *rkeys() {\n      for (const i of this.#rindexes()) {\n        const k = this.#keyList[i];\n        if (k !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n          yield k;\n        }\n      }\n    }\n    *values() {\n      for (const i of this.#indexes()) {\n        const v = this.#valList[i];\n        if (v !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n          yield this.#valList[i];\n        }\n      }\n    }\n    *rvalues() {\n      for (const i of this.#rindexes()) {\n        const v = this.#valList[i];\n        if (v !== undefined && !this.#isBackgroundFetch(this.#valList[i])) {\n          yield this.#valList[i];\n        }\n      }\n    }\n    [Symbol.iterator]() {\n      return this.entries();\n    }\n    find(fn, getOptions = {}) {\n      for (const i of this.#indexes()) {\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        if (fn(value, this.#keyList[i], this)) {\n          return this.get(this.#keyList[i], getOptions);\n        }\n      }\n    }\n    forEach(fn, thisp = this) {\n      for (const i of this.#indexes()) {\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        fn.call(thisp, value, this.#keyList[i], this);\n      }\n    }\n    rforEach(fn, thisp = this) {\n      for (const i of this.#rindexes()) {\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        fn.call(thisp, value, this.#keyList[i], this);\n      }\n    }\n    purgeStale() {\n      let deleted = false;\n      for (const i of this.#rindexes({ allowStale: true })) {\n        if (this.#isStale(i)) {\n          this.delete(this.#keyList[i]);\n          deleted = true;\n        }\n      }\n      return deleted;\n    }\n    dump() {\n      const arr = [];\n      for (const i of this.#indexes({ allowStale: true })) {\n        const key = this.#keyList[i];\n        const v = this.#valList[i];\n        const value = this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined || key === undefined)\n          continue;\n        const entry = { value };\n        if (this.#ttls && this.#starts) {\n          entry.ttl = this.#ttls[i];\n          const age = perf.now() - this.#starts[i];\n          entry.start = Math.floor(Date.now() - age);\n        }\n        if (this.#sizes) {\n          entry.size = this.#sizes[i];\n        }\n        arr.unshift([key, entry]);\n      }\n      return arr;\n    }\n    load(arr) {\n      this.clear();\n      for (const [key, entry] of arr) {\n        if (entry.start) {\n          const age = Date.now() - entry.start;\n          entry.start = perf.now() - age;\n        }\n        this.set(key, entry.value, entry);\n      }\n    }\n    set(k, v, setOptions = {}) {\n      if (v === undefined) {\n        this.delete(k);\n        return this;\n      }\n      const { ttl = this.ttl, start, noDisposeOnSet = this.noDisposeOnSet, sizeCalculation = this.sizeCalculation, status } = setOptions;\n      let { noUpdateTTL = this.noUpdateTTL } = setOptions;\n      const size = this.#requireSize(k, v, setOptions.size || 0, sizeCalculation);\n      if (this.maxEntrySize && size > this.maxEntrySize) {\n        if (status) {\n          status.set = \"miss\";\n          status.maxEntrySizeExceeded = true;\n        }\n        this.delete(k);\n        return this;\n      }\n      let index = this.#size === 0 ? undefined : this.#keyMap.get(k);\n      if (index === undefined) {\n        index = this.#size === 0 ? this.#tail : this.#free.length !== 0 ? this.#free.pop() : this.#size === this.#max ? this.#evict(false) : this.#size;\n        this.#keyList[index] = k;\n        this.#valList[index] = v;\n        this.#keyMap.set(k, index);\n        this.#next[this.#tail] = index;\n        this.#prev[index] = this.#tail;\n        this.#tail = index;\n        this.#size++;\n        this.#addItemSize(index, size, status);\n        if (status)\n          status.set = \"add\";\n        noUpdateTTL = false;\n      } else {\n        this.#moveToTail(index);\n        const oldVal = this.#valList[index];\n        if (v !== oldVal) {\n          if (this.#hasFetchMethod && this.#isBackgroundFetch(oldVal)) {\n            oldVal.__abortController.abort(new Error(\"replaced\"));\n          } else if (!noDisposeOnSet) {\n            if (this.#hasDispose) {\n              this.#dispose?.(oldVal, k, \"set\");\n            }\n            if (this.#hasDisposeAfter) {\n              this.#disposed?.push([oldVal, k, \"set\"]);\n            }\n          }\n          this.#removeItemSize(index);\n          this.#addItemSize(index, size, status);\n          this.#valList[index] = v;\n          if (status) {\n            status.set = \"replace\";\n            const oldValue = oldVal && this.#isBackgroundFetch(oldVal) ? oldVal.__staleWhileFetching : oldVal;\n            if (oldValue !== undefined)\n              status.oldValue = oldValue;\n          }\n        } else if (status) {\n          status.set = \"update\";\n        }\n      }\n      if (ttl !== 0 && !this.#ttls) {\n        this.#initializeTTLTracking();\n      }\n      if (this.#ttls) {\n        if (!noUpdateTTL) {\n          this.#setItemTTL(index, ttl, start);\n        }\n        if (status)\n          this.#statusTTL(status, index);\n      }\n      if (!noDisposeOnSet && this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed;\n        let task;\n        while (task = dt?.shift()) {\n          this.#disposeAfter?.(...task);\n        }\n      }\n      return this;\n    }\n    pop() {\n      try {\n        while (this.#size) {\n          const val = this.#valList[this.#head];\n          this.#evict(true);\n          if (this.#isBackgroundFetch(val)) {\n            if (val.__staleWhileFetching) {\n              return val.__staleWhileFetching;\n            }\n          } else if (val !== undefined) {\n            return val;\n          }\n        }\n      } finally {\n        if (this.#hasDisposeAfter && this.#disposed) {\n          const dt = this.#disposed;\n          let task;\n          while (task = dt?.shift()) {\n            this.#disposeAfter?.(...task);\n          }\n        }\n      }\n    }\n    #evict(free) {\n      const head = this.#head;\n      const k = this.#keyList[head];\n      const v = this.#valList[head];\n      if (this.#hasFetchMethod && this.#isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error(\"evicted\"));\n      } else if (this.#hasDispose || this.#hasDisposeAfter) {\n        if (this.#hasDispose) {\n          this.#dispose?.(v, k, \"evict\");\n        }\n        if (this.#hasDisposeAfter) {\n          this.#disposed?.push([v, k, \"evict\"]);\n        }\n      }\n      this.#removeItemSize(head);\n      if (free) {\n        this.#keyList[head] = undefined;\n        this.#valList[head] = undefined;\n        this.#free.push(head);\n      }\n      if (this.#size === 1) {\n        this.#head = this.#tail = 0;\n        this.#free.length = 0;\n      } else {\n        this.#head = this.#next[head];\n      }\n      this.#keyMap.delete(k);\n      this.#size--;\n      return head;\n    }\n    has(k, hasOptions = {}) {\n      const { updateAgeOnHas = this.updateAgeOnHas, status } = hasOptions;\n      const index = this.#keyMap.get(k);\n      if (index !== undefined) {\n        const v = this.#valList[index];\n        if (this.#isBackgroundFetch(v) && v.__staleWhileFetching === undefined) {\n          return false;\n        }\n        if (!this.#isStale(index)) {\n          if (updateAgeOnHas) {\n            this.#updateItemAge(index);\n          }\n          if (status) {\n            status.has = \"hit\";\n            this.#statusTTL(status, index);\n          }\n          return true;\n        } else if (status) {\n          status.has = \"stale\";\n          this.#statusTTL(status, index);\n        }\n      } else if (status) {\n        status.has = \"miss\";\n      }\n      return false;\n    }\n    peek(k, peekOptions = {}) {\n      const { allowStale = this.allowStale } = peekOptions;\n      const index = this.#keyMap.get(k);\n      if (index !== undefined && (allowStale || !this.#isStale(index))) {\n        const v = this.#valList[index];\n        return this.#isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n      }\n    }\n    #backgroundFetch(k, index, options, context) {\n      const v = index === undefined ? undefined : this.#valList[index];\n      if (this.#isBackgroundFetch(v)) {\n        return v;\n      }\n      const ac = new AC;\n      const { signal } = options;\n      signal?.addEventListener(\"abort\", () => ac.abort(signal.reason), {\n        signal: ac.signal\n      });\n      const fetchOpts = {\n        signal: ac.signal,\n        options,\n        context\n      };\n      const cb = (v2, updateCache = false) => {\n        const { aborted } = ac.signal;\n        const ignoreAbort = options.ignoreFetchAbort && v2 !== undefined;\n        if (options.status) {\n          if (aborted && !updateCache) {\n            options.status.fetchAborted = true;\n            options.status.fetchError = ac.signal.reason;\n            if (ignoreAbort)\n              options.status.fetchAbortIgnored = true;\n          } else {\n            options.status.fetchResolved = true;\n          }\n        }\n        if (aborted && !ignoreAbort && !updateCache) {\n          return fetchFail(ac.signal.reason);\n        }\n        const bf2 = p;\n        if (this.#valList[index] === p) {\n          if (v2 === undefined) {\n            if (bf2.__staleWhileFetching) {\n              this.#valList[index] = bf2.__staleWhileFetching;\n            } else {\n              this.delete(k);\n            }\n          } else {\n            if (options.status)\n              options.status.fetchUpdated = true;\n            this.set(k, v2, fetchOpts.options);\n          }\n        }\n        return v2;\n      };\n      const eb = (er) => {\n        if (options.status) {\n          options.status.fetchRejected = true;\n          options.status.fetchError = er;\n        }\n        return fetchFail(er);\n      };\n      const fetchFail = (er) => {\n        const { aborted } = ac.signal;\n        const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n        const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n        const noDelete = allowStale || options.noDeleteOnFetchRejection;\n        const bf2 = p;\n        if (this.#valList[index] === p) {\n          const del = !noDelete || bf2.__staleWhileFetching === undefined;\n          if (del) {\n            this.delete(k);\n          } else if (!allowStaleAborted) {\n            this.#valList[index] = bf2.__staleWhileFetching;\n          }\n        }\n        if (allowStale) {\n          if (options.status && bf2.__staleWhileFetching !== undefined) {\n            options.status.returnedStale = true;\n          }\n          return bf2.__staleWhileFetching;\n        } else if (bf2.__returned === bf2) {\n          throw er;\n        }\n      };\n      const pcall = (res, rej) => {\n        const fmp = this.#fetchMethod?.(k, v, fetchOpts);\n        if (fmp && fmp instanceof Promise) {\n          fmp.then((v2) => res(v2 === undefined ? undefined : v2), rej);\n        }\n        ac.signal.addEventListener(\"abort\", () => {\n          if (!options.ignoreFetchAbort || options.allowStaleOnFetchAbort) {\n            res(undefined);\n            if (options.allowStaleOnFetchAbort) {\n              res = (v2) => cb(v2, true);\n            }\n          }\n        });\n      };\n      if (options.status)\n        options.status.fetchDispatched = true;\n      const p = new Promise(pcall).then(cb, eb);\n      const bf = Object.assign(p, {\n        __abortController: ac,\n        __staleWhileFetching: v,\n        __returned: undefined\n      });\n      if (index === undefined) {\n        this.set(k, bf, { ...fetchOpts.options, status: undefined });\n        index = this.#keyMap.get(k);\n      } else {\n        this.#valList[index] = bf;\n      }\n      return bf;\n    }\n    #isBackgroundFetch(p) {\n      if (!this.#hasFetchMethod)\n        return false;\n      const b = p;\n      return !!b && b instanceof Promise && b.hasOwnProperty(\"__staleWhileFetching\") && b.__abortController instanceof AC;\n    }\n    async fetch(k, fetchOptions = {}) {\n      const {\n        allowStale = this.allowStale,\n        updateAgeOnGet = this.updateAgeOnGet,\n        noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n        ttl = this.ttl,\n        noDisposeOnSet = this.noDisposeOnSet,\n        size = 0,\n        sizeCalculation = this.sizeCalculation,\n        noUpdateTTL = this.noUpdateTTL,\n        noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n        allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n        ignoreFetchAbort = this.ignoreFetchAbort,\n        allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n        context,\n        forceRefresh = false,\n        status,\n        signal\n      } = fetchOptions;\n      if (!this.#hasFetchMethod) {\n        if (status)\n          status.fetch = \"get\";\n        return this.get(k, {\n          allowStale,\n          updateAgeOnGet,\n          noDeleteOnStaleGet,\n          status\n        });\n      }\n      const options = {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        ttl,\n        noDisposeOnSet,\n        size,\n        sizeCalculation,\n        noUpdateTTL,\n        noDeleteOnFetchRejection,\n        allowStaleOnFetchRejection,\n        allowStaleOnFetchAbort,\n        ignoreFetchAbort,\n        status,\n        signal\n      };\n      let index = this.#keyMap.get(k);\n      if (index === undefined) {\n        if (status)\n          status.fetch = \"miss\";\n        const p = this.#backgroundFetch(k, index, options, context);\n        return p.__returned = p;\n      } else {\n        const v = this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n          const stale = allowStale && v.__staleWhileFetching !== undefined;\n          if (status) {\n            status.fetch = \"inflight\";\n            if (stale)\n              status.returnedStale = true;\n          }\n          return stale ? v.__staleWhileFetching : v.__returned = v;\n        }\n        const isStale = this.#isStale(index);\n        if (!forceRefresh && !isStale) {\n          if (status)\n            status.fetch = \"hit\";\n          this.#moveToTail(index);\n          if (updateAgeOnGet) {\n            this.#updateItemAge(index);\n          }\n          if (status)\n            this.#statusTTL(status, index);\n          return v;\n        }\n        const p = this.#backgroundFetch(k, index, options, context);\n        const hasStale = p.__staleWhileFetching !== undefined;\n        const staleVal = hasStale && allowStale;\n        if (status) {\n          status.fetch = isStale ? \"stale\" : \"refresh\";\n          if (staleVal && isStale)\n            status.returnedStale = true;\n        }\n        return staleVal ? p.__staleWhileFetching : p.__returned = p;\n      }\n    }\n    get(k, getOptions = {}) {\n      const { allowStale = this.allowStale, updateAgeOnGet = this.updateAgeOnGet, noDeleteOnStaleGet = this.noDeleteOnStaleGet, status } = getOptions;\n      const index = this.#keyMap.get(k);\n      if (index !== undefined) {\n        const value = this.#valList[index];\n        const fetching = this.#isBackgroundFetch(value);\n        if (status)\n          this.#statusTTL(status, index);\n        if (this.#isStale(index)) {\n          if (status)\n            status.get = \"stale\";\n          if (!fetching) {\n            if (!noDeleteOnStaleGet) {\n              this.delete(k);\n            }\n            if (status && allowStale)\n              status.returnedStale = true;\n            return allowStale ? value : undefined;\n          } else {\n            if (status && allowStale && value.__staleWhileFetching !== undefined) {\n              status.returnedStale = true;\n            }\n            return allowStale ? value.__staleWhileFetching : undefined;\n          }\n        } else {\n          if (status)\n            status.get = \"hit\";\n          if (fetching) {\n            return value.__staleWhileFetching;\n          }\n          this.#moveToTail(index);\n          if (updateAgeOnGet) {\n            this.#updateItemAge(index);\n          }\n          return value;\n        }\n      } else if (status) {\n        status.get = \"miss\";\n      }\n    }\n    #connect(p, n) {\n      this.#prev[n] = p;\n      this.#next[p] = n;\n    }\n    #moveToTail(index) {\n      if (index !== this.#tail) {\n        if (index === this.#head) {\n          this.#head = this.#next[index];\n        } else {\n          this.#connect(this.#prev[index], this.#next[index]);\n        }\n        this.#connect(this.#tail, index);\n        this.#tail = index;\n      }\n    }\n    delete(k) {\n      let deleted = false;\n      if (this.#size !== 0) {\n        const index = this.#keyMap.get(k);\n        if (index !== undefined) {\n          deleted = true;\n          if (this.#size === 1) {\n            this.clear();\n          } else {\n            this.#removeItemSize(index);\n            const v = this.#valList[index];\n            if (this.#isBackgroundFetch(v)) {\n              v.__abortController.abort(new Error(\"deleted\"));\n            } else if (this.#hasDispose || this.#hasDisposeAfter) {\n              if (this.#hasDispose) {\n                this.#dispose?.(v, k, \"delete\");\n              }\n              if (this.#hasDisposeAfter) {\n                this.#disposed?.push([v, k, \"delete\"]);\n              }\n            }\n            this.#keyMap.delete(k);\n            this.#keyList[index] = undefined;\n            this.#valList[index] = undefined;\n            if (index === this.#tail) {\n              this.#tail = this.#prev[index];\n            } else if (index === this.#head) {\n              this.#head = this.#next[index];\n            } else {\n              this.#next[this.#prev[index]] = this.#next[index];\n              this.#prev[this.#next[index]] = this.#prev[index];\n            }\n            this.#size--;\n            this.#free.push(index);\n          }\n        }\n      }\n      if (this.#hasDisposeAfter && this.#disposed?.length) {\n        const dt = this.#disposed;\n        let task;\n        while (task = dt?.shift()) {\n          this.#disposeAfter?.(...task);\n        }\n      }\n      return deleted;\n    }\n    clear() {\n      for (const index of this.#rindexes({ allowStale: true })) {\n        const v = this.#valList[index];\n        if (this.#isBackgroundFetch(v)) {\n          v.__abortController.abort(new Error(\"deleted\"));\n        } else {\n          const k = this.#keyList[index];\n          if (this.#hasDispose) {\n            this.#dispose?.(v, k, \"delete\");\n          }\n          if (this.#hasDisposeAfter) {\n            this.#disposed?.push([v, k, \"delete\"]);\n          }\n        }\n      }\n      this.#keyMap.clear();\n      this.#valList.fill(undefined);\n      this.#keyList.fill(undefined);\n      if (this.#ttls && this.#starts) {\n        this.#ttls.fill(0);\n        this.#starts.fill(0);\n      }\n      if (this.#sizes) {\n        this.#sizes.fill(0);\n      }\n      this.#head = 0;\n      this.#tail = 0;\n      this.#free.length = 0;\n      this.#calculatedSize = 0;\n      this.#size = 0;\n      if (this.#hasDisposeAfter && this.#disposed) {\n        const dt = this.#disposed;\n        let task;\n        while (task = dt?.shift()) {\n          this.#disposeAfter?.(...task);\n        }\n      }\n    }\n  }\n  exports.LRUCache = LRUCache;\n});\n\n// node_modules/minipass/dist/cjs/index.js\nvar require_cjs3 = __commonJS((exports) => {\n  var __importDefault = exports && exports.__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : { default: mod };\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Minipass = exports.isWritable = exports.isReadable = exports.isStream = undefined;\n  var proc = typeof process === \"object\" && process ? process : {\n    stdout: null,\n    stderr: null\n  };\n  var node_events_1 = __require(\"node:events\");\n  var node_stream_1 = __importDefault(__require(\"node:stream\"));\n  var node_string_decoder_1 = __require(\"node:string_decoder\");\n  var isStream = (s) => !!s && typeof s === \"object\" && (s instanceof Minipass || s instanceof node_stream_1.default || (0, exports.isReadable)(s) || (0, exports.isWritable)(s));\n  exports.isStream = isStream;\n  var isReadable = (s) => !!s && typeof s === \"object\" && s instanceof node_events_1.EventEmitter && typeof s.pipe === \"function\" && s.pipe !== node_stream_1.default.Writable.prototype.pipe;\n  exports.isReadable = isReadable;\n  var isWritable = (s) => !!s && typeof s === \"object\" && s instanceof node_events_1.EventEmitter && typeof s.write === \"function\" && typeof s.end === \"function\";\n  exports.isWritable = isWritable;\n  var EOF = Symbol(\"EOF\");\n  var MAYBE_EMIT_END = Symbol(\"maybeEmitEnd\");\n  var EMITTED_END = Symbol(\"emittedEnd\");\n  var EMITTING_END = Symbol(\"emittingEnd\");\n  var EMITTED_ERROR = Symbol(\"emittedError\");\n  var CLOSED = Symbol(\"closed\");\n  var READ = Symbol(\"read\");\n  var FLUSH = Symbol(\"flush\");\n  var FLUSHCHUNK = Symbol(\"flushChunk\");\n  var ENCODING = Symbol(\"encoding\");\n  var DECODER = Symbol(\"decoder\");\n  var FLOWING = Symbol(\"flowing\");\n  var PAUSED = Symbol(\"paused\");\n  var RESUME = Symbol(\"resume\");\n  var BUFFER = Symbol(\"buffer\");\n  var PIPES = Symbol(\"pipes\");\n  var BUFFERLENGTH = Symbol(\"bufferLength\");\n  var BUFFERPUSH = Symbol(\"bufferPush\");\n  var BUFFERSHIFT = Symbol(\"bufferShift\");\n  var OBJECTMODE = Symbol(\"objectMode\");\n  var DESTROYED = Symbol(\"destroyed\");\n  var ERROR = Symbol(\"error\");\n  var EMITDATA = Symbol(\"emitData\");\n  var EMITEND = Symbol(\"emitEnd\");\n  var EMITEND2 = Symbol(\"emitEnd2\");\n  var ASYNC = Symbol(\"async\");\n  var ABORT = Symbol(\"abort\");\n  var ABORTED = Symbol(\"aborted\");\n  var SIGNAL = Symbol(\"signal\");\n  var DATALISTENERS = Symbol(\"dataListeners\");\n  var DISCARDED = Symbol(\"discarded\");\n  var defer = (fn) => Promise.resolve().then(fn);\n  var nodefer = (fn) => fn();\n  var isEndish = (ev) => ev === \"end\" || ev === \"finish\" || ev === \"prefinish\";\n  var isArrayBufferLike = (b) => b instanceof ArrayBuffer || !!b && typeof b === \"object\" && b.constructor && b.constructor.name === \"ArrayBuffer\" && b.byteLength >= 0;\n  var isArrayBufferView = (b) => !Buffer.isBuffer(b) && ArrayBuffer.isView(b);\n\n  class Pipe {\n    src;\n    dest;\n    opts;\n    ondrain;\n    constructor(src, dest, opts) {\n      this.src = src;\n      this.dest = dest;\n      this.opts = opts;\n      this.ondrain = () => src[RESUME]();\n      this.dest.on(\"drain\", this.ondrain);\n    }\n    unpipe() {\n      this.dest.removeListener(\"drain\", this.ondrain);\n    }\n    proxyErrors(_er) {\n    }\n    end() {\n      this.unpipe();\n      if (this.opts.end)\n        this.dest.end();\n    }\n  }\n\n  class PipeProxyErrors extends Pipe {\n    unpipe() {\n      this.src.removeListener(\"error\", this.proxyErrors);\n      super.unpipe();\n    }\n    constructor(src, dest, opts) {\n      super(src, dest, opts);\n      this.proxyErrors = (er) => dest.emit(\"error\", er);\n      src.on(\"error\", this.proxyErrors);\n    }\n  }\n  var isObjectModeOptions = (o) => !!o.objectMode;\n  var isEncodingOptions = (o) => !o.objectMode && !!o.encoding && o.encoding !== \"buffer\";\n\n  class Minipass extends node_events_1.EventEmitter {\n    [FLOWING] = false;\n    [PAUSED] = false;\n    [PIPES] = [];\n    [BUFFER] = [];\n    [OBJECTMODE];\n    [ENCODING];\n    [ASYNC];\n    [DECODER];\n    [EOF] = false;\n    [EMITTED_END] = false;\n    [EMITTING_END] = false;\n    [CLOSED] = false;\n    [EMITTED_ERROR] = null;\n    [BUFFERLENGTH] = 0;\n    [DESTROYED] = false;\n    [SIGNAL];\n    [ABORTED] = false;\n    [DATALISTENERS] = 0;\n    [DISCARDED] = false;\n    writable = true;\n    readable = true;\n    constructor(...args) {\n      const options = args[0] || {};\n      super();\n      if (options.objectMode && typeof options.encoding === \"string\") {\n        throw new TypeError(\"Encoding and objectMode may not be used together\");\n      }\n      if (isObjectModeOptions(options)) {\n        this[OBJECTMODE] = true;\n        this[ENCODING] = null;\n      } else if (isEncodingOptions(options)) {\n        this[ENCODING] = options.encoding;\n        this[OBJECTMODE] = false;\n      } else {\n        this[OBJECTMODE] = false;\n        this[ENCODING] = null;\n      }\n      this[ASYNC] = !!options.async;\n      this[DECODER] = this[ENCODING] ? new node_string_decoder_1.StringDecoder(this[ENCODING]) : null;\n      if (options && options.debugExposeBuffer === true) {\n        Object.defineProperty(this, \"buffer\", { get: () => this[BUFFER] });\n      }\n      if (options && options.debugExposePipes === true) {\n        Object.defineProperty(this, \"pipes\", { get: () => this[PIPES] });\n      }\n      const { signal } = options;\n      if (signal) {\n        this[SIGNAL] = signal;\n        if (signal.aborted) {\n          this[ABORT]();\n        } else {\n          signal.addEventListener(\"abort\", () => this[ABORT]());\n        }\n      }\n    }\n    get bufferLength() {\n      return this[BUFFERLENGTH];\n    }\n    get encoding() {\n      return this[ENCODING];\n    }\n    set encoding(_enc) {\n      throw new Error(\"Encoding must be set at instantiation time\");\n    }\n    setEncoding(_enc) {\n      throw new Error(\"Encoding must be set at instantiation time\");\n    }\n    get objectMode() {\n      return this[OBJECTMODE];\n    }\n    set objectMode(_om) {\n      throw new Error(\"objectMode must be set at instantiation time\");\n    }\n    get [\"async\"]() {\n      return this[ASYNC];\n    }\n    set [\"async\"](a) {\n      this[ASYNC] = this[ASYNC] || !!a;\n    }\n    [ABORT]() {\n      this[ABORTED] = true;\n      this.emit(\"abort\", this[SIGNAL]?.reason);\n      this.destroy(this[SIGNAL]?.reason);\n    }\n    get aborted() {\n      return this[ABORTED];\n    }\n    set aborted(_) {\n    }\n    write(chunk, encoding, cb) {\n      if (this[ABORTED])\n        return false;\n      if (this[EOF])\n        throw new Error(\"write after end\");\n      if (this[DESTROYED]) {\n        this.emit(\"error\", Object.assign(new Error(\"Cannot call write after a stream was destroyed\"), { code: \"ERR_STREAM_DESTROYED\" }));\n        return true;\n      }\n      if (typeof encoding === \"function\") {\n        cb = encoding;\n        encoding = \"utf8\";\n      }\n      if (!encoding)\n        encoding = \"utf8\";\n      const fn = this[ASYNC] ? defer : nodefer;\n      if (!this[OBJECTMODE] && !Buffer.isBuffer(chunk)) {\n        if (isArrayBufferView(chunk)) {\n          chunk = Buffer.from(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n        } else if (isArrayBufferLike(chunk)) {\n          chunk = Buffer.from(chunk);\n        } else if (typeof chunk !== \"string\") {\n          throw new Error(\"Non-contiguous data written to non-objectMode stream\");\n        }\n      }\n      if (this[OBJECTMODE]) {\n        if (this[FLOWING] && this[BUFFERLENGTH] !== 0)\n          this[FLUSH](true);\n        if (this[FLOWING])\n          this.emit(\"data\", chunk);\n        else\n          this[BUFFERPUSH](chunk);\n        if (this[BUFFERLENGTH] !== 0)\n          this.emit(\"readable\");\n        if (cb)\n          fn(cb);\n        return this[FLOWING];\n      }\n      if (!chunk.length) {\n        if (this[BUFFERLENGTH] !== 0)\n          this.emit(\"readable\");\n        if (cb)\n          fn(cb);\n        return this[FLOWING];\n      }\n      if (typeof chunk === \"string\" && !(encoding === this[ENCODING] && !this[DECODER]?.lastNeed)) {\n        chunk = Buffer.from(chunk, encoding);\n      }\n      if (Buffer.isBuffer(chunk) && this[ENCODING]) {\n        chunk = this[DECODER].write(chunk);\n      }\n      if (this[FLOWING] && this[BUFFERLENGTH] !== 0)\n        this[FLUSH](true);\n      if (this[FLOWING])\n        this.emit(\"data\", chunk);\n      else\n        this[BUFFERPUSH](chunk);\n      if (this[BUFFERLENGTH] !== 0)\n        this.emit(\"readable\");\n      if (cb)\n        fn(cb);\n      return this[FLOWING];\n    }\n    read(n) {\n      if (this[DESTROYED])\n        return null;\n      this[DISCARDED] = false;\n      if (this[BUFFERLENGTH] === 0 || n === 0 || n && n > this[BUFFERLENGTH]) {\n        this[MAYBE_EMIT_END]();\n        return null;\n      }\n      if (this[OBJECTMODE])\n        n = null;\n      if (this[BUFFER].length > 1 && !this[OBJECTMODE]) {\n        this[BUFFER] = [\n          this[ENCODING] ? this[BUFFER].join(\"\") : Buffer.concat(this[BUFFER], this[BUFFERLENGTH])\n        ];\n      }\n      const ret = this[READ](n || null, this[BUFFER][0]);\n      this[MAYBE_EMIT_END]();\n      return ret;\n    }\n    [READ](n, chunk) {\n      if (this[OBJECTMODE])\n        this[BUFFERSHIFT]();\n      else {\n        const c = chunk;\n        if (n === c.length || n === null)\n          this[BUFFERSHIFT]();\n        else if (typeof c === \"string\") {\n          this[BUFFER][0] = c.slice(n);\n          chunk = c.slice(0, n);\n          this[BUFFERLENGTH] -= n;\n        } else {\n          this[BUFFER][0] = c.subarray(n);\n          chunk = c.subarray(0, n);\n          this[BUFFERLENGTH] -= n;\n        }\n      }\n      this.emit(\"data\", chunk);\n      if (!this[BUFFER].length && !this[EOF])\n        this.emit(\"drain\");\n      return chunk;\n    }\n    end(chunk, encoding, cb) {\n      if (typeof chunk === \"function\") {\n        cb = chunk;\n        chunk = undefined;\n      }\n      if (typeof encoding === \"function\") {\n        cb = encoding;\n        encoding = \"utf8\";\n      }\n      if (chunk !== undefined)\n        this.write(chunk, encoding);\n      if (cb)\n        this.once(\"end\", cb);\n      this[EOF] = true;\n      this.writable = false;\n      if (this[FLOWING] || !this[PAUSED])\n        this[MAYBE_EMIT_END]();\n      return this;\n    }\n    [RESUME]() {\n      if (this[DESTROYED])\n        return;\n      if (!this[DATALISTENERS] && !this[PIPES].length) {\n        this[DISCARDED] = true;\n      }\n      this[PAUSED] = false;\n      this[FLOWING] = true;\n      this.emit(\"resume\");\n      if (this[BUFFER].length)\n        this[FLUSH]();\n      else if (this[EOF])\n        this[MAYBE_EMIT_END]();\n      else\n        this.emit(\"drain\");\n    }\n    resume() {\n      return this[RESUME]();\n    }\n    pause() {\n      this[FLOWING] = false;\n      this[PAUSED] = true;\n      this[DISCARDED] = false;\n    }\n    get destroyed() {\n      return this[DESTROYED];\n    }\n    get flowing() {\n      return this[FLOWING];\n    }\n    get paused() {\n      return this[PAUSED];\n    }\n    [BUFFERPUSH](chunk) {\n      if (this[OBJECTMODE])\n        this[BUFFERLENGTH] += 1;\n      else\n        this[BUFFERLENGTH] += chunk.length;\n      this[BUFFER].push(chunk);\n    }\n    [BUFFERSHIFT]() {\n      if (this[OBJECTMODE])\n        this[BUFFERLENGTH] -= 1;\n      else\n        this[BUFFERLENGTH] -= this[BUFFER][0].length;\n      return this[BUFFER].shift();\n    }\n    [FLUSH](noDrain = false) {\n      do {\n      } while (this[FLUSHCHUNK](this[BUFFERSHIFT]()) && this[BUFFER].length);\n      if (!noDrain && !this[BUFFER].length && !this[EOF])\n        this.emit(\"drain\");\n    }\n    [FLUSHCHUNK](chunk) {\n      this.emit(\"data\", chunk);\n      return this[FLOWING];\n    }\n    pipe(dest, opts) {\n      if (this[DESTROYED])\n        return dest;\n      this[DISCARDED] = false;\n      const ended = this[EMITTED_END];\n      opts = opts || {};\n      if (dest === proc.stdout || dest === proc.stderr)\n        opts.end = false;\n      else\n        opts.end = opts.end !== false;\n      opts.proxyErrors = !!opts.proxyErrors;\n      if (ended) {\n        if (opts.end)\n          dest.end();\n      } else {\n        this[PIPES].push(!opts.proxyErrors ? new Pipe(this, dest, opts) : new PipeProxyErrors(this, dest, opts));\n        if (this[ASYNC])\n          defer(() => this[RESUME]());\n        else\n          this[RESUME]();\n      }\n      return dest;\n    }\n    unpipe(dest) {\n      const p = this[PIPES].find((p2) => p2.dest === dest);\n      if (p) {\n        if (this[PIPES].length === 1) {\n          if (this[FLOWING] && this[DATALISTENERS] === 0) {\n            this[FLOWING] = false;\n          }\n          this[PIPES] = [];\n        } else\n          this[PIPES].splice(this[PIPES].indexOf(p), 1);\n        p.unpipe();\n      }\n    }\n    addListener(ev, handler) {\n      return this.on(ev, handler);\n    }\n    on(ev, handler) {\n      const ret = super.on(ev, handler);\n      if (ev === \"data\") {\n        this[DISCARDED] = false;\n        this[DATALISTENERS]++;\n        if (!this[PIPES].length && !this[FLOWING]) {\n          this[RESUME]();\n        }\n      } else if (ev === \"readable\" && this[BUFFERLENGTH] !== 0) {\n        super.emit(\"readable\");\n      } else if (isEndish(ev) && this[EMITTED_END]) {\n        super.emit(ev);\n        this.removeAllListeners(ev);\n      } else if (ev === \"error\" && this[EMITTED_ERROR]) {\n        const h = handler;\n        if (this[ASYNC])\n          defer(() => h.call(this, this[EMITTED_ERROR]));\n        else\n          h.call(this, this[EMITTED_ERROR]);\n      }\n      return ret;\n    }\n    removeListener(ev, handler) {\n      return this.off(ev, handler);\n    }\n    off(ev, handler) {\n      const ret = super.off(ev, handler);\n      if (ev === \"data\") {\n        this[DATALISTENERS] = this.listeners(\"data\").length;\n        if (this[DATALISTENERS] === 0 && !this[DISCARDED] && !this[PIPES].length) {\n          this[FLOWING] = false;\n        }\n      }\n      return ret;\n    }\n    removeAllListeners(ev) {\n      const ret = super.removeAllListeners(ev);\n      if (ev === \"data\" || ev === undefined) {\n        this[DATALISTENERS] = 0;\n        if (!this[DISCARDED] && !this[PIPES].length) {\n          this[FLOWING] = false;\n        }\n      }\n      return ret;\n    }\n    get emittedEnd() {\n      return this[EMITTED_END];\n    }\n    [MAYBE_EMIT_END]() {\n      if (!this[EMITTING_END] && !this[EMITTED_END] && !this[DESTROYED] && this[BUFFER].length === 0 && this[EOF]) {\n        this[EMITTING_END] = true;\n        this.emit(\"end\");\n        this.emit(\"prefinish\");\n        this.emit(\"finish\");\n        if (this[CLOSED])\n          this.emit(\"close\");\n        this[EMITTING_END] = false;\n      }\n    }\n    emit(ev, ...args) {\n      const data = args[0];\n      if (ev !== \"error\" && ev !== \"close\" && ev !== DESTROYED && this[DESTROYED]) {\n        return false;\n      } else if (ev === \"data\") {\n        return !this[OBJECTMODE] && !data ? false : this[ASYNC] ? (defer(() => this[EMITDATA](data)), true) : this[EMITDATA](data);\n      } else if (ev === \"end\") {\n        return this[EMITEND]();\n      } else if (ev === \"close\") {\n        this[CLOSED] = true;\n        if (!this[EMITTED_END] && !this[DESTROYED])\n          return false;\n        const ret2 = super.emit(\"close\");\n        this.removeAllListeners(\"close\");\n        return ret2;\n      } else if (ev === \"error\") {\n        this[EMITTED_ERROR] = data;\n        super.emit(ERROR, data);\n        const ret2 = !this[SIGNAL] || this.listeners(\"error\").length ? super.emit(\"error\", data) : false;\n        this[MAYBE_EMIT_END]();\n        return ret2;\n      } else if (ev === \"resume\") {\n        const ret2 = super.emit(\"resume\");\n        this[MAYBE_EMIT_END]();\n        return ret2;\n      } else if (ev === \"finish\" || ev === \"prefinish\") {\n        const ret2 = super.emit(ev);\n        this.removeAllListeners(ev);\n        return ret2;\n      }\n      const ret = super.emit(ev, ...args);\n      this[MAYBE_EMIT_END]();\n      return ret;\n    }\n    [EMITDATA](data) {\n      for (const p of this[PIPES]) {\n        if (p.dest.write(data) === false)\n          this.pause();\n      }\n      const ret = this[DISCARDED] ? false : super.emit(\"data\", data);\n      this[MAYBE_EMIT_END]();\n      return ret;\n    }\n    [EMITEND]() {\n      if (this[EMITTED_END])\n        return false;\n      this[EMITTED_END] = true;\n      this.readable = false;\n      return this[ASYNC] ? (defer(() => this[EMITEND2]()), true) : this[EMITEND2]();\n    }\n    [EMITEND2]() {\n      if (this[DECODER]) {\n        const data = this[DECODER].end();\n        if (data) {\n          for (const p of this[PIPES]) {\n            p.dest.write(data);\n          }\n          if (!this[DISCARDED])\n            super.emit(\"data\", data);\n        }\n      }\n      for (const p of this[PIPES]) {\n        p.end();\n      }\n      const ret = super.emit(\"end\");\n      this.removeAllListeners(\"end\");\n      return ret;\n    }\n    async collect() {\n      const buf = Object.assign([], {\n        dataLength: 0\n      });\n      if (!this[OBJECTMODE])\n        buf.dataLength = 0;\n      const p = this.promise();\n      this.on(\"data\", (c) => {\n        buf.push(c);\n        if (!this[OBJECTMODE])\n          buf.dataLength += c.length;\n      });\n      await p;\n      return buf;\n    }\n    async concat() {\n      if (this[OBJECTMODE]) {\n        throw new Error(\"cannot concat in objectMode\");\n      }\n      const buf = await this.collect();\n      return this[ENCODING] ? buf.join(\"\") : Buffer.concat(buf, buf.dataLength);\n    }\n    async promise() {\n      return new Promise((resolve, reject) => {\n        this.on(DESTROYED, () => reject(new Error(\"stream destroyed\")));\n        this.on(\"error\", (er) => reject(er));\n        this.on(\"end\", () => resolve());\n      });\n    }\n    [Symbol.asyncIterator]() {\n      this[DISCARDED] = false;\n      let stopped = false;\n      const stop = async () => {\n        this.pause();\n        stopped = true;\n        return { value: undefined, done: true };\n      };\n      const next = () => {\n        if (stopped)\n          return stop();\n        const res = this.read();\n        if (res !== null)\n          return Promise.resolve({ done: false, value: res });\n        if (this[EOF])\n          return stop();\n        let resolve;\n        let reject;\n        const onerr = (er) => {\n          this.off(\"data\", ondata);\n          this.off(\"end\", onend);\n          this.off(DESTROYED, ondestroy);\n          stop();\n          reject(er);\n        };\n        const ondata = (value) => {\n          this.off(\"error\", onerr);\n          this.off(\"end\", onend);\n          this.off(DESTROYED, ondestroy);\n          this.pause();\n          resolve({ value, done: !!this[EOF] });\n        };\n        const onend = () => {\n          this.off(\"error\", onerr);\n          this.off(\"data\", ondata);\n          this.off(DESTROYED, ondestroy);\n          stop();\n          resolve({ done: true, value: undefined });\n        };\n        const ondestroy = () => onerr(new Error(\"stream destroyed\"));\n        return new Promise((res2, rej) => {\n          reject = rej;\n          resolve = res2;\n          this.once(DESTROYED, ondestroy);\n          this.once(\"error\", onerr);\n          this.once(\"end\", onend);\n          this.once(\"data\", ondata);\n        });\n      };\n      return {\n        next,\n        throw: stop,\n        return: stop,\n        [Symbol.asyncIterator]() {\n          return this;\n        }\n      };\n    }\n    [Symbol.iterator]() {\n      this[DISCARDED] = false;\n      let stopped = false;\n      const stop = () => {\n        this.pause();\n        this.off(ERROR, stop);\n        this.off(DESTROYED, stop);\n        this.off(\"end\", stop);\n        stopped = true;\n        return { done: true, value: undefined };\n      };\n      const next = () => {\n        if (stopped)\n          return stop();\n        const value = this.read();\n        return value === null ? stop() : { done: false, value };\n      };\n      this.once(\"end\", stop);\n      this.once(ERROR, stop);\n      this.once(DESTROYED, stop);\n      return {\n        next,\n        throw: stop,\n        return: stop,\n        [Symbol.iterator]() {\n          return this;\n        }\n      };\n    }\n    destroy(er) {\n      if (this[DESTROYED]) {\n        if (er)\n          this.emit(\"error\", er);\n        else\n          this.emit(DESTROYED);\n        return this;\n      }\n      this[DESTROYED] = true;\n      this[DISCARDED] = true;\n      this[BUFFER].length = 0;\n      this[BUFFERLENGTH] = 0;\n      const wc = this;\n      if (typeof wc.close === \"function\" && !this[CLOSED])\n        wc.close();\n      if (er)\n        this.emit(\"error\", er);\n      else\n        this.emit(DESTROYED);\n      return this;\n    }\n    static get isStream() {\n      return exports.isStream;\n    }\n  }\n  exports.Minipass = Minipass;\n});\n\n// node_modules/path-scurry/dist/cjs/index.js\nvar require_cjs4 = __commonJS((exports) => {\n  var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() {\n        return m[k];\n      } };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function(o, m, k, k2) {\n    if (k2 === undefined)\n      k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n  } : function(o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = exports && exports.__importStar || function(mod) {\n    if (mod && mod.__esModule)\n      return mod;\n    var result = {};\n    if (mod != null) {\n      for (var k in mod)\n        if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k))\n          __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.PathScurry = exports.Path = exports.PathScurryDarwin = exports.PathScurryPosix = exports.PathScurryWin32 = exports.PathScurryBase = exports.PathPosix = exports.PathWin32 = exports.PathBase = exports.ChildrenCache = exports.ResolveCache = undefined;\n  var lru_cache_1 = require_cjs2();\n  var path_1 = __require(\"path\");\n  var url_1 = __require(\"url\");\n  var actualFS = __importStar(__require(\"fs\"));\n  var fs_1 = __require(\"fs\");\n  var realpathSync = fs_1.realpathSync.native;\n  var promises_1 = __require(\"fs/promises\");\n  var minipass_1 = require_cjs3();\n  var defaultFS = {\n    lstatSync: fs_1.lstatSync,\n    readdir: fs_1.readdir,\n    readdirSync: fs_1.readdirSync,\n    readlinkSync: fs_1.readlinkSync,\n    realpathSync,\n    promises: {\n      lstat: promises_1.lstat,\n      readdir: promises_1.readdir,\n      readlink: promises_1.readlink,\n      realpath: promises_1.realpath\n    }\n  };\n  var fsFromOption = (fsOption) => !fsOption || fsOption === defaultFS || fsOption === actualFS ? defaultFS : {\n    ...defaultFS,\n    ...fsOption,\n    promises: {\n      ...defaultFS.promises,\n      ...fsOption.promises || {}\n    }\n  };\n  var uncDriveRegexp = /^\\\\\\\\\\?\\\\([a-z]:)\\\\?$/i;\n  var uncToDrive = (rootPath) => rootPath.replace(/\\//g, \"\\\\\").replace(uncDriveRegexp, \"$1\\\\\");\n  var eitherSep = /[\\\\\\/]/;\n  var UNKNOWN = 0;\n  var IFIFO = 1;\n  var IFCHR = 2;\n  var IFDIR = 4;\n  var IFBLK = 6;\n  var IFREG = 8;\n  var IFLNK = 10;\n  var IFSOCK = 12;\n  var IFMT = 15;\n  var IFMT_UNKNOWN = ~IFMT;\n  var READDIR_CALLED = 16;\n  var LSTAT_CALLED = 32;\n  var ENOTDIR = 64;\n  var ENOENT = 128;\n  var ENOREADLINK = 256;\n  var ENOREALPATH = 512;\n  var ENOCHILD = ENOTDIR | ENOENT | ENOREALPATH;\n  var TYPEMASK = 1023;\n  var entToType = (s) => s.isFile() ? IFREG : s.isDirectory() ? IFDIR : s.isSymbolicLink() ? IFLNK : s.isCharacterDevice() ? IFCHR : s.isBlockDevice() ? IFBLK : s.isSocket() ? IFSOCK : s.isFIFO() ? IFIFO : UNKNOWN;\n  var normalizeCache = new Map;\n  var normalize = (s) => {\n    const c = normalizeCache.get(s);\n    if (c)\n      return c;\n    const n = s.normalize(\"NFKD\");\n    normalizeCache.set(s, n);\n    return n;\n  };\n  var normalizeNocaseCache = new Map;\n  var normalizeNocase = (s) => {\n    const c = normalizeNocaseCache.get(s);\n    if (c)\n      return c;\n    const n = normalize(s.toLowerCase());\n    normalizeNocaseCache.set(s, n);\n    return n;\n  };\n\n  class ResolveCache extends lru_cache_1.LRUCache {\n    constructor() {\n      super({ max: 256 });\n    }\n  }\n  exports.ResolveCache = ResolveCache;\n\n  class ChildrenCache extends lru_cache_1.LRUCache {\n    constructor(maxSize = 16 * 1024) {\n      super({\n        maxSize,\n        sizeCalculation: (a) => a.length + 1\n      });\n    }\n  }\n  exports.ChildrenCache = ChildrenCache;\n  var setAsCwd = Symbol(\"PathScurry setAsCwd\");\n\n  class PathBase {\n    name;\n    root;\n    roots;\n    parent;\n    nocase;\n    #fs;\n    #dev;\n    get dev() {\n      return this.#dev;\n    }\n    #mode;\n    get mode() {\n      return this.#mode;\n    }\n    #nlink;\n    get nlink() {\n      return this.#nlink;\n    }\n    #uid;\n    get uid() {\n      return this.#uid;\n    }\n    #gid;\n    get gid() {\n      return this.#gid;\n    }\n    #rdev;\n    get rdev() {\n      return this.#rdev;\n    }\n    #blksize;\n    get blksize() {\n      return this.#blksize;\n    }\n    #ino;\n    get ino() {\n      return this.#ino;\n    }\n    #size;\n    get size() {\n      return this.#size;\n    }\n    #blocks;\n    get blocks() {\n      return this.#blocks;\n    }\n    #atimeMs;\n    get atimeMs() {\n      return this.#atimeMs;\n    }\n    #mtimeMs;\n    get mtimeMs() {\n      return this.#mtimeMs;\n    }\n    #ctimeMs;\n    get ctimeMs() {\n      return this.#ctimeMs;\n    }\n    #birthtimeMs;\n    get birthtimeMs() {\n      return this.#birthtimeMs;\n    }\n    #atime;\n    get atime() {\n      return this.#atime;\n    }\n    #mtime;\n    get mtime() {\n      return this.#mtime;\n    }\n    #ctime;\n    get ctime() {\n      return this.#ctime;\n    }\n    #birthtime;\n    get birthtime() {\n      return this.#birthtime;\n    }\n    #matchName;\n    #depth;\n    #fullpath;\n    #fullpathPosix;\n    #relative;\n    #relativePosix;\n    #type;\n    #children;\n    #linkTarget;\n    #realpath;\n    get path() {\n      return (this.parent || this).fullpath();\n    }\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n      this.name = name;\n      this.#matchName = nocase ? normalizeNocase(name) : normalize(name);\n      this.#type = type & TYPEMASK;\n      this.nocase = nocase;\n      this.roots = roots;\n      this.root = root || this;\n      this.#children = children;\n      this.#fullpath = opts.fullpath;\n      this.#relative = opts.relative;\n      this.#relativePosix = opts.relativePosix;\n      this.parent = opts.parent;\n      if (this.parent) {\n        this.#fs = this.parent.#fs;\n      } else {\n        this.#fs = fsFromOption(opts.fs);\n      }\n    }\n    depth() {\n      if (this.#depth !== undefined)\n        return this.#depth;\n      if (!this.parent)\n        return this.#depth = 0;\n      return this.#depth = this.parent.depth() + 1;\n    }\n    childrenCache() {\n      return this.#children;\n    }\n    resolve(path) {\n      if (!path) {\n        return this;\n      }\n      const rootPath = this.getRootString(path);\n      const dir = path.substring(rootPath.length);\n      const dirParts = dir.split(this.splitSep);\n      const result = rootPath ? this.getRoot(rootPath).#resolveParts(dirParts) : this.#resolveParts(dirParts);\n      return result;\n    }\n    #resolveParts(dirParts) {\n      let p = this;\n      for (const part of dirParts) {\n        p = p.child(part);\n      }\n      return p;\n    }\n    children() {\n      const cached = this.#children.get(this);\n      if (cached) {\n        return cached;\n      }\n      const children = Object.assign([], { provisional: 0 });\n      this.#children.set(this, children);\n      this.#type &= ~READDIR_CALLED;\n      return children;\n    }\n    child(pathPart, opts) {\n      if (pathPart === \"\" || pathPart === \".\") {\n        return this;\n      }\n      if (pathPart === \"..\") {\n        return this.parent || this;\n      }\n      const children = this.children();\n      const name = this.nocase ? normalizeNocase(pathPart) : normalize(pathPart);\n      for (const p of children) {\n        if (p.#matchName === name) {\n          return p;\n        }\n      }\n      const s = this.parent ? this.sep : \"\";\n      const fullpath = this.#fullpath ? this.#fullpath + s + pathPart : undefined;\n      const pchild = this.newChild(pathPart, UNKNOWN, {\n        ...opts,\n        parent: this,\n        fullpath\n      });\n      if (!this.canReaddir()) {\n        pchild.#type |= ENOENT;\n      }\n      children.push(pchild);\n      return pchild;\n    }\n    relative() {\n      if (this.#relative !== undefined) {\n        return this.#relative;\n      }\n      const name = this.name;\n      const p = this.parent;\n      if (!p) {\n        return this.#relative = this.name;\n      }\n      const pv = p.relative();\n      return pv + (!pv || !p.parent ? \"\" : this.sep) + name;\n    }\n    relativePosix() {\n      if (this.sep === \"/\")\n        return this.relative();\n      if (this.#relativePosix !== undefined)\n        return this.#relativePosix;\n      const name = this.name;\n      const p = this.parent;\n      if (!p) {\n        return this.#relativePosix = this.fullpathPosix();\n      }\n      const pv = p.relativePosix();\n      return pv + (!pv || !p.parent ? \"\" : \"/\") + name;\n    }\n    fullpath() {\n      if (this.#fullpath !== undefined) {\n        return this.#fullpath;\n      }\n      const name = this.name;\n      const p = this.parent;\n      if (!p) {\n        return this.#fullpath = this.name;\n      }\n      const pv = p.fullpath();\n      const fp = pv + (!p.parent ? \"\" : this.sep) + name;\n      return this.#fullpath = fp;\n    }\n    fullpathPosix() {\n      if (this.#fullpathPosix !== undefined)\n        return this.#fullpathPosix;\n      if (this.sep === \"/\")\n        return this.#fullpathPosix = this.fullpath();\n      if (!this.parent) {\n        const p2 = this.fullpath().replace(/\\\\/g, \"/\");\n        if (/^[a-z]:\\//i.test(p2)) {\n          return this.#fullpathPosix = `//?/${p2}`;\n        } else {\n          return this.#fullpathPosix = p2;\n        }\n      }\n      const p = this.parent;\n      const pfpp = p.fullpathPosix();\n      const fpp = pfpp + (!pfpp || !p.parent ? \"\" : \"/\") + this.name;\n      return this.#fullpathPosix = fpp;\n    }\n    isUnknown() {\n      return (this.#type & IFMT) === UNKNOWN;\n    }\n    isType(type) {\n      return this[`is${type}`]();\n    }\n    getType() {\n      return this.isUnknown() ? \"Unknown\" : this.isDirectory() ? \"Directory\" : this.isFile() ? \"File\" : this.isSymbolicLink() ? \"SymbolicLink\" : this.isFIFO() ? \"FIFO\" : this.isCharacterDevice() ? \"CharacterDevice\" : this.isBlockDevice() ? \"BlockDevice\" : this.isSocket() ? \"Socket\" : \"Unknown\";\n    }\n    isFile() {\n      return (this.#type & IFMT) === IFREG;\n    }\n    isDirectory() {\n      return (this.#type & IFMT) === IFDIR;\n    }\n    isCharacterDevice() {\n      return (this.#type & IFMT) === IFCHR;\n    }\n    isBlockDevice() {\n      return (this.#type & IFMT) === IFBLK;\n    }\n    isFIFO() {\n      return (this.#type & IFMT) === IFIFO;\n    }\n    isSocket() {\n      return (this.#type & IFMT) === IFSOCK;\n    }\n    isSymbolicLink() {\n      return (this.#type & IFLNK) === IFLNK;\n    }\n    lstatCached() {\n      return this.#type & LSTAT_CALLED ? this : undefined;\n    }\n    readlinkCached() {\n      return this.#linkTarget;\n    }\n    realpathCached() {\n      return this.#realpath;\n    }\n    readdirCached() {\n      const children = this.children();\n      return children.slice(0, children.provisional);\n    }\n    canReadlink() {\n      if (this.#linkTarget)\n        return true;\n      if (!this.parent)\n        return false;\n      const ifmt = this.#type & IFMT;\n      return !(ifmt !== UNKNOWN && ifmt !== IFLNK || this.#type & ENOREADLINK || this.#type & ENOENT);\n    }\n    calledReaddir() {\n      return !!(this.#type & READDIR_CALLED);\n    }\n    isENOENT() {\n      return !!(this.#type & ENOENT);\n    }\n    isNamed(n) {\n      return !this.nocase ? this.#matchName === normalize(n) : this.#matchName === normalizeNocase(n);\n    }\n    async readlink() {\n      const target = this.#linkTarget;\n      if (target) {\n        return target;\n      }\n      if (!this.canReadlink()) {\n        return;\n      }\n      if (!this.parent) {\n        return;\n      }\n      try {\n        const read = await this.#fs.promises.readlink(this.fullpath());\n        const linkTarget = this.parent.resolve(read);\n        if (linkTarget) {\n          return this.#linkTarget = linkTarget;\n        }\n      } catch (er) {\n        this.#readlinkFail(er.code);\n        return;\n      }\n    }\n    readlinkSync() {\n      const target = this.#linkTarget;\n      if (target) {\n        return target;\n      }\n      if (!this.canReadlink()) {\n        return;\n      }\n      if (!this.parent) {\n        return;\n      }\n      try {\n        const read = this.#fs.readlinkSync(this.fullpath());\n        const linkTarget = this.parent.resolve(read);\n        if (linkTarget) {\n          return this.#linkTarget = linkTarget;\n        }\n      } catch (er) {\n        this.#readlinkFail(er.code);\n        return;\n      }\n    }\n    #readdirSuccess(children) {\n      this.#type |= READDIR_CALLED;\n      for (let p = children.provisional;p < children.length; p++) {\n        children[p].#markENOENT();\n      }\n    }\n    #markENOENT() {\n      if (this.#type & ENOENT)\n        return;\n      this.#type = (this.#type | ENOENT) & IFMT_UNKNOWN;\n      this.#markChildrenENOENT();\n    }\n    #markChildrenENOENT() {\n      const children = this.children();\n      children.provisional = 0;\n      for (const p of children) {\n        p.#markENOENT();\n      }\n    }\n    #markENOREALPATH() {\n      this.#type |= ENOREALPATH;\n      this.#markENOTDIR();\n    }\n    #markENOTDIR() {\n      if (this.#type & ENOTDIR)\n        return;\n      let t = this.#type;\n      if ((t & IFMT) === IFDIR)\n        t &= IFMT_UNKNOWN;\n      this.#type = t | ENOTDIR;\n      this.#markChildrenENOENT();\n    }\n    #readdirFail(code = \"\") {\n      if (code === \"ENOTDIR\" || code === \"EPERM\") {\n        this.#markENOTDIR();\n      } else if (code === \"ENOENT\") {\n        this.#markENOENT();\n      } else {\n        this.children().provisional = 0;\n      }\n    }\n    #lstatFail(code = \"\") {\n      if (code === \"ENOTDIR\") {\n        const p = this.parent;\n        p.#markENOTDIR();\n      } else if (code === \"ENOENT\") {\n        this.#markENOENT();\n      }\n    }\n    #readlinkFail(code = \"\") {\n      let ter = this.#type;\n      ter |= ENOREADLINK;\n      if (code === \"ENOENT\")\n        ter |= ENOENT;\n      if (code === \"EINVAL\" || code === \"UNKNOWN\") {\n        ter &= IFMT_UNKNOWN;\n      }\n      this.#type = ter;\n      if (code === \"ENOTDIR\" && this.parent) {\n        this.parent.#markENOTDIR();\n      }\n    }\n    #readdirAddChild(e, c) {\n      return this.#readdirMaybePromoteChild(e, c) || this.#readdirAddNewChild(e, c);\n    }\n    #readdirAddNewChild(e, c) {\n      const type = entToType(e);\n      const child = this.newChild(e.name, type, { parent: this });\n      const ifmt = child.#type & IFMT;\n      if (ifmt !== IFDIR && ifmt !== IFLNK && ifmt !== UNKNOWN) {\n        child.#type |= ENOTDIR;\n      }\n      c.unshift(child);\n      c.provisional++;\n      return child;\n    }\n    #readdirMaybePromoteChild(e, c) {\n      for (let p = c.provisional;p < c.length; p++) {\n        const pchild = c[p];\n        const name = this.nocase ? normalizeNocase(e.name) : normalize(e.name);\n        if (name !== pchild.#matchName) {\n          continue;\n        }\n        return this.#readdirPromoteChild(e, pchild, p, c);\n      }\n    }\n    #readdirPromoteChild(e, p, index, c) {\n      const v = p.name;\n      p.#type = p.#type & IFMT_UNKNOWN | entToType(e);\n      if (v !== e.name)\n        p.name = e.name;\n      if (index !== c.provisional) {\n        if (index === c.length - 1)\n          c.pop();\n        else\n          c.splice(index, 1);\n        c.unshift(p);\n      }\n      c.provisional++;\n      return p;\n    }\n    async lstat() {\n      if ((this.#type & ENOENT) === 0) {\n        try {\n          this.#applyStat(await this.#fs.promises.lstat(this.fullpath()));\n          return this;\n        } catch (er) {\n          this.#lstatFail(er.code);\n        }\n      }\n    }\n    lstatSync() {\n      if ((this.#type & ENOENT) === 0) {\n        try {\n          this.#applyStat(this.#fs.lstatSync(this.fullpath()));\n          return this;\n        } catch (er) {\n          this.#lstatFail(er.code);\n        }\n      }\n    }\n    #applyStat(st) {\n      const { atime, atimeMs, birthtime, birthtimeMs, blksize, blocks, ctime, ctimeMs, dev, gid, ino, mode, mtime, mtimeMs, nlink, rdev, size, uid } = st;\n      this.#atime = atime;\n      this.#atimeMs = atimeMs;\n      this.#birthtime = birthtime;\n      this.#birthtimeMs = birthtimeMs;\n      this.#blksize = blksize;\n      this.#blocks = blocks;\n      this.#ctime = ctime;\n      this.#ctimeMs = ctimeMs;\n      this.#dev = dev;\n      this.#gid = gid;\n      this.#ino = ino;\n      this.#mode = mode;\n      this.#mtime = mtime;\n      this.#mtimeMs = mtimeMs;\n      this.#nlink = nlink;\n      this.#rdev = rdev;\n      this.#size = size;\n      this.#uid = uid;\n      const ifmt = entToType(st);\n      this.#type = this.#type & IFMT_UNKNOWN | ifmt | LSTAT_CALLED;\n      if (ifmt !== UNKNOWN && ifmt !== IFDIR && ifmt !== IFLNK) {\n        this.#type |= ENOTDIR;\n      }\n    }\n    #onReaddirCB = [];\n    #readdirCBInFlight = false;\n    #callOnReaddirCB(children) {\n      this.#readdirCBInFlight = false;\n      const cbs = this.#onReaddirCB.slice();\n      this.#onReaddirCB.length = 0;\n      cbs.forEach((cb) => cb(null, children));\n    }\n    readdirCB(cb, allowZalgo = false) {\n      if (!this.canReaddir()) {\n        if (allowZalgo)\n          cb(null, []);\n        else\n          queueMicrotask(() => cb(null, []));\n        return;\n      }\n      const children = this.children();\n      if (this.calledReaddir()) {\n        const c = children.slice(0, children.provisional);\n        if (allowZalgo)\n          cb(null, c);\n        else\n          queueMicrotask(() => cb(null, c));\n        return;\n      }\n      this.#onReaddirCB.push(cb);\n      if (this.#readdirCBInFlight) {\n        return;\n      }\n      this.#readdirCBInFlight = true;\n      const fullpath = this.fullpath();\n      this.#fs.readdir(fullpath, { withFileTypes: true }, (er, entries) => {\n        if (er) {\n          this.#readdirFail(er.code);\n          children.provisional = 0;\n        } else {\n          for (const e of entries) {\n            this.#readdirAddChild(e, children);\n          }\n          this.#readdirSuccess(children);\n        }\n        this.#callOnReaddirCB(children.slice(0, children.provisional));\n        return;\n      });\n    }\n    #asyncReaddirInFlight;\n    async readdir() {\n      if (!this.canReaddir()) {\n        return [];\n      }\n      const children = this.children();\n      if (this.calledReaddir()) {\n        return children.slice(0, children.provisional);\n      }\n      const fullpath = this.fullpath();\n      if (this.#asyncReaddirInFlight) {\n        await this.#asyncReaddirInFlight;\n      } else {\n        let resolve = () => {\n        };\n        this.#asyncReaddirInFlight = new Promise((res) => resolve = res);\n        try {\n          for (const e of await this.#fs.promises.readdir(fullpath, {\n            withFileTypes: true\n          })) {\n            this.#readdirAddChild(e, children);\n          }\n          this.#readdirSuccess(children);\n        } catch (er) {\n          this.#readdirFail(er.code);\n          children.provisional = 0;\n        }\n        this.#asyncReaddirInFlight = undefined;\n        resolve();\n      }\n      return children.slice(0, children.provisional);\n    }\n    readdirSync() {\n      if (!this.canReaddir()) {\n        return [];\n      }\n      const children = this.children();\n      if (this.calledReaddir()) {\n        return children.slice(0, children.provisional);\n      }\n      const fullpath = this.fullpath();\n      try {\n        for (const e of this.#fs.readdirSync(fullpath, {\n          withFileTypes: true\n        })) {\n          this.#readdirAddChild(e, children);\n        }\n        this.#readdirSuccess(children);\n      } catch (er) {\n        this.#readdirFail(er.code);\n        children.provisional = 0;\n      }\n      return children.slice(0, children.provisional);\n    }\n    canReaddir() {\n      if (this.#type & ENOCHILD)\n        return false;\n      const ifmt = IFMT & this.#type;\n      if (!(ifmt === UNKNOWN || ifmt === IFDIR || ifmt === IFLNK)) {\n        return false;\n      }\n      return true;\n    }\n    shouldWalk(dirs, walkFilter) {\n      return (this.#type & IFDIR) === IFDIR && !(this.#type & ENOCHILD) && !dirs.has(this) && (!walkFilter || walkFilter(this));\n    }\n    async realpath() {\n      if (this.#realpath)\n        return this.#realpath;\n      if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)\n        return;\n      try {\n        const rp = await this.#fs.promises.realpath(this.fullpath());\n        return this.#realpath = this.resolve(rp);\n      } catch (_) {\n        this.#markENOREALPATH();\n      }\n    }\n    realpathSync() {\n      if (this.#realpath)\n        return this.#realpath;\n      if ((ENOREALPATH | ENOREADLINK | ENOENT) & this.#type)\n        return;\n      try {\n        const rp = this.#fs.realpathSync(this.fullpath());\n        return this.#realpath = this.resolve(rp);\n      } catch (_) {\n        this.#markENOREALPATH();\n      }\n    }\n    [setAsCwd](oldCwd) {\n      if (oldCwd === this)\n        return;\n      const changed = new Set([]);\n      let rp = [];\n      let p = this;\n      while (p && p.parent) {\n        changed.add(p);\n        p.#relative = rp.join(this.sep);\n        p.#relativePosix = rp.join(\"/\");\n        p = p.parent;\n        rp.push(\"..\");\n      }\n      p = oldCwd;\n      while (p && p.parent && !changed.has(p)) {\n        p.#relative = undefined;\n        p.#relativePosix = undefined;\n        p = p.parent;\n      }\n    }\n  }\n  exports.PathBase = PathBase;\n\n  class PathWin32 extends PathBase {\n    sep = \"\\\\\";\n    splitSep = eitherSep;\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n      super(name, type, root, roots, nocase, children, opts);\n    }\n    newChild(name, type = UNKNOWN, opts = {}) {\n      return new PathWin32(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);\n    }\n    getRootString(path) {\n      return path_1.win32.parse(path).root;\n    }\n    getRoot(rootPath) {\n      rootPath = uncToDrive(rootPath.toUpperCase());\n      if (rootPath === this.root.name) {\n        return this.root;\n      }\n      for (const [compare, root] of Object.entries(this.roots)) {\n        if (this.sameRoot(rootPath, compare)) {\n          return this.roots[rootPath] = root;\n        }\n      }\n      return this.roots[rootPath] = new PathScurryWin32(rootPath, this).root;\n    }\n    sameRoot(rootPath, compare = this.root.name) {\n      rootPath = rootPath.toUpperCase().replace(/\\//g, \"\\\\\").replace(uncDriveRegexp, \"$1\\\\\");\n      return rootPath === compare;\n    }\n  }\n  exports.PathWin32 = PathWin32;\n\n  class PathPosix extends PathBase {\n    splitSep = \"/\";\n    sep = \"/\";\n    constructor(name, type = UNKNOWN, root, roots, nocase, children, opts) {\n      super(name, type, root, roots, nocase, children, opts);\n    }\n    getRootString(path) {\n      return path.startsWith(\"/\") ? \"/\" : \"\";\n    }\n    getRoot(_rootPath) {\n      return this.root;\n    }\n    newChild(name, type = UNKNOWN, opts = {}) {\n      return new PathPosix(name, type, this.root, this.roots, this.nocase, this.childrenCache(), opts);\n    }\n  }\n  exports.PathPosix = PathPosix;\n\n  class PathScurryBase {\n    root;\n    rootPath;\n    roots;\n    cwd;\n    #resolveCache;\n    #resolvePosixCache;\n    #children;\n    nocase;\n    #fs;\n    constructor(cwd = process.cwd(), pathImpl, sep, { nocase, childrenCacheSize = 16 * 1024, fs = defaultFS } = {}) {\n      this.#fs = fsFromOption(fs);\n      if (cwd instanceof URL || cwd.startsWith(\"file://\")) {\n        cwd = (0, url_1.fileURLToPath)(cwd);\n      }\n      const cwdPath = pathImpl.resolve(cwd);\n      this.roots = Object.create(null);\n      this.rootPath = this.parseRootPath(cwdPath);\n      this.#resolveCache = new ResolveCache;\n      this.#resolvePosixCache = new ResolveCache;\n      this.#children = new ChildrenCache(childrenCacheSize);\n      const split = cwdPath.substring(this.rootPath.length).split(sep);\n      if (split.length === 1 && !split[0]) {\n        split.pop();\n      }\n      if (nocase === undefined) {\n        throw new TypeError(\"must provide nocase setting to PathScurryBase ctor\");\n      }\n      this.nocase = nocase;\n      this.root = this.newRoot(this.#fs);\n      this.roots[this.rootPath] = this.root;\n      let prev = this.root;\n      let len = split.length - 1;\n      const joinSep = pathImpl.sep;\n      let abs = this.rootPath;\n      let sawFirst = false;\n      for (const part of split) {\n        const l = len--;\n        prev = prev.child(part, {\n          relative: new Array(l).fill(\"..\").join(joinSep),\n          relativePosix: new Array(l).fill(\"..\").join(\"/\"),\n          fullpath: abs += (sawFirst ? \"\" : joinSep) + part\n        });\n        sawFirst = true;\n      }\n      this.cwd = prev;\n    }\n    depth(path = this.cwd) {\n      if (typeof path === \"string\") {\n        path = this.cwd.resolve(path);\n      }\n      return path.depth();\n    }\n    childrenCache() {\n      return this.#children;\n    }\n    resolve(...paths) {\n      let r = \"\";\n      for (let i = paths.length - 1;i >= 0; i--) {\n        const p = paths[i];\n        if (!p || p === \".\")\n          continue;\n        r = r ? `${p}/${r}` : p;\n        if (this.isAbsolute(p)) {\n          break;\n        }\n      }\n      const cached = this.#resolveCache.get(r);\n      if (cached !== undefined) {\n        return cached;\n      }\n      const result = this.cwd.resolve(r).fullpath();\n      this.#resolveCache.set(r, result);\n      return result;\n    }\n    resolvePosix(...paths) {\n      let r = \"\";\n      for (let i = paths.length - 1;i >= 0; i--) {\n        const p = paths[i];\n        if (!p || p === \".\")\n          continue;\n        r = r ? `${p}/${r}` : p;\n        if (this.isAbsolute(p)) {\n          break;\n        }\n      }\n      const cached = this.#resolvePosixCache.get(r);\n      if (cached !== undefined) {\n        return cached;\n      }\n      const result = this.cwd.resolve(r).fullpathPosix();\n      this.#resolvePosixCache.set(r, result);\n      return result;\n    }\n    relative(entry = this.cwd) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      }\n      return entry.relative();\n    }\n    relativePosix(entry = this.cwd) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      }\n      return entry.relativePosix();\n    }\n    basename(entry = this.cwd) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      }\n      return entry.name;\n    }\n    dirname(entry = this.cwd) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      }\n      return (entry.parent || entry).fullpath();\n    }\n    async readdir(entry = this.cwd, opts = {\n      withFileTypes: true\n    }) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes } = opts;\n      if (!entry.canReaddir()) {\n        return [];\n      } else {\n        const p = await entry.readdir();\n        return withFileTypes ? p : p.map((e) => e.name);\n      }\n    }\n    readdirSync(entry = this.cwd, opts = {\n      withFileTypes: true\n    }) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes = true } = opts;\n      if (!entry.canReaddir()) {\n        return [];\n      } else if (withFileTypes) {\n        return entry.readdirSync();\n      } else {\n        return entry.readdirSync().map((e) => e.name);\n      }\n    }\n    async lstat(entry = this.cwd) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      }\n      return entry.lstat();\n    }\n    lstatSync(entry = this.cwd) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      }\n      return entry.lstatSync();\n    }\n    async readlink(entry = this.cwd, { withFileTypes } = {\n      withFileTypes: false\n    }) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        withFileTypes = entry.withFileTypes;\n        entry = this.cwd;\n      }\n      const e = await entry.readlink();\n      return withFileTypes ? e : e?.fullpath();\n    }\n    readlinkSync(entry = this.cwd, { withFileTypes } = {\n      withFileTypes: false\n    }) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        withFileTypes = entry.withFileTypes;\n        entry = this.cwd;\n      }\n      const e = entry.readlinkSync();\n      return withFileTypes ? e : e?.fullpath();\n    }\n    async realpath(entry = this.cwd, { withFileTypes } = {\n      withFileTypes: false\n    }) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        withFileTypes = entry.withFileTypes;\n        entry = this.cwd;\n      }\n      const e = await entry.realpath();\n      return withFileTypes ? e : e?.fullpath();\n    }\n    realpathSync(entry = this.cwd, { withFileTypes } = {\n      withFileTypes: false\n    }) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        withFileTypes = entry.withFileTypes;\n        entry = this.cwd;\n      }\n      const e = entry.realpathSync();\n      return withFileTypes ? e : e?.fullpath();\n    }\n    async walk(entry = this.cwd, opts = {}) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes = true, follow = false, filter, walkFilter } = opts;\n      const results = [];\n      if (!filter || filter(entry)) {\n        results.push(withFileTypes ? entry : entry.fullpath());\n      }\n      const dirs = new Set;\n      const walk = (dir, cb) => {\n        dirs.add(dir);\n        dir.readdirCB((er, entries) => {\n          if (er) {\n            return cb(er);\n          }\n          let len = entries.length;\n          if (!len)\n            return cb();\n          const next = () => {\n            if (--len === 0) {\n              cb();\n            }\n          };\n          for (const e of entries) {\n            if (!filter || filter(e)) {\n              results.push(withFileTypes ? e : e.fullpath());\n            }\n            if (follow && e.isSymbolicLink()) {\n              e.realpath().then((r) => r?.isUnknown() ? r.lstat() : r).then((r) => r?.shouldWalk(dirs, walkFilter) ? walk(r, next) : next());\n            } else {\n              if (e.shouldWalk(dirs, walkFilter)) {\n                walk(e, next);\n              } else {\n                next();\n              }\n            }\n          }\n        }, true);\n      };\n      const start = entry;\n      return new Promise((res, rej) => {\n        walk(start, (er) => {\n          if (er)\n            return rej(er);\n          res(results);\n        });\n      });\n    }\n    walkSync(entry = this.cwd, opts = {}) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes = true, follow = false, filter, walkFilter } = opts;\n      const results = [];\n      if (!filter || filter(entry)) {\n        results.push(withFileTypes ? entry : entry.fullpath());\n      }\n      const dirs = new Set([entry]);\n      for (const dir of dirs) {\n        const entries = dir.readdirSync();\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            results.push(withFileTypes ? e : e.fullpath());\n          }\n          let r = e;\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync())))\n              continue;\n            if (r.isUnknown())\n              r.lstatSync();\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            dirs.add(r);\n          }\n        }\n      }\n      return results;\n    }\n    [Symbol.asyncIterator]() {\n      return this.iterate();\n    }\n    iterate(entry = this.cwd, options = {}) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        options = entry;\n        entry = this.cwd;\n      }\n      return this.stream(entry, options)[Symbol.asyncIterator]();\n    }\n    [Symbol.iterator]() {\n      return this.iterateSync();\n    }\n    *iterateSync(entry = this.cwd, opts = {}) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes = true, follow = false, filter, walkFilter } = opts;\n      if (!filter || filter(entry)) {\n        yield withFileTypes ? entry : entry.fullpath();\n      }\n      const dirs = new Set([entry]);\n      for (const dir of dirs) {\n        const entries = dir.readdirSync();\n        for (const e of entries) {\n          if (!filter || filter(e)) {\n            yield withFileTypes ? e : e.fullpath();\n          }\n          let r = e;\n          if (e.isSymbolicLink()) {\n            if (!(follow && (r = e.realpathSync())))\n              continue;\n            if (r.isUnknown())\n              r.lstatSync();\n          }\n          if (r.shouldWalk(dirs, walkFilter)) {\n            dirs.add(r);\n          }\n        }\n      }\n    }\n    stream(entry = this.cwd, opts = {}) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes = true, follow = false, filter, walkFilter } = opts;\n      const results = new minipass_1.Minipass({ objectMode: true });\n      if (!filter || filter(entry)) {\n        results.write(withFileTypes ? entry : entry.fullpath());\n      }\n      const dirs = new Set;\n      const queue = [entry];\n      let processing = 0;\n      const process2 = () => {\n        let paused = false;\n        while (!paused) {\n          const dir = queue.shift();\n          if (!dir) {\n            if (processing === 0)\n              results.end();\n            return;\n          }\n          processing++;\n          dirs.add(dir);\n          const onReaddir = (er, entries, didRealpaths = false) => {\n            if (er)\n              return results.emit(\"error\", er);\n            if (follow && !didRealpaths) {\n              const promises = [];\n              for (const e of entries) {\n                if (e.isSymbolicLink()) {\n                  promises.push(e.realpath().then((r) => r?.isUnknown() ? r.lstat() : r));\n                }\n              }\n              if (promises.length) {\n                Promise.all(promises).then(() => onReaddir(null, entries, true));\n                return;\n              }\n            }\n            for (const e of entries) {\n              if (e && (!filter || filter(e))) {\n                if (!results.write(withFileTypes ? e : e.fullpath())) {\n                  paused = true;\n                }\n              }\n            }\n            processing--;\n            for (const e of entries) {\n              const r = e.realpathCached() || e;\n              if (r.shouldWalk(dirs, walkFilter)) {\n                queue.push(r);\n              }\n            }\n            if (paused && !results.flowing) {\n              results.once(\"drain\", process2);\n            } else if (!sync) {\n              process2();\n            }\n          };\n          let sync = true;\n          dir.readdirCB(onReaddir, true);\n          sync = false;\n        }\n      };\n      process2();\n      return results;\n    }\n    streamSync(entry = this.cwd, opts = {}) {\n      if (typeof entry === \"string\") {\n        entry = this.cwd.resolve(entry);\n      } else if (!(entry instanceof PathBase)) {\n        opts = entry;\n        entry = this.cwd;\n      }\n      const { withFileTypes = true, follow = false, filter, walkFilter } = opts;\n      const results = new minipass_1.Minipass({ objectMode: true });\n      const dirs = new Set;\n      if (!filter || filter(entry)) {\n        results.write(withFileTypes ? entry : entry.fullpath());\n      }\n      const queue = [entry];\n      let processing = 0;\n      const process2 = () => {\n        let paused = false;\n        while (!paused) {\n          const dir = queue.shift();\n          if (!dir) {\n            if (processing === 0)\n              results.end();\n            return;\n          }\n          processing++;\n          dirs.add(dir);\n          const entries = dir.readdirSync();\n          for (const e of entries) {\n            if (!filter || filter(e)) {\n              if (!results.write(withFileTypes ? e : e.fullpath())) {\n                paused = true;\n              }\n            }\n          }\n          processing--;\n          for (const e of entries) {\n            let r = e;\n            if (e.isSymbolicLink()) {\n              if (!(follow && (r = e.realpathSync())))\n                continue;\n              if (r.isUnknown())\n                r.lstatSync();\n            }\n            if (r.shouldWalk(dirs, walkFilter)) {\n              queue.push(r);\n            }\n          }\n        }\n        if (paused && !results.flowing)\n          results.once(\"drain\", process2);\n      };\n      process2();\n      return results;\n    }\n    chdir(path = this.cwd) {\n      const oldCwd = this.cwd;\n      this.cwd = typeof path === \"string\" ? this.cwd.resolve(path) : path;\n      this.cwd[setAsCwd](oldCwd);\n    }\n  }\n  exports.PathScurryBase = PathScurryBase;\n\n  class PathScurryWin32 extends PathScurryBase {\n    sep = \"\\\\\";\n    constructor(cwd = process.cwd(), opts = {}) {\n      const { nocase = true } = opts;\n      super(cwd, path_1.win32, \"\\\\\", { ...opts, nocase });\n      this.nocase = nocase;\n      for (let p = this.cwd;p; p = p.parent) {\n        p.nocase = this.nocase;\n      }\n    }\n    parseRootPath(dir) {\n      return path_1.win32.parse(dir).root.toUpperCase();\n    }\n    newRoot(fs) {\n      return new PathWin32(this.rootPath, IFDIR, undefined, this.roots, this.nocase, this.childrenCache(), { fs });\n    }\n    isAbsolute(p) {\n      return p.startsWith(\"/\") || p.startsWith(\"\\\\\") || /^[a-z]:(\\/|\\\\)/i.test(p);\n    }\n  }\n  exports.PathScurryWin32 = PathScurryWin32;\n\n  class PathScurryPosix extends PathScurryBase {\n    sep = \"/\";\n    constructor(cwd = process.cwd(), opts = {}) {\n      const { nocase = false } = opts;\n      super(cwd, path_1.posix, \"/\", { ...opts, nocase });\n      this.nocase = nocase;\n    }\n    parseRootPath(_dir) {\n      return \"/\";\n    }\n    newRoot(fs) {\n      return new PathPosix(this.rootPath, IFDIR, undefined, this.roots, this.nocase, this.childrenCache(), { fs });\n    }\n    isAbsolute(p) {\n      return p.startsWith(\"/\");\n    }\n  }\n  exports.PathScurryPosix = PathScurryPosix;\n\n  class PathScurryDarwin extends PathScurryPosix {\n    constructor(cwd = process.cwd(), opts = {}) {\n      const { nocase = true } = opts;\n      super(cwd, { ...opts, nocase });\n    }\n  }\n  exports.PathScurryDarwin = PathScurryDarwin;\n  exports.Path = process.platform === \"win32\" ? PathWin32 : PathPosix;\n  exports.PathScurry = process.platform === \"win32\" ? PathScurryWin32 : process.platform === \"darwin\" ? PathScurryDarwin : PathScurryPosix;\n});\n\n// node_modules/glob/dist/cjs/src/pattern.js\nvar require_pattern = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Pattern = undefined;\n  var minimatch_1 = require_cjs();\n  var isPatternList = (pl) => pl.length >= 1;\n  var isGlobList = (gl) => gl.length >= 1;\n\n  class Pattern {\n    #patternList;\n    #globList;\n    #index;\n    length;\n    #platform;\n    #rest;\n    #globString;\n    #isDrive;\n    #isUNC;\n    #isAbsolute;\n    #followGlobstar = true;\n    constructor(patternList, globList, index, platform) {\n      if (!isPatternList(patternList)) {\n        throw new TypeError(\"empty pattern list\");\n      }\n      if (!isGlobList(globList)) {\n        throw new TypeError(\"empty glob list\");\n      }\n      if (globList.length !== patternList.length) {\n        throw new TypeError(\"mismatched pattern list and glob list lengths\");\n      }\n      this.length = patternList.length;\n      if (index < 0 || index >= this.length) {\n        throw new TypeError(\"index out of range\");\n      }\n      this.#patternList = patternList;\n      this.#globList = globList;\n      this.#index = index;\n      this.#platform = platform;\n      if (this.#index === 0) {\n        if (this.isUNC()) {\n          const [p0, p1, p2, p3, ...prest] = this.#patternList;\n          const [g0, g1, g2, g3, ...grest] = this.#globList;\n          if (prest[0] === \"\") {\n            prest.shift();\n            grest.shift();\n          }\n          const p = [p0, p1, p2, p3, \"\"].join(\"/\");\n          const g = [g0, g1, g2, g3, \"\"].join(\"/\");\n          this.#patternList = [p, ...prest];\n          this.#globList = [g, ...grest];\n          this.length = this.#patternList.length;\n        } else if (this.isDrive() || this.isAbsolute()) {\n          const [p1, ...prest] = this.#patternList;\n          const [g1, ...grest] = this.#globList;\n          if (prest[0] === \"\") {\n            prest.shift();\n            grest.shift();\n          }\n          const p = p1 + \"/\";\n          const g = g1 + \"/\";\n          this.#patternList = [p, ...prest];\n          this.#globList = [g, ...grest];\n          this.length = this.#patternList.length;\n        }\n      }\n    }\n    pattern() {\n      return this.#patternList[this.#index];\n    }\n    isString() {\n      return typeof this.#patternList[this.#index] === \"string\";\n    }\n    isGlobstar() {\n      return this.#patternList[this.#index] === minimatch_1.GLOBSTAR;\n    }\n    isRegExp() {\n      return this.#patternList[this.#index] instanceof RegExp;\n    }\n    globString() {\n      return this.#globString = this.#globString || (this.#index === 0 ? this.isAbsolute() ? this.#globList[0] + this.#globList.slice(1).join(\"/\") : this.#globList.join(\"/\") : this.#globList.slice(this.#index).join(\"/\"));\n    }\n    hasMore() {\n      return this.length > this.#index + 1;\n    }\n    rest() {\n      if (this.#rest !== undefined)\n        return this.#rest;\n      if (!this.hasMore())\n        return this.#rest = null;\n      this.#rest = new Pattern(this.#patternList, this.#globList, this.#index + 1, this.#platform);\n      this.#rest.#isAbsolute = this.#isAbsolute;\n      this.#rest.#isUNC = this.#isUNC;\n      this.#rest.#isDrive = this.#isDrive;\n      return this.#rest;\n    }\n    isUNC() {\n      const pl = this.#patternList;\n      return this.#isUNC !== undefined ? this.#isUNC : this.#isUNC = this.#platform === \"win32\" && this.#index === 0 && pl[0] === \"\" && pl[1] === \"\" && typeof pl[2] === \"string\" && !!pl[2] && typeof pl[3] === \"string\" && !!pl[3];\n    }\n    isDrive() {\n      const pl = this.#patternList;\n      return this.#isDrive !== undefined ? this.#isDrive : this.#isDrive = this.#platform === \"win32\" && this.#index === 0 && this.length > 1 && typeof pl[0] === \"string\" && /^[a-z]:$/i.test(pl[0]);\n    }\n    isAbsolute() {\n      const pl = this.#patternList;\n      return this.#isAbsolute !== undefined ? this.#isAbsolute : this.#isAbsolute = pl[0] === \"\" && pl.length > 1 || this.isDrive() || this.isUNC();\n    }\n    root() {\n      const p = this.#patternList[0];\n      return typeof p === \"string\" && this.isAbsolute() && this.#index === 0 ? p : \"\";\n    }\n    checkFollowGlobstar() {\n      return !(this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar);\n    }\n    markFollowGlobstar() {\n      if (this.#index === 0 || !this.isGlobstar() || !this.#followGlobstar)\n        return false;\n      this.#followGlobstar = false;\n      return true;\n    }\n  }\n  exports.Pattern = Pattern;\n});\n\n// node_modules/glob/dist/cjs/src/ignore.js\nvar require_ignore = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Ignore = undefined;\n  var minimatch_1 = require_cjs();\n  var pattern_js_1 = require_pattern();\n  var defaultPlatform = typeof process === \"object\" && process && typeof process.platform === \"string\" ? process.platform : \"linux\";\n\n  class Ignore {\n    relative;\n    relativeChildren;\n    absolute;\n    absoluteChildren;\n    constructor(ignored, { nobrace, nocase, noext, noglobstar, platform = defaultPlatform }) {\n      this.relative = [];\n      this.absolute = [];\n      this.relativeChildren = [];\n      this.absoluteChildren = [];\n      const mmopts = {\n        dot: true,\n        nobrace,\n        nocase,\n        noext,\n        noglobstar,\n        optimizationLevel: 2,\n        platform,\n        nocomment: true,\n        nonegate: true\n      };\n      for (const ign of ignored) {\n        const mm = new minimatch_1.Minimatch(ign, mmopts);\n        for (let i = 0;i < mm.set.length; i++) {\n          const parsed = mm.set[i];\n          const globParts = mm.globParts[i];\n          const p = new pattern_js_1.Pattern(parsed, globParts, 0, platform);\n          const m = new minimatch_1.Minimatch(p.globString(), mmopts);\n          const children = globParts[globParts.length - 1] === \"**\";\n          const absolute = p.isAbsolute();\n          if (absolute)\n            this.absolute.push(m);\n          else\n            this.relative.push(m);\n          if (children) {\n            if (absolute)\n              this.absoluteChildren.push(m);\n            else\n              this.relativeChildren.push(m);\n          }\n        }\n      }\n    }\n    ignored(p) {\n      const fullpath = p.fullpath();\n      const fullpaths = `${fullpath}/`;\n      const relative = p.relative() || \".\";\n      const relatives = `${relative}/`;\n      for (const m of this.relative) {\n        if (m.match(relative) || m.match(relatives))\n          return true;\n      }\n      for (const m of this.absolute) {\n        if (m.match(fullpath) || m.match(fullpaths))\n          return true;\n      }\n      return false;\n    }\n    childrenIgnored(p) {\n      const fullpath = p.fullpath() + \"/\";\n      const relative = (p.relative() || \".\") + \"/\";\n      for (const m of this.relativeChildren) {\n        if (m.match(relative))\n          return true;\n      }\n      for (const m of this.absoluteChildren) {\n        if (m.match(fullpath))\n          ;\n      }\n      return false;\n    }\n  }\n  exports.Ignore = Ignore;\n});\n\n// node_modules/glob/dist/cjs/src/processor.js\nvar require_processor = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Processor = exports.SubWalks = exports.MatchRecord = exports.HasWalkedCache = undefined;\n  var minimatch_1 = require_cjs();\n\n  class HasWalkedCache {\n    store;\n    constructor(store = new Map) {\n      this.store = store;\n    }\n    copy() {\n      return new HasWalkedCache(new Map(this.store));\n    }\n    hasWalked(target, pattern) {\n      return this.store.get(target.fullpath())?.has(pattern.globString());\n    }\n    storeWalked(target, pattern) {\n      const fullpath = target.fullpath();\n      const cached = this.store.get(fullpath);\n      if (cached)\n        cached.add(pattern.globString());\n      else\n        this.store.set(fullpath, new Set([pattern.globString()]));\n    }\n  }\n  exports.HasWalkedCache = HasWalkedCache;\n\n  class MatchRecord {\n    store = new Map;\n    add(target, absolute, ifDir) {\n      const n = (absolute ? 2 : 0) | (ifDir ? 1 : 0);\n      const current = this.store.get(target);\n      this.store.set(target, current === undefined ? n : n & current);\n    }\n    entries() {\n      return [...this.store.entries()].map(([path, n]) => [\n        path,\n        !!(n & 2),\n        !!(n & 1)\n      ]);\n    }\n  }\n  exports.MatchRecord = MatchRecord;\n\n  class SubWalks {\n    store = new Map;\n    add(target, pattern) {\n      if (!target.canReaddir()) {\n        return;\n      }\n      const subs = this.store.get(target);\n      if (subs) {\n        if (!subs.find((p) => p.globString() === pattern.globString())) {\n          subs.push(pattern);\n        }\n      } else\n        this.store.set(target, [pattern]);\n    }\n    get(target) {\n      const subs = this.store.get(target);\n      if (!subs) {\n        throw new Error(\"attempting to walk unknown path\");\n      }\n      return subs;\n    }\n    entries() {\n      return this.keys().map((k) => [k, this.store.get(k)]);\n    }\n    keys() {\n      return [...this.store.keys()].filter((t) => t.canReaddir());\n    }\n  }\n  exports.SubWalks = SubWalks;\n\n  class Processor {\n    hasWalkedCache;\n    matches = new MatchRecord;\n    subwalks = new SubWalks;\n    patterns;\n    follow;\n    dot;\n    opts;\n    constructor(opts, hasWalkedCache) {\n      this.opts = opts;\n      this.follow = !!opts.follow;\n      this.dot = !!opts.dot;\n      this.hasWalkedCache = hasWalkedCache ? hasWalkedCache.copy() : new HasWalkedCache;\n    }\n    processPatterns(target, patterns) {\n      this.patterns = patterns;\n      const processingSet = patterns.map((p) => [target, p]);\n      for (let [t, pattern] of processingSet) {\n        this.hasWalkedCache.storeWalked(t, pattern);\n        const root = pattern.root();\n        const absolute = pattern.isAbsolute() && this.opts.absolute !== false;\n        if (root) {\n          t = t.resolve(root === \"/\" && this.opts.root !== undefined ? this.opts.root : root);\n          const rest2 = pattern.rest();\n          if (!rest2) {\n            this.matches.add(t, true, false);\n            continue;\n          } else {\n            pattern = rest2;\n          }\n        }\n        if (t.isENOENT())\n          continue;\n        let p;\n        let rest;\n        let changed = false;\n        while (typeof (p = pattern.pattern()) === \"string\" && (rest = pattern.rest())) {\n          const c = t.resolve(p);\n          if (c.isUnknown() && p !== \"..\")\n            break;\n          t = c;\n          pattern = rest;\n          changed = true;\n        }\n        p = pattern.pattern();\n        rest = pattern.rest();\n        if (changed) {\n          if (this.hasWalkedCache.hasWalked(t, pattern))\n            continue;\n          this.hasWalkedCache.storeWalked(t, pattern);\n        }\n        if (typeof p === \"string\") {\n          if (!rest) {\n            const ifDir = p === \"..\" || p === \"\" || p === \".\";\n            this.matches.add(t.resolve(p), absolute, ifDir);\n          } else {\n            this.subwalks.add(t, pattern);\n          }\n          continue;\n        } else if (p === minimatch_1.GLOBSTAR) {\n          if (!t.isSymbolicLink() || this.follow || pattern.checkFollowGlobstar()) {\n            this.subwalks.add(t, pattern);\n          }\n          const rp = rest?.pattern();\n          const rrest = rest?.rest();\n          if (!rest || (rp === \"\" || rp === \".\") && !rrest) {\n            this.matches.add(t, absolute, rp === \"\" || rp === \".\");\n          } else {\n            if (rp === \"..\") {\n              const tp = t.parent || t;\n              if (!rrest)\n                this.matches.add(tp, absolute, true);\n              else if (!this.hasWalkedCache.hasWalked(tp, rrest)) {\n                this.subwalks.add(tp, rrest);\n              }\n            }\n          }\n        } else if (p instanceof RegExp) {\n          this.subwalks.add(t, pattern);\n        }\n      }\n      return this;\n    }\n    subwalkTargets() {\n      return this.subwalks.keys();\n    }\n    child() {\n      return new Processor(this.opts, this.hasWalkedCache);\n    }\n    filterEntries(parent, entries) {\n      const patterns = this.subwalks.get(parent);\n      const results = this.child();\n      for (const e of entries) {\n        for (const pattern of patterns) {\n          const absolute = pattern.isAbsolute();\n          const p = pattern.pattern();\n          const rest = pattern.rest();\n          if (p === minimatch_1.GLOBSTAR) {\n            results.testGlobstar(e, pattern, rest, absolute);\n          } else if (p instanceof RegExp) {\n            results.testRegExp(e, p, rest, absolute);\n          } else {\n            results.testString(e, p, rest, absolute);\n          }\n        }\n      }\n      return results;\n    }\n    testGlobstar(e, pattern, rest, absolute) {\n      if (this.dot || !e.name.startsWith(\".\")) {\n        if (!pattern.hasMore()) {\n          this.matches.add(e, absolute, false);\n        }\n        if (e.canReaddir()) {\n          if (this.follow || !e.isSymbolicLink()) {\n            this.subwalks.add(e, pattern);\n          } else if (e.isSymbolicLink()) {\n            if (rest && pattern.checkFollowGlobstar()) {\n              this.subwalks.add(e, rest);\n            } else if (pattern.markFollowGlobstar()) {\n              this.subwalks.add(e, pattern);\n            }\n          }\n        }\n      }\n      if (rest) {\n        const rp = rest.pattern();\n        if (typeof rp === \"string\" && rp !== \"..\" && rp !== \"\" && rp !== \".\") {\n          this.testString(e, rp, rest.rest(), absolute);\n        } else if (rp === \"..\") {\n          const ep = e.parent || e;\n          this.subwalks.add(ep, rest);\n        } else if (rp instanceof RegExp) {\n          this.testRegExp(e, rp, rest.rest(), absolute);\n        }\n      }\n    }\n    testRegExp(e, p, rest, absolute) {\n      if (!p.test(e.name))\n        return;\n      if (!rest) {\n        this.matches.add(e, absolute, false);\n      } else {\n        this.subwalks.add(e, rest);\n      }\n    }\n    testString(e, p, rest, absolute) {\n      if (!e.isNamed(p))\n        return;\n      if (!rest) {\n        this.matches.add(e, absolute, false);\n      } else {\n        this.subwalks.add(e, rest);\n      }\n    }\n  }\n  exports.Processor = Processor;\n});\n\n// node_modules/glob/dist/cjs/src/walker.js\nvar require_walker = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.GlobStream = exports.GlobWalker = exports.GlobUtil = undefined;\n  var minipass_1 = require_cjs3();\n  var ignore_js_1 = require_ignore();\n  var processor_js_1 = require_processor();\n  var makeIgnore = (ignore, opts) => typeof ignore === \"string\" ? new ignore_js_1.Ignore([ignore], opts) : Array.isArray(ignore) ? new ignore_js_1.Ignore(ignore, opts) : ignore;\n\n  class GlobUtil {\n    path;\n    patterns;\n    opts;\n    seen = new Set;\n    paused = false;\n    aborted = false;\n    #onResume = [];\n    #ignore;\n    #sep;\n    signal;\n    maxDepth;\n    constructor(patterns, path, opts) {\n      this.patterns = patterns;\n      this.path = path;\n      this.opts = opts;\n      this.#sep = !opts.posix && opts.platform === \"win32\" ? \"\\\\\" : \"/\";\n      if (opts.ignore) {\n        this.#ignore = makeIgnore(opts.ignore, opts);\n      }\n      this.maxDepth = opts.maxDepth || Infinity;\n      if (opts.signal) {\n        this.signal = opts.signal;\n        this.signal.addEventListener(\"abort\", () => {\n          this.#onResume.length = 0;\n        });\n      }\n    }\n    #ignored(path) {\n      return this.seen.has(path) || !!this.#ignore?.ignored?.(path);\n    }\n    #childrenIgnored(path) {\n      return !!this.#ignore?.childrenIgnored?.(path);\n    }\n    pause() {\n      this.paused = true;\n    }\n    resume() {\n      if (this.signal?.aborted)\n        return;\n      this.paused = false;\n      let fn = undefined;\n      while (!this.paused && (fn = this.#onResume.shift())) {\n        fn();\n      }\n    }\n    onResume(fn) {\n      if (this.signal?.aborted)\n        return;\n      if (!this.paused) {\n        fn();\n      } else {\n        this.#onResume.push(fn);\n      }\n    }\n    async matchCheck(e, ifDir) {\n      if (ifDir && this.opts.nodir)\n        return;\n      let rpc;\n      if (this.opts.realpath) {\n        rpc = e.realpathCached() || await e.realpath();\n        if (!rpc)\n          return;\n        e = rpc;\n      }\n      const needStat = e.isUnknown() || this.opts.stat;\n      return this.matchCheckTest(needStat ? await e.lstat() : e, ifDir);\n    }\n    matchCheckTest(e, ifDir) {\n      return e && (this.maxDepth === Infinity || e.depth() <= this.maxDepth) && (!ifDir || e.canReaddir()) && (!this.opts.nodir || !e.isDirectory()) && !this.#ignored(e) ? e : undefined;\n    }\n    matchCheckSync(e, ifDir) {\n      if (ifDir && this.opts.nodir)\n        return;\n      let rpc;\n      if (this.opts.realpath) {\n        rpc = e.realpathCached() || e.realpathSync();\n        if (!rpc)\n          return;\n        e = rpc;\n      }\n      const needStat = e.isUnknown() || this.opts.stat;\n      return this.matchCheckTest(needStat ? e.lstatSync() : e, ifDir);\n    }\n    matchFinish(e, absolute) {\n      if (this.#ignored(e))\n        return;\n      const abs = this.opts.absolute === undefined ? absolute : this.opts.absolute;\n      this.seen.add(e);\n      const mark = this.opts.mark && e.isDirectory() ? this.#sep : \"\";\n      if (this.opts.withFileTypes) {\n        this.matchEmit(e);\n      } else if (abs) {\n        const abs2 = this.opts.posix ? e.fullpathPosix() : e.fullpath();\n        this.matchEmit(abs2 + mark);\n      } else {\n        const rel = this.opts.posix ? e.relativePosix() : e.relative();\n        const pre = this.opts.dotRelative && !rel.startsWith(\"..\" + this.#sep) ? \".\" + this.#sep : \"\";\n        this.matchEmit(!rel ? \".\" + mark : pre + rel + mark);\n      }\n    }\n    async match(e, absolute, ifDir) {\n      const p = await this.matchCheck(e, ifDir);\n      if (p)\n        this.matchFinish(p, absolute);\n    }\n    matchSync(e, absolute, ifDir) {\n      const p = this.matchCheckSync(e, ifDir);\n      if (p)\n        this.matchFinish(p, absolute);\n    }\n    walkCB(target, patterns, cb) {\n      if (this.signal?.aborted)\n        cb();\n      this.walkCB2(target, patterns, new processor_js_1.Processor(this.opts), cb);\n    }\n    walkCB2(target, patterns, processor, cb) {\n      if (this.#childrenIgnored(target))\n        return cb();\n      if (this.signal?.aborted)\n        cb();\n      if (this.paused) {\n        this.onResume(() => this.walkCB2(target, patterns, processor, cb));\n        return;\n      }\n      processor.processPatterns(target, patterns);\n      let tasks = 1;\n      const next = () => {\n        if (--tasks === 0)\n          cb();\n      };\n      for (const [m, absolute, ifDir] of processor.matches.entries()) {\n        if (this.#ignored(m))\n          continue;\n        tasks++;\n        this.match(m, absolute, ifDir).then(() => next());\n      }\n      for (const t of processor.subwalkTargets()) {\n        if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n          continue;\n        }\n        tasks++;\n        const childrenCached = t.readdirCached();\n        if (t.calledReaddir())\n          this.walkCB3(t, childrenCached, processor, next);\n        else {\n          t.readdirCB((_, entries) => this.walkCB3(t, entries, processor, next), true);\n        }\n      }\n      next();\n    }\n    walkCB3(target, entries, processor, cb) {\n      processor = processor.filterEntries(target, entries);\n      let tasks = 1;\n      const next = () => {\n        if (--tasks === 0)\n          cb();\n      };\n      for (const [m, absolute, ifDir] of processor.matches.entries()) {\n        if (this.#ignored(m))\n          continue;\n        tasks++;\n        this.match(m, absolute, ifDir).then(() => next());\n      }\n      for (const [target2, patterns] of processor.subwalks.entries()) {\n        tasks++;\n        this.walkCB2(target2, patterns, processor.child(), next);\n      }\n      next();\n    }\n    walkCBSync(target, patterns, cb) {\n      if (this.signal?.aborted)\n        cb();\n      this.walkCB2Sync(target, patterns, new processor_js_1.Processor(this.opts), cb);\n    }\n    walkCB2Sync(target, patterns, processor, cb) {\n      if (this.#childrenIgnored(target))\n        return cb();\n      if (this.signal?.aborted)\n        cb();\n      if (this.paused) {\n        this.onResume(() => this.walkCB2Sync(target, patterns, processor, cb));\n        return;\n      }\n      processor.processPatterns(target, patterns);\n      let tasks = 1;\n      const next = () => {\n        if (--tasks === 0)\n          cb();\n      };\n      for (const [m, absolute, ifDir] of processor.matches.entries()) {\n        if (this.#ignored(m))\n          continue;\n        this.matchSync(m, absolute, ifDir);\n      }\n      for (const t of processor.subwalkTargets()) {\n        if (this.maxDepth !== Infinity && t.depth() >= this.maxDepth) {\n          continue;\n        }\n        tasks++;\n        const children = t.readdirSync();\n        this.walkCB3Sync(t, children, processor, next);\n      }\n      next();\n    }\n    walkCB3Sync(target, entries, processor, cb) {\n      processor = processor.filterEntries(target, entries);\n      let tasks = 1;\n      const next = () => {\n        if (--tasks === 0)\n          cb();\n      };\n      for (const [m, absolute, ifDir] of processor.matches.entries()) {\n        if (this.#ignored(m))\n          continue;\n        this.matchSync(m, absolute, ifDir);\n      }\n      for (const [target2, patterns] of processor.subwalks.entries()) {\n        tasks++;\n        this.walkCB2Sync(target2, patterns, processor.child(), next);\n      }\n      next();\n    }\n  }\n  exports.GlobUtil = GlobUtil;\n\n  class GlobWalker extends GlobUtil {\n    matches;\n    constructor(patterns, path, opts) {\n      super(patterns, path, opts);\n      this.matches = new Set;\n    }\n    matchEmit(e) {\n      this.matches.add(e);\n    }\n    async walk() {\n      if (this.signal?.aborted)\n        throw this.signal.reason;\n      if (this.path.isUnknown()) {\n        await this.path.lstat();\n      }\n      await new Promise((res, rej) => {\n        this.walkCB(this.path, this.patterns, () => {\n          if (this.signal?.aborted) {\n            rej(this.signal.reason);\n          } else {\n            res(this.matches);\n          }\n        });\n      });\n      return this.matches;\n    }\n    walkSync() {\n      if (this.signal?.aborted)\n        throw this.signal.reason;\n      if (this.path.isUnknown()) {\n        this.path.lstatSync();\n      }\n      this.walkCBSync(this.path, this.patterns, () => {\n        if (this.signal?.aborted)\n          throw this.signal.reason;\n      });\n      return this.matches;\n    }\n  }\n  exports.GlobWalker = GlobWalker;\n\n  class GlobStream extends GlobUtil {\n    results;\n    constructor(patterns, path, opts) {\n      super(patterns, path, opts);\n      this.results = new minipass_1.Minipass({\n        signal: this.signal,\n        objectMode: true\n      });\n      this.results.on(\"drain\", () => this.resume());\n      this.results.on(\"resume\", () => this.resume());\n    }\n    matchEmit(e) {\n      this.results.write(e);\n      if (!this.results.flowing)\n        this.pause();\n    }\n    stream() {\n      const target = this.path;\n      if (target.isUnknown()) {\n        target.lstat().then(() => {\n          this.walkCB(target, this.patterns, () => this.results.end());\n        });\n      } else {\n        this.walkCB(target, this.patterns, () => this.results.end());\n      }\n      return this.results;\n    }\n    streamSync() {\n      if (this.path.isUnknown()) {\n        this.path.lstatSync();\n      }\n      this.walkCBSync(this.path, this.patterns, () => this.results.end());\n      return this.results;\n    }\n  }\n  exports.GlobStream = GlobStream;\n});\n\n// node_modules/glob/dist/cjs/src/glob.js\nvar require_glob = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.Glob = undefined;\n  var minimatch_1 = require_cjs();\n  var path_scurry_1 = require_cjs4();\n  var url_1 = __require(\"url\");\n  var pattern_js_1 = require_pattern();\n  var walker_js_1 = require_walker();\n  var defaultPlatform = typeof process === \"object\" && process && typeof process.platform === \"string\" ? process.platform : \"linux\";\n\n  class Glob {\n    absolute;\n    cwd;\n    root;\n    dot;\n    dotRelative;\n    follow;\n    ignore;\n    magicalBraces;\n    mark;\n    matchBase;\n    maxDepth;\n    nobrace;\n    nocase;\n    nodir;\n    noext;\n    noglobstar;\n    pattern;\n    platform;\n    realpath;\n    scurry;\n    stat;\n    signal;\n    windowsPathsNoEscape;\n    withFileTypes;\n    opts;\n    patterns;\n    constructor(pattern, opts) {\n      if (!opts)\n        throw new TypeError(\"glob options required\");\n      this.withFileTypes = !!opts.withFileTypes;\n      this.signal = opts.signal;\n      this.follow = !!opts.follow;\n      this.dot = !!opts.dot;\n      this.dotRelative = !!opts.dotRelative;\n      this.nodir = !!opts.nodir;\n      this.mark = !!opts.mark;\n      if (!opts.cwd) {\n        this.cwd = \"\";\n      } else if (opts.cwd instanceof URL || opts.cwd.startsWith(\"file://\")) {\n        opts.cwd = (0, url_1.fileURLToPath)(opts.cwd);\n      }\n      this.cwd = opts.cwd || \"\";\n      this.root = opts.root;\n      this.magicalBraces = !!opts.magicalBraces;\n      this.nobrace = !!opts.nobrace;\n      this.noext = !!opts.noext;\n      this.realpath = !!opts.realpath;\n      this.absolute = opts.absolute;\n      this.noglobstar = !!opts.noglobstar;\n      this.matchBase = !!opts.matchBase;\n      this.maxDepth = typeof opts.maxDepth === \"number\" ? opts.maxDepth : Infinity;\n      this.stat = !!opts.stat;\n      this.ignore = opts.ignore;\n      if (this.withFileTypes && this.absolute !== undefined) {\n        throw new Error(\"cannot set absolute and withFileTypes:true\");\n      }\n      if (typeof pattern === \"string\") {\n        pattern = [pattern];\n      }\n      this.windowsPathsNoEscape = !!opts.windowsPathsNoEscape || opts.allowWindowsEscape === false;\n      if (this.windowsPathsNoEscape) {\n        pattern = pattern.map((p) => p.replace(/\\\\/g, \"/\"));\n      }\n      if (this.matchBase) {\n        if (opts.noglobstar) {\n          throw new TypeError(\"base matching requires globstar\");\n        }\n        pattern = pattern.map((p) => p.includes(\"/\") ? p : `./**/${p}`);\n      }\n      this.pattern = pattern;\n      this.platform = opts.platform || defaultPlatform;\n      this.opts = { ...opts, platform: this.platform };\n      if (opts.scurry) {\n        this.scurry = opts.scurry;\n        if (opts.nocase !== undefined && opts.nocase !== opts.scurry.nocase) {\n          throw new Error(\"nocase option contradicts provided scurry option\");\n        }\n      } else {\n        const Scurry = opts.platform === \"win32\" ? path_scurry_1.PathScurryWin32 : opts.platform === \"darwin\" ? path_scurry_1.PathScurryDarwin : opts.platform ? path_scurry_1.PathScurryPosix : path_scurry_1.PathScurry;\n        this.scurry = new Scurry(this.cwd, {\n          nocase: opts.nocase,\n          fs: opts.fs\n        });\n      }\n      this.nocase = this.scurry.nocase;\n      const nocaseMagicOnly = this.platform === \"darwin\" || this.platform === \"win32\";\n      const mmo = {\n        ...opts,\n        dot: this.dot,\n        matchBase: this.matchBase,\n        nobrace: this.nobrace,\n        nocase: this.nocase,\n        nocaseMagicOnly,\n        nocomment: true,\n        noext: this.noext,\n        nonegate: true,\n        optimizationLevel: 2,\n        platform: this.platform,\n        windowsPathsNoEscape: this.windowsPathsNoEscape,\n        debug: !!this.opts.debug\n      };\n      const mms = this.pattern.map((p) => new minimatch_1.Minimatch(p, mmo));\n      const [matchSet, globParts] = mms.reduce((set, m) => {\n        set[0].push(...m.set);\n        set[1].push(...m.globParts);\n        return set;\n      }, [[], []]);\n      this.patterns = matchSet.map((set, i) => {\n        return new pattern_js_1.Pattern(set, globParts[i], 0, this.platform);\n      });\n    }\n    async walk() {\n      return [\n        ...await new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n          ...this.opts,\n          maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n          platform: this.platform,\n          nocase: this.nocase\n        }).walk()\n      ];\n    }\n    walkSync() {\n      return [\n        ...new walker_js_1.GlobWalker(this.patterns, this.scurry.cwd, {\n          ...this.opts,\n          maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n          platform: this.platform,\n          nocase: this.nocase\n        }).walkSync()\n      ];\n    }\n    stream() {\n      return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n        platform: this.platform,\n        nocase: this.nocase\n      }).stream();\n    }\n    streamSync() {\n      return new walker_js_1.GlobStream(this.patterns, this.scurry.cwd, {\n        ...this.opts,\n        maxDepth: this.maxDepth !== Infinity ? this.maxDepth + this.scurry.cwd.depth() : Infinity,\n        platform: this.platform,\n        nocase: this.nocase\n      }).streamSync();\n    }\n    iterateSync() {\n      return this.streamSync()[Symbol.iterator]();\n    }\n    [Symbol.iterator]() {\n      return this.iterateSync();\n    }\n    iterate() {\n      return this.stream()[Symbol.asyncIterator]();\n    }\n    [Symbol.asyncIterator]() {\n      return this.iterate();\n    }\n  }\n  exports.Glob = Glob;\n});\n\n// node_modules/glob/dist/cjs/src/has-magic.js\nvar require_has_magic = __commonJS((exports) => {\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.hasMagic = undefined;\n  var minimatch_1 = require_cjs();\n  var hasMagic = (pattern, options = {}) => {\n    if (!Array.isArray(pattern)) {\n      pattern = [pattern];\n    }\n    for (const p of pattern) {\n      if (new minimatch_1.Minimatch(p, options).hasMagic())\n        return true;\n    }\n    return false;\n  };\n  exports.hasMagic = hasMagic;\n});\n\n// node_modules/glob/dist/cjs/src/index.js\nvar require_src = __commonJS((exports) => {\n  var globStreamSync = function(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).streamSync();\n  };\n  var globStream = function(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).stream();\n  };\n  var globSync = function(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).walkSync();\n  };\n  async function glob_(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).walk();\n  }\n  var globIterateSync = function(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).iterateSync();\n  };\n  var globIterate = function(pattern, options = {}) {\n    return new glob_js_1.Glob(pattern, options).iterate();\n  };\n  Object.defineProperty(exports, \"__esModule\", { value: true });\n  exports.glob = exports.hasMagic = exports.Glob = exports.unescape = exports.escape = exports.sync = exports.iterate = exports.iterateSync = exports.stream = exports.streamSync = exports.globIterate = exports.globIterateSync = exports.globSync = exports.globStream = exports.globStreamSync = undefined;\n  var minimatch_1 = require_cjs();\n  var glob_js_1 = require_glob();\n  var has_magic_js_1 = require_has_magic();\n  exports.globStreamSync = globStreamSync;\n  exports.globStream = globStream;\n  exports.globSync = globSync;\n  exports.globIterateSync = globIterateSync;\n  exports.globIterate = globIterate;\n  exports.streamSync = globStreamSync;\n  exports.stream = Object.assign(globStream, { sync: globStreamSync });\n  exports.iterateSync = globIterateSync;\n  exports.iterate = Object.assign(globIterate, {\n    sync: globIterateSync\n  });\n  exports.sync = Object.assign(globSync, {\n    stream: globStreamSync,\n    iterate: globIterateSync\n  });\n  var minimatch_2 = require_cjs();\n  Object.defineProperty(exports, \"escape\", { enumerable: true, get: function() {\n    return minimatch_2.escape;\n  } });\n  Object.defineProperty(exports, \"unescape\", { enumerable: true, get: function() {\n    return minimatch_2.unescape;\n  } });\n  var glob_js_2 = require_glob();\n  Object.defineProperty(exports, \"Glob\", { enumerable: true, get: function() {\n    return glob_js_2.Glob;\n  } });\n  var has_magic_js_2 = require_has_magic();\n  Object.defineProperty(exports, \"hasMagic\", { enumerable: true, get: function() {\n    return has_magic_js_2.hasMagic;\n  } });\n  exports.glob = Object.assign(glob_, {\n    glob: glob_,\n    globSync,\n    sync: exports.sync,\n    globStream,\n    stream: exports.stream,\n    globStreamSync,\n    streamSync: exports.streamSync,\n    globIterate,\n    iterate: exports.iterate,\n    globIterateSync,\n    iterateSync: exports.iterateSync,\n    Glob: glob_js_1.Glob,\n    hasMagic: has_magic_js_1.hasMagic,\n    escape: minimatch_1.escape,\n    unescape: minimatch_1.unescape\n  });\n  exports.glob.glob = exports.glob;\n});\n\n// node_modules/npm-normalize-package-bin/lib/index.js\nvar require_lib4 = __commonJS((exports, module) => {\n  var { join, basename } = __require(\"path\");\n  var normalize = (pkg) => !pkg.bin ? removeBin(pkg) : typeof pkg.bin === \"string\" ? normalizeString(pkg) : Array.isArray(pkg.bin) ? normalizeArray(pkg) : typeof pkg.bin === \"object\" ? normalizeObject(pkg) : removeBin(pkg);\n  var normalizeString = (pkg) => {\n    if (!pkg.name) {\n      return removeBin(pkg);\n    }\n    pkg.bin = { [pkg.name]: pkg.bin };\n    return normalizeObject(pkg);\n  };\n  var normalizeArray = (pkg) => {\n    pkg.bin = pkg.bin.reduce((acc, k) => {\n      acc[basename(k)] = k;\n      return acc;\n    }, {});\n    return normalizeObject(pkg);\n  };\n  var removeBin = (pkg) => {\n    delete pkg.bin;\n    return pkg;\n  };\n  var normalizeObject = (pkg) => {\n    const orig = pkg.bin;\n    const clean = {};\n    let hasBins = false;\n    Object.keys(orig).forEach((binKey) => {\n      const base = join(\"/\", basename(binKey.replace(/\\\\|:/g, \"/\"))).slice(1);\n      if (typeof orig[binKey] !== \"string\" || !base) {\n        return;\n      }\n      const binTarget = join(\"/\", orig[binKey].replace(/\\\\/g, \"/\")).replace(/\\\\/g, \"/\").slice(1);\n      if (!binTarget) {\n        return;\n      }\n      clean[base] = binTarget;\n      hasBins = true;\n    });\n    if (hasBins) {\n      pkg.bin = clean;\n    } else {\n      delete pkg.bin;\n    }\n    return pkg;\n  };\n  module.exports = normalize;\n});\n\n// node_modules/semver/internal/debug.js\nvar require_debug = __commonJS((exports, module) => {\n  var debug = typeof process === \"object\" && process.env && process.env.NODE_DEBUG && /\\bsemver\\b/i.test(process.env.NODE_DEBUG) ? (...args) => console.error(\"SEMVER\", ...args) : () => {\n  };\n  module.exports = debug;\n});\n\n// node_modules/semver/internal/constants.js\nvar require_constants = __commonJS((exports, module) => {\n  var SEMVER_SPEC_VERSION = \"2.0.0\";\n  var MAX_LENGTH = 256;\n  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var MAX_SAFE_COMPONENT_LENGTH = 16;\n  var MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6;\n  var RELEASE_TYPES = [\n    \"major\",\n    \"premajor\",\n    \"minor\",\n    \"preminor\",\n    \"patch\",\n    \"prepatch\",\n    \"prerelease\"\n  ];\n  module.exports = {\n    MAX_LENGTH,\n    MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH,\n    MAX_SAFE_INTEGER,\n    RELEASE_TYPES,\n    SEMVER_SPEC_VERSION,\n    FLAG_INCLUDE_PRERELEASE: 1,\n    FLAG_LOOSE: 2\n  };\n});\n\n// node_modules/semver/internal/re.js\nvar require_re = __commonJS((exports, module) => {\n  var {\n    MAX_SAFE_COMPONENT_LENGTH,\n    MAX_SAFE_BUILD_LENGTH,\n    MAX_LENGTH\n  } = require_constants();\n  var debug = require_debug();\n  exports = module.exports = {};\n  var re = exports.re = [];\n  var safeRe = exports.safeRe = [];\n  var src = exports.src = [];\n  var t = exports.t = {};\n  var R = 0;\n  var LETTERDASHNUMBER = \"[a-zA-Z0-9-]\";\n  var safeRegexReplacements = [\n    [\"\\\\s\", 1],\n    [\"\\\\d\", MAX_LENGTH],\n    [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH]\n  ];\n  var makeSafeRegex = (value) => {\n    for (const [token, max] of safeRegexReplacements) {\n      value = value.split(`${token}*`).join(`${token}{0,${max}}`).split(`${token}+`).join(`${token}{1,${max}}`);\n    }\n    return value;\n  };\n  var createToken = (name, value, isGlobal) => {\n    const safe = makeSafeRegex(value);\n    const index = R++;\n    debug(name, index, value);\n    t[name] = index;\n    src[index] = value;\n    re[index] = new RegExp(value, isGlobal ? \"g\" : undefined);\n    safeRe[index] = new RegExp(safe, isGlobal ? \"g\" : undefined);\n  };\n  createToken(\"NUMERICIDENTIFIER\", \"0|[1-9]\\\\d*\");\n  createToken(\"NUMERICIDENTIFIERLOOSE\", \"\\\\d+\");\n  createToken(\"NONNUMERICIDENTIFIER\", `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`);\n  createToken(\"MAINVERSION\", `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})\\\\.` + `(${src[t.NUMERICIDENTIFIER]})`);\n  createToken(\"MAINVERSIONLOOSE\", `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` + `(${src[t.NUMERICIDENTIFIERLOOSE]})`);\n  createToken(\"PRERELEASEIDENTIFIER\", `(?:${src[t.NUMERICIDENTIFIER]}|${src[t.NONNUMERICIDENTIFIER]})`);\n  createToken(\"PRERELEASEIDENTIFIERLOOSE\", `(?:${src[t.NUMERICIDENTIFIERLOOSE]}|${src[t.NONNUMERICIDENTIFIER]})`);\n  createToken(\"PRERELEASE\", `(?:-(${src[t.PRERELEASEIDENTIFIER]}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`);\n  createToken(\"PRERELEASELOOSE\", `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`);\n  createToken(\"BUILDIDENTIFIER\", `${LETTERDASHNUMBER}+`);\n  createToken(\"BUILD\", `(?:\\\\+(${src[t.BUILDIDENTIFIER]}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`);\n  createToken(\"FULLPLAIN\", `v?${src[t.MAINVERSION]}${src[t.PRERELEASE]}?${src[t.BUILD]}?`);\n  createToken(\"FULL\", `^${src[t.FULLPLAIN]}$`);\n  createToken(\"LOOSEPLAIN\", `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]}${src[t.PRERELEASELOOSE]}?${src[t.BUILD]}?`);\n  createToken(\"LOOSE\", `^${src[t.LOOSEPLAIN]}$`);\n  createToken(\"GTLT\", \"((?:<|>)?=?)\");\n  createToken(\"XRANGEIDENTIFIERLOOSE\", `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`);\n  createToken(\"XRANGEIDENTIFIER\", `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`);\n  createToken(\"XRANGEPLAIN\", `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` + `(?:${src[t.PRERELEASE]})?${src[t.BUILD]}?` + `)?)?`);\n  createToken(\"XRANGEPLAINLOOSE\", `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` + `(?:${src[t.PRERELEASELOOSE]})?${src[t.BUILD]}?` + `)?)?`);\n  createToken(\"XRANGE\", `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`);\n  createToken(\"XRANGELOOSE\", `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`);\n  createToken(\"COERCE\", `${\"(^|[^\\\\d])(\\\\d{1,\"}${MAX_SAFE_COMPONENT_LENGTH}})` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` + `(?:$|[^\\\\d])`);\n  createToken(\"COERCERTL\", src[t.COERCE], true);\n  createToken(\"LONETILDE\", \"(?:~>?)\");\n  createToken(\"TILDETRIM\", `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true);\n  exports.tildeTrimReplace = \"$1~\";\n  createToken(\"TILDE\", `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`);\n  createToken(\"TILDELOOSE\", `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`);\n  createToken(\"LONECARET\", \"(?:\\\\^)\");\n  createToken(\"CARETTRIM\", `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true);\n  exports.caretTrimReplace = \"$1^\";\n  createToken(\"CARET\", `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`);\n  createToken(\"CARETLOOSE\", `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`);\n  createToken(\"COMPARATORLOOSE\", `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`);\n  createToken(\"COMPARATOR\", `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`);\n  createToken(\"COMPARATORTRIM\", `(\\\\s*)${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true);\n  exports.comparatorTrimReplace = \"$1$2$3\";\n  createToken(\"HYPHENRANGE\", `^\\\\s*(${src[t.XRANGEPLAIN]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAIN]})` + `\\\\s*$`);\n  createToken(\"HYPHENRANGELOOSE\", `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s+-\\\\s+` + `(${src[t.XRANGEPLAINLOOSE]})` + `\\\\s*$`);\n  createToken(\"STAR\", \"(<|>)?=?\\\\s*\\\\*\");\n  createToken(\"GTE0\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$\");\n  createToken(\"GTE0PRE\", \"^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$\");\n});\n\n// node_modules/semver/internal/parse-options.js\nvar require_parse_options = __commonJS((exports, module) => {\n  var looseOption = Object.freeze({ loose: true });\n  var emptyOpts = Object.freeze({});\n  var parseOptions = (options) => {\n    if (!options) {\n      return emptyOpts;\n    }\n    if (typeof options !== \"object\") {\n      return looseOption;\n    }\n    return options;\n  };\n  module.exports = parseOptions;\n});\n\n// node_modules/semver/internal/identifiers.js\nvar require_identifiers = __commonJS((exports, module) => {\n  var numeric = /^[0-9]+$/;\n  var compareIdentifiers = (a, b) => {\n    const anum = numeric.test(a);\n    const bnum = numeric.test(b);\n    if (anum && bnum) {\n      a = +a;\n      b = +b;\n    }\n    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n  };\n  var rcompareIdentifiers = (a, b) => compareIdentifiers(b, a);\n  module.exports = {\n    compareIdentifiers,\n    rcompareIdentifiers\n  };\n});\n\n// node_modules/semver/classes/semver.js\nvar require_semver = __commonJS((exports, module) => {\n  var debug = require_debug();\n  var { MAX_LENGTH, MAX_SAFE_INTEGER } = require_constants();\n  var { safeRe: re, t } = require_re();\n  var parseOptions = require_parse_options();\n  var { compareIdentifiers } = require_identifiers();\n\n  class SemVer {\n    constructor(version2, options) {\n      options = parseOptions(options);\n      if (version2 instanceof SemVer) {\n        if (version2.loose === !!options.loose && version2.includePrerelease === !!options.includePrerelease) {\n          return version2;\n        } else {\n          version2 = version2.version;\n        }\n      } else if (typeof version2 !== \"string\") {\n        throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version2}\".`);\n      }\n      if (version2.length > MAX_LENGTH) {\n        throw new TypeError(`version is longer than ${MAX_LENGTH} characters`);\n      }\n      debug(\"SemVer\", version2, options);\n      this.options = options;\n      this.loose = !!options.loose;\n      this.includePrerelease = !!options.includePrerelease;\n      const m = version2.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n      if (!m) {\n        throw new TypeError(`Invalid Version: ${version2}`);\n      }\n      this.raw = version2;\n      this.major = +m[1];\n      this.minor = +m[2];\n      this.patch = +m[3];\n      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n        throw new TypeError(\"Invalid major version\");\n      }\n      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n        throw new TypeError(\"Invalid minor version\");\n      }\n      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n        throw new TypeError(\"Invalid patch version\");\n      }\n      if (!m[4]) {\n        this.prerelease = [];\n      } else {\n        this.prerelease = m[4].split(\".\").map((id) => {\n          if (/^[0-9]+$/.test(id)) {\n            const num = +id;\n            if (num >= 0 && num < MAX_SAFE_INTEGER) {\n              return num;\n            }\n          }\n          return id;\n        });\n      }\n      this.build = m[5] ? m[5].split(\".\") : [];\n      this.format();\n    }\n    format() {\n      this.version = `${this.major}.${this.minor}.${this.patch}`;\n      if (this.prerelease.length) {\n        this.version += `-${this.prerelease.join(\".\")}`;\n      }\n      return this.version;\n    }\n    toString() {\n      return this.version;\n    }\n    compare(other) {\n      debug(\"SemVer.compare\", this.version, this.options, other);\n      if (!(other instanceof SemVer)) {\n        if (typeof other === \"string\" && other === this.version) {\n          return 0;\n        }\n        other = new SemVer(other, this.options);\n      }\n      if (other.version === this.version) {\n        return 0;\n      }\n      return this.compareMain(other) || this.comparePre(other);\n    }\n    compareMain(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n    comparePre(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n      if (this.prerelease.length && !other.prerelease.length) {\n        return -1;\n      } else if (!this.prerelease.length && other.prerelease.length) {\n        return 1;\n      } else if (!this.prerelease.length && !other.prerelease.length) {\n        return 0;\n      }\n      let i = 0;\n      do {\n        const a = this.prerelease[i];\n        const b = other.prerelease[i];\n        debug(\"prerelease compare\", i, a, b);\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    }\n    compareBuild(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n      let i = 0;\n      do {\n        const a = this.build[i];\n        const b = other.build[i];\n        debug(\"prerelease compare\", i, a, b);\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    }\n    inc(release, identifier, identifierBase) {\n      switch (release) {\n        case \"premajor\":\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor = 0;\n          this.major++;\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"preminor\":\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor++;\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"prepatch\":\n          this.prerelease.length = 0;\n          this.inc(\"patch\", identifier, identifierBase);\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"prerelease\":\n          if (this.prerelease.length === 0) {\n            this.inc(\"patch\", identifier, identifierBase);\n          }\n          this.inc(\"pre\", identifier, identifierBase);\n          break;\n        case \"major\":\n          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n            this.major++;\n          }\n          this.minor = 0;\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n        case \"minor\":\n          if (this.patch !== 0 || this.prerelease.length === 0) {\n            this.minor++;\n          }\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n        case \"patch\":\n          if (this.prerelease.length === 0) {\n            this.patch++;\n          }\n          this.prerelease = [];\n          break;\n        case \"pre\": {\n          const base = Number(identifierBase) ? 1 : 0;\n          if (!identifier && identifierBase === false) {\n            throw new Error(\"invalid increment argument: identifier is empty\");\n          }\n          if (this.prerelease.length === 0) {\n            this.prerelease = [base];\n          } else {\n            let i = this.prerelease.length;\n            while (--i >= 0) {\n              if (typeof this.prerelease[i] === \"number\") {\n                this.prerelease[i]++;\n                i = -2;\n              }\n            }\n            if (i === -1) {\n              if (identifier === this.prerelease.join(\".\") && identifierBase === false) {\n                throw new Error(\"invalid increment argument: identifier already exists\");\n              }\n              this.prerelease.push(base);\n            }\n          }\n          if (identifier) {\n            let prerelease = [identifier, base];\n            if (identifierBase === false) {\n              prerelease = [identifier];\n            }\n            if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n              if (isNaN(this.prerelease[1])) {\n                this.prerelease = prerelease;\n              }\n            } else {\n              this.prerelease = prerelease;\n            }\n          }\n          break;\n        }\n        default:\n          throw new Error(`invalid increment argument: ${release}`);\n      }\n      this.raw = this.format();\n      if (this.build.length) {\n        this.raw += `+${this.build.join(\".\")}`;\n      }\n      return this;\n    }\n  }\n  module.exports = SemVer;\n});\n\n// node_modules/semver/functions/parse.js\nvar require_parse = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var parse3 = (version2, options, throwErrors = false) => {\n    if (version2 instanceof SemVer) {\n      return version2;\n    }\n    try {\n      return new SemVer(version2, options);\n    } catch (er) {\n      if (!throwErrors) {\n        return null;\n      }\n      throw er;\n    }\n  };\n  module.exports = parse3;\n});\n\n// node_modules/semver/functions/valid.js\nvar require_valid = __commonJS((exports, module) => {\n  var parse3 = require_parse();\n  var valid = (version2, options) => {\n    const v = parse3(version2, options);\n    return v ? v.version : null;\n  };\n  module.exports = valid;\n});\n\n// node_modules/semver/functions/clean.js\nvar require_clean = __commonJS((exports, module) => {\n  var parse3 = require_parse();\n  var clean = (version2, options) => {\n    const s = parse3(version2.trim().replace(/^[=v]+/, \"\"), options);\n    return s ? s.version : null;\n  };\n  module.exports = clean;\n});\n\n// node_modules/spdx-license-ids/index.json\nvar require_spdx_license_ids = __commonJS((exports, module) => {\n  module.exports = [\n    \"0BSD\",\n    \"AAL\",\n    \"ADSL\",\n    \"AFL-1.1\",\n    \"AFL-1.2\",\n    \"AFL-2.0\",\n    \"AFL-2.1\",\n    \"AFL-3.0\",\n    \"AGPL-1.0-only\",\n    \"AGPL-1.0-or-later\",\n    \"AGPL-3.0-only\",\n    \"AGPL-3.0-or-later\",\n    \"AMDPLPA\",\n    \"AML\",\n    \"AMPAS\",\n    \"ANTLR-PD\",\n    \"ANTLR-PD-fallback\",\n    \"APAFML\",\n    \"APL-1.0\",\n    \"APSL-1.0\",\n    \"APSL-1.1\",\n    \"APSL-1.2\",\n    \"APSL-2.0\",\n    \"Abstyles\",\n    \"AdaCore-doc\",\n    \"Adobe-2006\",\n    \"Adobe-Glyph\",\n    \"Afmparse\",\n    \"Aladdin\",\n    \"Apache-1.0\",\n    \"Apache-1.1\",\n    \"Apache-2.0\",\n    \"App-s2p\",\n    \"Arphic-1999\",\n    \"Artistic-1.0\",\n    \"Artistic-1.0-Perl\",\n    \"Artistic-1.0-cl8\",\n    \"Artistic-2.0\",\n    \"BSD-1-Clause\",\n    \"BSD-2-Clause\",\n    \"BSD-2-Clause-Patent\",\n    \"BSD-2-Clause-Views\",\n    \"BSD-3-Clause\",\n    \"BSD-3-Clause-Attribution\",\n    \"BSD-3-Clause-Clear\",\n    \"BSD-3-Clause-LBNL\",\n    \"BSD-3-Clause-Modification\",\n    \"BSD-3-Clause-No-Military-License\",\n    \"BSD-3-Clause-No-Nuclear-License\",\n    \"BSD-3-Clause-No-Nuclear-License-2014\",\n    \"BSD-3-Clause-No-Nuclear-Warranty\",\n    \"BSD-3-Clause-Open-MPI\",\n    \"BSD-4-Clause\",\n    \"BSD-4-Clause-Shortened\",\n    \"BSD-4-Clause-UC\",\n    \"BSD-4.3RENO\",\n    \"BSD-4.3TAHOE\",\n    \"BSD-Advertising-Acknowledgement\",\n    \"BSD-Attribution-HPND-disclaimer\",\n    \"BSD-Protection\",\n    \"BSD-Source-Code\",\n    \"BSL-1.0\",\n    \"BUSL-1.1\",\n    \"Baekmuk\",\n    \"Bahyph\",\n    \"Barr\",\n    \"Beerware\",\n    \"BitTorrent-1.0\",\n    \"BitTorrent-1.1\",\n    \"Bitstream-Charter\",\n    \"Bitstream-Vera\",\n    \"BlueOak-1.0.0\",\n    \"Borceux\",\n    \"Brian-Gladman-3-Clause\",\n    \"C-UDA-1.0\",\n    \"CAL-1.0\",\n    \"CAL-1.0-Combined-Work-Exception\",\n    \"CATOSL-1.1\",\n    \"CC-BY-1.0\",\n    \"CC-BY-2.0\",\n    \"CC-BY-2.5\",\n    \"CC-BY-2.5-AU\",\n    \"CC-BY-3.0\",\n    \"CC-BY-3.0-AT\",\n    \"CC-BY-3.0-DE\",\n    \"CC-BY-3.0-IGO\",\n    \"CC-BY-3.0-NL\",\n    \"CC-BY-3.0-US\",\n    \"CC-BY-4.0\",\n    \"CC-BY-NC-1.0\",\n    \"CC-BY-NC-2.0\",\n    \"CC-BY-NC-2.5\",\n    \"CC-BY-NC-3.0\",\n    \"CC-BY-NC-3.0-DE\",\n    \"CC-BY-NC-4.0\",\n    \"CC-BY-NC-ND-1.0\",\n    \"CC-BY-NC-ND-2.0\",\n    \"CC-BY-NC-ND-2.5\",\n    \"CC-BY-NC-ND-3.0\",\n    \"CC-BY-NC-ND-3.0-DE\",\n    \"CC-BY-NC-ND-3.0-IGO\",\n    \"CC-BY-NC-ND-4.0\",\n    \"CC-BY-NC-SA-1.0\",\n    \"CC-BY-NC-SA-2.0\",\n    \"CC-BY-NC-SA-2.0-DE\",\n    \"CC-BY-NC-SA-2.0-FR\",\n    \"CC-BY-NC-SA-2.0-UK\",\n    \"CC-BY-NC-SA-2.5\",\n    \"CC-BY-NC-SA-3.0\",\n    \"CC-BY-NC-SA-3.0-DE\",\n    \"CC-BY-NC-SA-3.0-IGO\",\n    \"CC-BY-NC-SA-4.0\",\n    \"CC-BY-ND-1.0\",\n    \"CC-BY-ND-2.0\",\n    \"CC-BY-ND-2.5\",\n    \"CC-BY-ND-3.0\",\n    \"CC-BY-ND-3.0-DE\",\n    \"CC-BY-ND-4.0\",\n    \"CC-BY-SA-1.0\",\n    \"CC-BY-SA-2.0\",\n    \"CC-BY-SA-2.0-UK\",\n    \"CC-BY-SA-2.1-JP\",\n    \"CC-BY-SA-2.5\",\n    \"CC-BY-SA-3.0\",\n    \"CC-BY-SA-3.0-AT\",\n    \"CC-BY-SA-3.0-DE\",\n    \"CC-BY-SA-4.0\",\n    \"CC-PDDC\",\n    \"CC0-1.0\",\n    \"CDDL-1.0\",\n    \"CDDL-1.1\",\n    \"CDL-1.0\",\n    \"CDLA-Permissive-1.0\",\n    \"CDLA-Permissive-2.0\",\n    \"CDLA-Sharing-1.0\",\n    \"CECILL-1.0\",\n    \"CECILL-1.1\",\n    \"CECILL-2.0\",\n    \"CECILL-2.1\",\n    \"CECILL-B\",\n    \"CECILL-C\",\n    \"CERN-OHL-1.1\",\n    \"CERN-OHL-1.2\",\n    \"CERN-OHL-P-2.0\",\n    \"CERN-OHL-S-2.0\",\n    \"CERN-OHL-W-2.0\",\n    \"CFITSIO\",\n    \"CMU-Mach\",\n    \"CNRI-Jython\",\n    \"CNRI-Python\",\n    \"CNRI-Python-GPL-Compatible\",\n    \"COIL-1.0\",\n    \"CPAL-1.0\",\n    \"CPL-1.0\",\n    \"CPOL-1.02\",\n    \"CUA-OPL-1.0\",\n    \"Caldera\",\n    \"ClArtistic\",\n    \"Clips\",\n    \"Community-Spec-1.0\",\n    \"Condor-1.1\",\n    \"Cornell-Lossless-JPEG\",\n    \"Crossword\",\n    \"CrystalStacker\",\n    \"Cube\",\n    \"D-FSL-1.0\",\n    \"DL-DE-BY-2.0\",\n    \"DOC\",\n    \"DRL-1.0\",\n    \"DSDP\",\n    \"Dotseqn\",\n    \"ECL-1.0\",\n    \"ECL-2.0\",\n    \"EFL-1.0\",\n    \"EFL-2.0\",\n    \"EPICS\",\n    \"EPL-1.0\",\n    \"EPL-2.0\",\n    \"EUDatagrid\",\n    \"EUPL-1.0\",\n    \"EUPL-1.1\",\n    \"EUPL-1.2\",\n    \"Elastic-2.0\",\n    \"Entessa\",\n    \"ErlPL-1.1\",\n    \"Eurosym\",\n    \"FDK-AAC\",\n    \"FSFAP\",\n    \"FSFUL\",\n    \"FSFULLR\",\n    \"FSFULLRWD\",\n    \"FTL\",\n    \"Fair\",\n    \"Frameworx-1.0\",\n    \"FreeBSD-DOC\",\n    \"FreeImage\",\n    \"GD\",\n    \"GFDL-1.1-invariants-only\",\n    \"GFDL-1.1-invariants-or-later\",\n    \"GFDL-1.1-no-invariants-only\",\n    \"GFDL-1.1-no-invariants-or-later\",\n    \"GFDL-1.1-only\",\n    \"GFDL-1.1-or-later\",\n    \"GFDL-1.2-invariants-only\",\n    \"GFDL-1.2-invariants-or-later\",\n    \"GFDL-1.2-no-invariants-only\",\n    \"GFDL-1.2-no-invariants-or-later\",\n    \"GFDL-1.2-only\",\n    \"GFDL-1.2-or-later\",\n    \"GFDL-1.3-invariants-only\",\n    \"GFDL-1.3-invariants-or-later\",\n    \"GFDL-1.3-no-invariants-only\",\n    \"GFDL-1.3-no-invariants-or-later\",\n    \"GFDL-1.3-only\",\n    \"GFDL-1.3-or-later\",\n    \"GL2PS\",\n    \"GLWTPL\",\n    \"GPL-1.0-only\",\n    \"GPL-1.0-or-later\",\n    \"GPL-2.0-only\",\n    \"GPL-2.0-or-later\",\n    \"GPL-3.0-only\",\n    \"GPL-3.0-or-later\",\n    \"Giftware\",\n    \"Glide\",\n    \"Glulxe\",\n    \"Graphics-Gems\",\n    \"HP-1986\",\n    \"HPND\",\n    \"HPND-Markus-Kuhn\",\n    \"HPND-export-US\",\n    \"HPND-sell-variant\",\n    \"HPND-sell-variant-MIT-disclaimer\",\n    \"HTMLTIDY\",\n    \"HaskellReport\",\n    \"Hippocratic-2.1\",\n    \"IBM-pibs\",\n    \"ICU\",\n    \"IEC-Code-Components-EULA\",\n    \"IJG\",\n    \"IJG-short\",\n    \"IPA\",\n    \"IPL-1.0\",\n    \"ISC\",\n    \"ImageMagick\",\n    \"Imlib2\",\n    \"Info-ZIP\",\n    \"Intel\",\n    \"Intel-ACPI\",\n    \"Interbase-1.0\",\n    \"JPL-image\",\n    \"JPNIC\",\n    \"JSON\",\n    \"Jam\",\n    \"JasPer-2.0\",\n    \"Kazlib\",\n    \"Knuth-CTAN\",\n    \"LAL-1.2\",\n    \"LAL-1.3\",\n    \"LGPL-2.0-only\",\n    \"LGPL-2.0-or-later\",\n    \"LGPL-2.1-only\",\n    \"LGPL-2.1-or-later\",\n    \"LGPL-3.0-only\",\n    \"LGPL-3.0-or-later\",\n    \"LGPLLR\",\n    \"LOOP\",\n    \"LPL-1.0\",\n    \"LPL-1.02\",\n    \"LPPL-1.0\",\n    \"LPPL-1.1\",\n    \"LPPL-1.2\",\n    \"LPPL-1.3a\",\n    \"LPPL-1.3c\",\n    \"LZMA-SDK-9.11-to-9.20\",\n    \"LZMA-SDK-9.22\",\n    \"Latex2e\",\n    \"Leptonica\",\n    \"LiLiQ-P-1.1\",\n    \"LiLiQ-R-1.1\",\n    \"LiLiQ-Rplus-1.1\",\n    \"Libpng\",\n    \"Linux-OpenIB\",\n    \"Linux-man-pages-copyleft\",\n    \"MIT\",\n    \"MIT-0\",\n    \"MIT-CMU\",\n    \"MIT-Modern-Variant\",\n    \"MIT-Wu\",\n    \"MIT-advertising\",\n    \"MIT-enna\",\n    \"MIT-feh\",\n    \"MIT-open-group\",\n    \"MITNFA\",\n    \"MPL-1.0\",\n    \"MPL-1.1\",\n    \"MPL-2.0\",\n    \"MPL-2.0-no-copyleft-exception\",\n    \"MS-LPL\",\n    \"MS-PL\",\n    \"MS-RL\",\n    \"MTLL\",\n    \"MakeIndex\",\n    \"Martin-Birgmeier\",\n    \"Minpack\",\n    \"MirOS\",\n    \"Motosoto\",\n    \"MulanPSL-1.0\",\n    \"MulanPSL-2.0\",\n    \"Multics\",\n    \"Mup\",\n    \"NAIST-2003\",\n    \"NASA-1.3\",\n    \"NBPL-1.0\",\n    \"NCGL-UK-2.0\",\n    \"NCSA\",\n    \"NGPL\",\n    \"NICTA-1.0\",\n    \"NIST-PD\",\n    \"NIST-PD-fallback\",\n    \"NLOD-1.0\",\n    \"NLOD-2.0\",\n    \"NLPL\",\n    \"NOSL\",\n    \"NPL-1.0\",\n    \"NPL-1.1\",\n    \"NPOSL-3.0\",\n    \"NRL\",\n    \"NTP\",\n    \"NTP-0\",\n    \"Naumen\",\n    \"Net-SNMP\",\n    \"NetCDF\",\n    \"Newsletr\",\n    \"Nokia\",\n    \"Noweb\",\n    \"O-UDA-1.0\",\n    \"OCCT-PL\",\n    \"OCLC-2.0\",\n    \"ODC-By-1.0\",\n    \"ODbL-1.0\",\n    \"OFFIS\",\n    \"OFL-1.0\",\n    \"OFL-1.0-RFN\",\n    \"OFL-1.0-no-RFN\",\n    \"OFL-1.1\",\n    \"OFL-1.1-RFN\",\n    \"OFL-1.1-no-RFN\",\n    \"OGC-1.0\",\n    \"OGDL-Taiwan-1.0\",\n    \"OGL-Canada-2.0\",\n    \"OGL-UK-1.0\",\n    \"OGL-UK-2.0\",\n    \"OGL-UK-3.0\",\n    \"OGTSL\",\n    \"OLDAP-1.1\",\n    \"OLDAP-1.2\",\n    \"OLDAP-1.3\",\n    \"OLDAP-1.4\",\n    \"OLDAP-2.0\",\n    \"OLDAP-2.0.1\",\n    \"OLDAP-2.1\",\n    \"OLDAP-2.2\",\n    \"OLDAP-2.2.1\",\n    \"OLDAP-2.2.2\",\n    \"OLDAP-2.3\",\n    \"OLDAP-2.4\",\n    \"OLDAP-2.5\",\n    \"OLDAP-2.6\",\n    \"OLDAP-2.7\",\n    \"OLDAP-2.8\",\n    \"OML\",\n    \"OPL-1.0\",\n    \"OPUBL-1.0\",\n    \"OSET-PL-2.1\",\n    \"OSL-1.0\",\n    \"OSL-1.1\",\n    \"OSL-2.0\",\n    \"OSL-2.1\",\n    \"OSL-3.0\",\n    \"OpenPBS-2.3\",\n    \"OpenSSL\",\n    \"PDDL-1.0\",\n    \"PHP-3.0\",\n    \"PHP-3.01\",\n    \"PSF-2.0\",\n    \"Parity-6.0.0\",\n    \"Parity-7.0.0\",\n    \"Plexus\",\n    \"PolyForm-Noncommercial-1.0.0\",\n    \"PolyForm-Small-Business-1.0.0\",\n    \"PostgreSQL\",\n    \"Python-2.0\",\n    \"Python-2.0.1\",\n    \"QPL-1.0\",\n    \"QPL-1.0-INRIA-2004\",\n    \"Qhull\",\n    \"RHeCos-1.1\",\n    \"RPL-1.1\",\n    \"RPL-1.5\",\n    \"RPSL-1.0\",\n    \"RSA-MD\",\n    \"RSCPL\",\n    \"Rdisc\",\n    \"Ruby\",\n    \"SAX-PD\",\n    \"SCEA\",\n    \"SGI-B-1.0\",\n    \"SGI-B-1.1\",\n    \"SGI-B-2.0\",\n    \"SHL-0.5\",\n    \"SHL-0.51\",\n    \"SISSL\",\n    \"SISSL-1.2\",\n    \"SMLNJ\",\n    \"SMPPL\",\n    \"SNIA\",\n    \"SPL-1.0\",\n    \"SSH-OpenSSH\",\n    \"SSH-short\",\n    \"SSPL-1.0\",\n    \"SWL\",\n    \"Saxpath\",\n    \"SchemeReport\",\n    \"Sendmail\",\n    \"Sendmail-8.23\",\n    \"SimPL-2.0\",\n    \"Sleepycat\",\n    \"Spencer-86\",\n    \"Spencer-94\",\n    \"Spencer-99\",\n    \"SugarCRM-1.1.3\",\n    \"SunPro\",\n    \"Symlinks\",\n    \"TAPR-OHL-1.0\",\n    \"TCL\",\n    \"TCP-wrappers\",\n    \"TMate\",\n    \"TORQUE-1.1\",\n    \"TOSL\",\n    \"TPDL\",\n    \"TPL-1.0\",\n    \"TTWL\",\n    \"TU-Berlin-1.0\",\n    \"TU-Berlin-2.0\",\n    \"UCAR\",\n    \"UCL-1.0\",\n    \"UPL-1.0\",\n    \"Unicode-DFS-2015\",\n    \"Unicode-DFS-2016\",\n    \"Unicode-TOU\",\n    \"Unlicense\",\n    \"VOSTROM\",\n    \"VSL-1.0\",\n    \"Vim\",\n    \"W3C\",\n    \"W3C-19980720\",\n    \"W3C-20150513\",\n    \"WTFPL\",\n    \"Watcom-1.0\",\n    \"Wsuipa\",\n    \"X11\",\n    \"X11-distribute-modifications-variant\",\n    \"XFree86-1.1\",\n    \"XSkat\",\n    \"Xerox\",\n    \"Xnet\",\n    \"YPL-1.0\",\n    \"YPL-1.1\",\n    \"ZPL-1.1\",\n    \"ZPL-2.0\",\n    \"ZPL-2.1\",\n    \"Zed\",\n    \"Zend-2.0\",\n    \"Zimbra-1.3\",\n    \"Zimbra-1.4\",\n    \"Zlib\",\n    \"blessing\",\n    \"bzip2-1.0.6\",\n    \"checkmk\",\n    \"copyleft-next-0.3.0\",\n    \"copyleft-next-0.3.1\",\n    \"curl\",\n    \"diffmark\",\n    \"dvipdfm\",\n    \"eGenix\",\n    \"etalab-2.0\",\n    \"gSOAP-1.3b\",\n    \"gnuplot\",\n    \"iMatix\",\n    \"libpng-2.0\",\n    \"libselinux-1.0\",\n    \"libtiff\",\n    \"libutil-David-Nugent\",\n    \"mpi-permissive\",\n    \"mpich2\",\n    \"mplus\",\n    \"psfrag\",\n    \"psutils\",\n    \"snprintf\",\n    \"w3m\",\n    \"xinetd\",\n    \"xlock\",\n    \"xpp\",\n    \"zlib-acknowledgement\"\n  ];\n});\n\n// node_modules/spdx-license-ids/deprecated.json\nvar require_deprecated = __commonJS((exports, module) => {\n  module.exports = [\n    \"AGPL-1.0\",\n    \"AGPL-3.0\",\n    \"BSD-2-Clause-FreeBSD\",\n    \"BSD-2-Clause-NetBSD\",\n    \"GFDL-1.1\",\n    \"GFDL-1.2\",\n    \"GFDL-1.3\",\n    \"GPL-1.0\",\n    \"GPL-2.0\",\n    \"GPL-2.0-with-GCC-exception\",\n    \"GPL-2.0-with-autoconf-exception\",\n    \"GPL-2.0-with-bison-exception\",\n    \"GPL-2.0-with-classpath-exception\",\n    \"GPL-2.0-with-font-exception\",\n    \"GPL-3.0\",\n    \"GPL-3.0-with-GCC-exception\",\n    \"GPL-3.0-with-autoconf-exception\",\n    \"LGPL-2.0\",\n    \"LGPL-2.1\",\n    \"LGPL-3.0\",\n    \"Nunit\",\n    \"StandardML-NJ\",\n    \"bzip2-1.0.5\",\n    \"eCos-2.0\",\n    \"wxWindows\"\n  ];\n});\n\n// node_modules/spdx-exceptions/index.json\nvar require_spdx_exceptions = __commonJS((exports, module) => {\n  module.exports = [\n    \"389-exception\",\n    \"Autoconf-exception-2.0\",\n    \"Autoconf-exception-3.0\",\n    \"Bison-exception-2.2\",\n    \"Bootloader-exception\",\n    \"Classpath-exception-2.0\",\n    \"CLISP-exception-2.0\",\n    \"DigiRule-FOSS-exception\",\n    \"eCos-exception-2.0\",\n    \"Fawkes-Runtime-exception\",\n    \"FLTK-exception\",\n    \"Font-exception-2.0\",\n    \"freertos-exception-2.0\",\n    \"GCC-exception-2.0\",\n    \"GCC-exception-3.1\",\n    \"gnu-javamail-exception\",\n    \"GPL-3.0-linking-exception\",\n    \"GPL-3.0-linking-source-exception\",\n    \"GPL-CC-1.0\",\n    \"i2p-gpl-java-exception\",\n    \"Libtool-exception\",\n    \"Linux-syscall-note\",\n    \"LLVM-exception\",\n    \"LZMA-exception\",\n    \"mif-exception\",\n    \"Nokia-Qt-exception-1.1\",\n    \"OCaml-LGPL-linking-exception\",\n    \"OCCT-exception-1.0\",\n    \"OpenJDK-assembly-exception-1.0\",\n    \"openvpn-openssl-exception\",\n    \"PS-or-PDF-font-exception-20170817\",\n    \"Qt-GPL-exception-1.0\",\n    \"Qt-LGPL-exception-1.1\",\n    \"Qwt-exception-1.0\",\n    \"Swift-exception\",\n    \"u-boot-exception-2.0\",\n    \"Universal-FOSS-exception-1.0\",\n    \"WxWindows-exception-3.1\"\n  ];\n});\n\n// node_modules/spdx-expression-parse/scan.js\nvar require_scan = __commonJS((exports, module) => {\n  var licenses = [].concat(require_spdx_license_ids()).concat(require_deprecated());\n  var exceptions = require_spdx_exceptions();\n  module.exports = function(source) {\n    var index = 0;\n    function hasMore() {\n      return index < source.length;\n    }\n    function read(value) {\n      if (value instanceof RegExp) {\n        var chars = source.slice(index);\n        var match = chars.match(value);\n        if (match) {\n          index += match[0].length;\n          return match[0];\n        }\n      } else {\n        if (source.indexOf(value, index) === index) {\n          index += value.length;\n          return value;\n        }\n      }\n    }\n    function skipWhitespace() {\n      read(/[ ]*/);\n    }\n    function operator() {\n      var string;\n      var possibilities = [\"WITH\", \"AND\", \"OR\", \"(\", \")\", \":\", \"+\"];\n      for (var i = 0;i < possibilities.length; i++) {\n        string = read(possibilities[i]);\n        if (string) {\n          break;\n        }\n      }\n      if (string === \"+\" && index > 1 && source[index - 2] === \" \") {\n        throw new Error(\"Space before `+`\");\n      }\n      return string && {\n        type: \"OPERATOR\",\n        string\n      };\n    }\n    function idstring() {\n      return read(/[A-Za-z0-9-.]+/);\n    }\n    function expectIdstring() {\n      var string = idstring();\n      if (!string) {\n        throw new Error(\"Expected idstring at offset \" + index);\n      }\n      return string;\n    }\n    function documentRef() {\n      if (read(\"DocumentRef-\")) {\n        var string = expectIdstring();\n        return { type: \"DOCUMENTREF\", string };\n      }\n    }\n    function licenseRef() {\n      if (read(\"LicenseRef-\")) {\n        var string = expectIdstring();\n        return { type: \"LICENSEREF\", string };\n      }\n    }\n    function identifier() {\n      var begin = index;\n      var string = idstring();\n      if (licenses.indexOf(string) !== -1) {\n        return {\n          type: \"LICENSE\",\n          string\n        };\n      } else if (exceptions.indexOf(string) !== -1) {\n        return {\n          type: \"EXCEPTION\",\n          string\n        };\n      }\n      index = begin;\n    }\n    function parseToken() {\n      return operator() || documentRef() || licenseRef() || identifier();\n    }\n    var tokens = [];\n    while (hasMore()) {\n      skipWhitespace();\n      if (!hasMore()) {\n        break;\n      }\n      var token = parseToken();\n      if (!token) {\n        throw new Error(\"Unexpected `\" + source[index] + \"` at offset \" + index);\n      }\n      tokens.push(token);\n    }\n    return tokens;\n  };\n});\n\n// node_modules/spdx-expression-parse/parse.js\nvar require_parse2 = __commonJS((exports, module) => {\n  module.exports = function(tokens) {\n    var index = 0;\n    function hasMore() {\n      return index < tokens.length;\n    }\n    function token() {\n      return hasMore() ? tokens[index] : null;\n    }\n    function next() {\n      if (!hasMore()) {\n        throw new Error;\n      }\n      index++;\n    }\n    function parseOperator(operator) {\n      var t = token();\n      if (t && t.type === \"OPERATOR\" && operator === t.string) {\n        next();\n        return t.string;\n      }\n    }\n    function parseWith() {\n      if (parseOperator(\"WITH\")) {\n        var t = token();\n        if (t && t.type === \"EXCEPTION\") {\n          next();\n          return t.string;\n        }\n        throw new Error(\"Expected exception after `WITH`\");\n      }\n    }\n    function parseLicenseRef() {\n      var begin = index;\n      var string = \"\";\n      var t = token();\n      if (t.type === \"DOCUMENTREF\") {\n        next();\n        string += \"DocumentRef-\" + t.string + \":\";\n        if (!parseOperator(\":\")) {\n          throw new Error(\"Expected `:` after `DocumentRef-...`\");\n        }\n      }\n      t = token();\n      if (t.type === \"LICENSEREF\") {\n        next();\n        string += \"LicenseRef-\" + t.string;\n        return { license: string };\n      }\n      index = begin;\n    }\n    function parseLicense() {\n      var t = token();\n      if (t && t.type === \"LICENSE\") {\n        next();\n        var node2 = { license: t.string };\n        if (parseOperator(\"+\")) {\n          node2.plus = true;\n        }\n        var exception = parseWith();\n        if (exception) {\n          node2.exception = exception;\n        }\n        return node2;\n      }\n    }\n    function parseParenthesizedExpression() {\n      var left = parseOperator(\"(\");\n      if (!left) {\n        return;\n      }\n      var expr = parseExpression();\n      if (!parseOperator(\")\")) {\n        throw new Error(\"Expected `)`\");\n      }\n      return expr;\n    }\n    function parseAtom() {\n      return parseParenthesizedExpression() || parseLicenseRef() || parseLicense();\n    }\n    function makeBinaryOpParser(operator, nextParser) {\n      return function parseBinaryOp() {\n        var left = nextParser();\n        if (!left) {\n          return;\n        }\n        if (!parseOperator(operator)) {\n          return left;\n        }\n        var right = parseBinaryOp();\n        if (!right) {\n          throw new Error(\"Expected expression\");\n        }\n        return {\n          left,\n          conjunction: operator.toLowerCase(),\n          right\n        };\n      };\n    }\n    var parseAnd = makeBinaryOpParser(\"AND\", parseAtom);\n    var parseExpression = makeBinaryOpParser(\"OR\", parseAnd);\n    var node = parseExpression();\n    if (!node || hasMore()) {\n      throw new Error(\"Syntax error\");\n    }\n    return node;\n  };\n});\n\n// node_modules/spdx-expression-parse/index.js\nvar require_spdx_expression_parse = __commonJS((exports, module) => {\n  var scan = require_scan();\n  var parse3 = require_parse2();\n  module.exports = function(source) {\n    return parse3(scan(source));\n  };\n});\n\n// node_modules/spdx-correct/index.js\nvar require_spdx_correct = __commonJS((exports, module) => {\n  var valid = function(string) {\n    try {\n      parse3(string);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  var sortTranspositions = function(a, b) {\n    var length = b[0].length - a[0].length;\n    if (length !== 0)\n      return length;\n    return a[0].toUpperCase().localeCompare(b[0].toUpperCase());\n  };\n  var upgradeGPLs = function(value) {\n    if ([\n      \"GPL-1.0\",\n      \"LGPL-1.0\",\n      \"AGPL-1.0\",\n      \"GPL-2.0\",\n      \"LGPL-2.0\",\n      \"AGPL-2.0\",\n      \"LGPL-2.1\"\n    ].indexOf(value) !== -1) {\n      return value + \"-only\";\n    } else if ([\n      \"GPL-1.0+\",\n      \"GPL-2.0+\",\n      \"GPL-3.0+\",\n      \"LGPL-2.0+\",\n      \"LGPL-2.1+\",\n      \"LGPL-3.0+\",\n      \"AGPL-1.0+\",\n      \"AGPL-3.0+\"\n    ].indexOf(value) !== -1) {\n      return value.replace(/\\+$/, \"-or-later\");\n    } else if ([\"GPL-3.0\", \"LGPL-3.0\", \"AGPL-3.0\"].indexOf(value) !== -1) {\n      return value + \"-or-later\";\n    } else {\n      return value;\n    }\n  };\n  var parse3 = require_spdx_expression_parse();\n  var spdxLicenseIds = require_spdx_license_ids();\n  var transpositions = [\n    [\"APGL\", \"AGPL\"],\n    [\"Gpl\", \"GPL\"],\n    [\"GLP\", \"GPL\"],\n    [\"APL\", \"Apache\"],\n    [\"ISD\", \"ISC\"],\n    [\"GLP\", \"GPL\"],\n    [\"IST\", \"ISC\"],\n    [\"Claude\", \"Clause\"],\n    [\" or later\", \"+\"],\n    [\" International\", \"\"],\n    [\"GNU\", \"GPL\"],\n    [\"GUN\", \"GPL\"],\n    [\"+\", \"\"],\n    [\"GNU GPL\", \"GPL\"],\n    [\"GNU LGPL\", \"LGPL\"],\n    [\"GNU/GPL\", \"GPL\"],\n    [\"GNU GLP\", \"GPL\"],\n    [\"GNU LESSER GENERAL PUBLIC LICENSE\", \"LGPL\"],\n    [\"GNU Lesser General Public License\", \"LGPL\"],\n    [\"GNU LESSER GENERAL PUBLIC LICENSE\", \"LGPL-2.1\"],\n    [\"GNU Lesser General Public License\", \"LGPL-2.1\"],\n    [\"LESSER GENERAL PUBLIC LICENSE\", \"LGPL\"],\n    [\"Lesser General Public License\", \"LGPL\"],\n    [\"LESSER GENERAL PUBLIC LICENSE\", \"LGPL-2.1\"],\n    [\"Lesser General Public License\", \"LGPL-2.1\"],\n    [\"GNU General Public License\", \"GPL\"],\n    [\"Gnu public license\", \"GPL\"],\n    [\"GNU Public License\", \"GPL\"],\n    [\"GNU GENERAL PUBLIC LICENSE\", \"GPL\"],\n    [\"MTI\", \"MIT\"],\n    [\"Mozilla Public License\", \"MPL\"],\n    [\"Universal Permissive License\", \"UPL\"],\n    [\"WTH\", \"WTF\"],\n    [\"WTFGPL\", \"WTFPL\"],\n    [\"-License\", \"\"]\n  ].sort(sortTranspositions);\n  var TRANSPOSED = 0;\n  var CORRECT = 1;\n  var transforms = [\n    function(argument) {\n      return argument.toUpperCase();\n    },\n    function(argument) {\n      return argument.trim();\n    },\n    function(argument) {\n      return argument.replace(/\\./g, \"\");\n    },\n    function(argument) {\n      return argument.replace(/\\s+/g, \"\");\n    },\n    function(argument) {\n      return argument.replace(/\\s+/g, \"-\");\n    },\n    function(argument) {\n      return argument.replace(\"v\", \"-\");\n    },\n    function(argument) {\n      return argument.replace(/,?\\s*(\\d)/, \"-$1\");\n    },\n    function(argument) {\n      return argument.replace(/,?\\s*(\\d)/, \"-$1.0\");\n    },\n    function(argument) {\n      return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, \"-$2\");\n    },\n    function(argument) {\n      return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, \"-$2.0\");\n    },\n    function(argument) {\n      return argument[0].toUpperCase() + argument.slice(1);\n    },\n    function(argument) {\n      return argument.replace(\"/\", \"-\");\n    },\n    function(argument) {\n      return argument.replace(/\\s*V\\s*(\\d)/, \"-$1\").replace(/(\\d)$/, \"$1.0\");\n    },\n    function(argument) {\n      if (argument.indexOf(\"3.0\") !== -1) {\n        return argument + \"-or-later\";\n      } else {\n        return argument + \"-only\";\n      }\n    },\n    function(argument) {\n      return argument + \"only\";\n    },\n    function(argument) {\n      return argument.replace(/(\\d)$/, \"-$1.0\");\n    },\n    function(argument) {\n      return argument.replace(/(-| )?(\\d)$/, \"-$2-Clause\");\n    },\n    function(argument) {\n      return argument.replace(/(-| )clause(-| )(\\d)/, \"-$3-Clause\");\n    },\n    function(argument) {\n      return argument.replace(/\\b(Modified|New|Revised)(-| )?BSD((-| )License)?/i, \"BSD-3-Clause\");\n    },\n    function(argument) {\n      return argument.replace(/\\bSimplified(-| )?BSD((-| )License)?/i, \"BSD-2-Clause\");\n    },\n    function(argument) {\n      return argument.replace(/\\b(Free|Net)(-| )?BSD((-| )License)?/i, \"BSD-2-Clause-$1BSD\");\n    },\n    function(argument) {\n      return argument.replace(/\\bClear(-| )?BSD((-| )License)?/i, \"BSD-3-Clause-Clear\");\n    },\n    function(argument) {\n      return argument.replace(/\\b(Old|Original)(-| )?BSD((-| )License)?/i, \"BSD-4-Clause\");\n    },\n    function(argument) {\n      return \"CC-\" + argument;\n    },\n    function(argument) {\n      return \"CC-\" + argument + \"-4.0\";\n    },\n    function(argument) {\n      return argument.replace(\"Attribution\", \"BY\").replace(\"NonCommercial\", \"NC\").replace(\"NoDerivatives\", \"ND\").replace(/ (\\d)/, \"-$1\").replace(/ ?International/, \"\");\n    },\n    function(argument) {\n      return \"CC-\" + argument.replace(\"Attribution\", \"BY\").replace(\"NonCommercial\", \"NC\").replace(\"NoDerivatives\", \"ND\").replace(/ (\\d)/, \"-$1\").replace(/ ?International/, \"\") + \"-4.0\";\n    }\n  ];\n  var licensesWithVersions = spdxLicenseIds.map(function(id) {\n    var match = /^(.*)-\\d+\\.\\d+$/.exec(id);\n    return match ? [match[0], match[1]] : [id, null];\n  }).reduce(function(objectMap, item) {\n    var key = item[1];\n    objectMap[key] = objectMap[key] || [];\n    objectMap[key].push(item[0]);\n    return objectMap;\n  }, {});\n  var licensesWithOneVersion = Object.keys(licensesWithVersions).map(function makeEntries(key) {\n    return [key, licensesWithVersions[key]];\n  }).filter(function identifySoleVersions(item) {\n    return item[1].length === 1 && item[0] !== null && item[0] !== \"APL\";\n  }).map(function createLastResorts(item) {\n    return [item[0], item[1][0]];\n  });\n  licensesWithVersions = undefined;\n  var lastResorts = [\n    [\"UNLI\", \"Unlicense\"],\n    [\"WTF\", \"WTFPL\"],\n    [\"2 CLAUSE\", \"BSD-2-Clause\"],\n    [\"2-CLAUSE\", \"BSD-2-Clause\"],\n    [\"3 CLAUSE\", \"BSD-3-Clause\"],\n    [\"3-CLAUSE\", \"BSD-3-Clause\"],\n    [\"AFFERO\", \"AGPL-3.0-or-later\"],\n    [\"AGPL\", \"AGPL-3.0-or-later\"],\n    [\"APACHE\", \"Apache-2.0\"],\n    [\"ARTISTIC\", \"Artistic-2.0\"],\n    [\"Affero\", \"AGPL-3.0-or-later\"],\n    [\"BEER\", \"Beerware\"],\n    [\"BOOST\", \"BSL-1.0\"],\n    [\"BSD\", \"BSD-2-Clause\"],\n    [\"CDDL\", \"CDDL-1.1\"],\n    [\"ECLIPSE\", \"EPL-1.0\"],\n    [\"FUCK\", \"WTFPL\"],\n    [\"GNU\", \"GPL-3.0-or-later\"],\n    [\"LGPL\", \"LGPL-3.0-or-later\"],\n    [\"GPLV1\", \"GPL-1.0-only\"],\n    [\"GPL-1\", \"GPL-1.0-only\"],\n    [\"GPLV2\", \"GPL-2.0-only\"],\n    [\"GPL-2\", \"GPL-2.0-only\"],\n    [\"GPL\", \"GPL-3.0-or-later\"],\n    [\"MIT +NO-FALSE-ATTRIBS\", \"MITNFA\"],\n    [\"MIT\", \"MIT\"],\n    [\"MPL\", \"MPL-2.0\"],\n    [\"X11\", \"X11\"],\n    [\"ZLIB\", \"Zlib\"]\n  ].concat(licensesWithOneVersion).sort(sortTranspositions);\n  var SUBSTRING = 0;\n  var IDENTIFIER = 1;\n  var validTransformation = function(identifier) {\n    for (var i = 0;i < transforms.length; i++) {\n      var transformed = transforms[i](identifier).trim();\n      if (transformed !== identifier && valid(transformed)) {\n        return transformed;\n      }\n    }\n    return null;\n  };\n  var validLastResort = function(identifier) {\n    var upperCased = identifier.toUpperCase();\n    for (var i = 0;i < lastResorts.length; i++) {\n      var lastResort = lastResorts[i];\n      if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {\n        return lastResort[IDENTIFIER];\n      }\n    }\n    return null;\n  };\n  var anyCorrection = function(identifier, check) {\n    for (var i = 0;i < transpositions.length; i++) {\n      var transposition = transpositions[i];\n      var transposed = transposition[TRANSPOSED];\n      if (identifier.indexOf(transposed) > -1) {\n        var corrected = identifier.replace(transposed, transposition[CORRECT]);\n        var checked = check(corrected);\n        if (checked !== null) {\n          return checked;\n        }\n      }\n    }\n    return null;\n  };\n  module.exports = function(identifier, options) {\n    options = options || {};\n    var upgrade = options.upgrade === undefined ? true : !!options.upgrade;\n    function postprocess(value) {\n      return upgrade ? upgradeGPLs(value) : value;\n    }\n    var validArugment = typeof identifier === \"string\" && identifier.trim().length !== 0;\n    if (!validArugment) {\n      throw Error(\"Invalid argument. Expected non-empty string.\");\n    }\n    identifier = identifier.trim();\n    if (valid(identifier)) {\n      return postprocess(identifier);\n    }\n    var noPlus = identifier.replace(/\\+$/, \"\").trim();\n    if (valid(noPlus)) {\n      return postprocess(noPlus);\n    }\n    var transformed = validTransformation(identifier);\n    if (transformed !== null) {\n      return postprocess(transformed);\n    }\n    transformed = anyCorrection(identifier, function(argument) {\n      if (valid(argument)) {\n        return argument;\n      }\n      return validTransformation(argument);\n    });\n    if (transformed !== null) {\n      return postprocess(transformed);\n    }\n    transformed = validLastResort(identifier);\n    if (transformed !== null) {\n      return postprocess(transformed);\n    }\n    transformed = anyCorrection(identifier, validLastResort);\n    if (transformed !== null) {\n      return postprocess(transformed);\n    }\n    return null;\n  };\n});\n\n// node_modules/validate-npm-package-license/index.js\nvar require_validate_npm_package_license = __commonJS((exports, module) => {\n  var startsWith = function(prefix, string) {\n    return string.slice(0, prefix.length) === prefix;\n  };\n  var usesLicenseRef = function(ast) {\n    if (ast.hasOwnProperty(\"license\")) {\n      var license = ast.license;\n      return startsWith(\"LicenseRef\", license) || startsWith(\"DocumentRef\", license);\n    } else {\n      return usesLicenseRef(ast.left) || usesLicenseRef(ast.right);\n    }\n  };\n  var parse3 = require_spdx_expression_parse();\n  var correct = require_spdx_correct();\n  var genericWarning = 'license should be a valid SPDX license expression (without \"LicenseRef\"), \"UNLICENSED\", or \"SEE LICENSE IN <filename>\"';\n  var fileReferenceRE = /^SEE LICEN[CS]E IN (.+)$/;\n  module.exports = function(argument) {\n    var ast;\n    try {\n      ast = parse3(argument);\n    } catch (e) {\n      var match;\n      if (argument === \"UNLICENSED\" || argument === \"UNLICENCED\") {\n        return {\n          validForOldPackages: true,\n          validForNewPackages: true,\n          unlicensed: true\n        };\n      } else if (match = fileReferenceRE.exec(argument)) {\n        return {\n          validForOldPackages: true,\n          validForNewPackages: true,\n          inFile: match[1]\n        };\n      } else {\n        var result = {\n          validForOldPackages: false,\n          validForNewPackages: false,\n          warnings: [genericWarning]\n        };\n        if (argument.trim().length !== 0) {\n          var corrected = correct(argument);\n          if (corrected) {\n            result.warnings.push('license is similar to the valid expression \"' + corrected + '\"');\n          }\n        }\n        return result;\n      }\n    }\n    if (usesLicenseRef(ast)) {\n      return {\n        validForNewPackages: false,\n        validForOldPackages: false,\n        spdx: true,\n        warnings: [genericWarning]\n      };\n    } else {\n      return {\n        validForNewPackages: true,\n        validForOldPackages: true,\n        spdx: true\n      };\n    }\n  };\n});\n\n// node_modules/hosted-git-info/node_modules/lru-cache/index.js\nvar require_lru_cache = __commonJS((exports, module) => {\n  var perf = typeof performance === \"object\" && performance && typeof performance.now === \"function\" ? performance : Date;\n  var hasAbortController = typeof AbortController === \"function\";\n  var AC = hasAbortController ? AbortController : class AbortController2 {\n    constructor() {\n      this.signal = new AS;\n    }\n    abort(reason = new Error(\"This operation was aborted\")) {\n      this.signal.reason = this.signal.reason || reason;\n      this.signal.aborted = true;\n      this.signal.dispatchEvent({\n        type: \"abort\",\n        target: this.signal\n      });\n    }\n  };\n  var hasAbortSignal = typeof AbortSignal === \"function\";\n  var hasACAbortSignal = typeof AC.AbortSignal === \"function\";\n  var AS = hasAbortSignal ? AbortSignal : hasACAbortSignal ? AC.AbortController : class AbortSignal2 {\n    constructor() {\n      this.reason = undefined;\n      this.aborted = false;\n      this._listeners = [];\n    }\n    dispatchEvent(e) {\n      if (e.type === \"abort\") {\n        this.aborted = true;\n        this.onabort(e);\n        this._listeners.forEach((f) => f(e), this);\n      }\n    }\n    onabort() {\n    }\n    addEventListener(ev, fn) {\n      if (ev === \"abort\") {\n        this._listeners.push(fn);\n      }\n    }\n    removeEventListener(ev, fn) {\n      if (ev === \"abort\") {\n        this._listeners = this._listeners.filter((f) => f !== fn);\n      }\n    }\n  };\n  var warned = new Set;\n  var deprecatedOption = (opt, instead) => {\n    const code = `LRU_CACHE_OPTION_${opt}`;\n    if (shouldWarn(code)) {\n      warn(code, `${opt} option`, `options.${instead}`, LRUCache);\n    }\n  };\n  var deprecatedMethod = (method, instead) => {\n    const code = `LRU_CACHE_METHOD_${method}`;\n    if (shouldWarn(code)) {\n      const { prototype } = LRUCache;\n      const { get } = Object.getOwnPropertyDescriptor(prototype, method);\n      warn(code, `${method} method`, `cache.${instead}()`, get);\n    }\n  };\n  var deprecatedProperty = (field, instead) => {\n    const code = `LRU_CACHE_PROPERTY_${field}`;\n    if (shouldWarn(code)) {\n      const { prototype } = LRUCache;\n      const { get } = Object.getOwnPropertyDescriptor(prototype, field);\n      warn(code, `${field} property`, `cache.${instead}`, get);\n    }\n  };\n  var emitWarning = (...a) => {\n    typeof process === \"object\" && process && typeof process.emitWarning === \"function\" ? process.emitWarning(...a) : console.error(...a);\n  };\n  var shouldWarn = (code) => !warned.has(code);\n  var warn = (code, what, instead, fn) => {\n    warned.add(code);\n    const msg = `The ${what} is deprecated. Please use ${instead} instead.`;\n    emitWarning(msg, \"DeprecationWarning\", code, fn);\n  };\n  var isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n  var getUintArray = (max) => !isPosInt(max) ? null : max <= Math.pow(2, 8) ? Uint8Array : max <= Math.pow(2, 16) ? Uint16Array : max <= Math.pow(2, 32) ? Uint32Array : max <= Number.MAX_SAFE_INTEGER ? ZeroArray : null;\n\n  class ZeroArray extends Array {\n    constructor(size) {\n      super(size);\n      this.fill(0);\n    }\n  }\n\n  class Stack {\n    constructor(max) {\n      if (max === 0) {\n        return [];\n      }\n      const UintArray = getUintArray(max);\n      this.heap = new UintArray(max);\n      this.length = 0;\n    }\n    push(n) {\n      this.heap[this.length++] = n;\n    }\n    pop() {\n      return this.heap[--this.length];\n    }\n  }\n\n  class LRUCache {\n    constructor(options = {}) {\n      const {\n        max = 0,\n        ttl,\n        ttlResolution = 1,\n        ttlAutopurge,\n        updateAgeOnGet,\n        updateAgeOnHas,\n        allowStale,\n        dispose,\n        disposeAfter,\n        noDisposeOnSet,\n        noUpdateTTL,\n        maxSize = 0,\n        maxEntrySize = 0,\n        sizeCalculation,\n        fetchMethod,\n        fetchContext,\n        noDeleteOnFetchRejection,\n        noDeleteOnStaleGet,\n        allowStaleOnFetchRejection,\n        allowStaleOnFetchAbort,\n        ignoreFetchAbort\n      } = options;\n      const { length, maxAge, stale } = options instanceof LRUCache ? {} : options;\n      if (max !== 0 && !isPosInt(max)) {\n        throw new TypeError(\"max option must be a nonnegative integer\");\n      }\n      const UintArray = max ? getUintArray(max) : Array;\n      if (!UintArray) {\n        throw new Error(\"invalid max value: \" + max);\n      }\n      this.max = max;\n      this.maxSize = maxSize;\n      this.maxEntrySize = maxEntrySize || this.maxSize;\n      this.sizeCalculation = sizeCalculation || length;\n      if (this.sizeCalculation) {\n        if (!this.maxSize && !this.maxEntrySize) {\n          throw new TypeError(\"cannot set sizeCalculation without setting maxSize or maxEntrySize\");\n        }\n        if (typeof this.sizeCalculation !== \"function\") {\n          throw new TypeError(\"sizeCalculation set to non-function\");\n        }\n      }\n      this.fetchMethod = fetchMethod || null;\n      if (this.fetchMethod && typeof this.fetchMethod !== \"function\") {\n        throw new TypeError(\"fetchMethod must be a function if specified\");\n      }\n      this.fetchContext = fetchContext;\n      if (!this.fetchMethod && fetchContext !== undefined) {\n        throw new TypeError(\"cannot set fetchContext without fetchMethod\");\n      }\n      this.keyMap = new Map;\n      this.keyList = new Array(max).fill(null);\n      this.valList = new Array(max).fill(null);\n      this.next = new UintArray(max);\n      this.prev = new UintArray(max);\n      this.head = 0;\n      this.tail = 0;\n      this.free = new Stack(max);\n      this.initialFill = 1;\n      this.size = 0;\n      if (typeof dispose === \"function\") {\n        this.dispose = dispose;\n      }\n      if (typeof disposeAfter === \"function\") {\n        this.disposeAfter = disposeAfter;\n        this.disposed = [];\n      } else {\n        this.disposeAfter = null;\n        this.disposed = null;\n      }\n      this.noDisposeOnSet = !!noDisposeOnSet;\n      this.noUpdateTTL = !!noUpdateTTL;\n      this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n      this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n      this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n      this.ignoreFetchAbort = !!ignoreFetchAbort;\n      if (this.maxEntrySize !== 0) {\n        if (this.maxSize !== 0) {\n          if (!isPosInt(this.maxSize)) {\n            throw new TypeError(\"maxSize must be a positive integer if specified\");\n          }\n        }\n        if (!isPosInt(this.maxEntrySize)) {\n          throw new TypeError(\"maxEntrySize must be a positive integer if specified\");\n        }\n        this.initializeSizeTracking();\n      }\n      this.allowStale = !!allowStale || !!stale;\n      this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n      this.updateAgeOnGet = !!updateAgeOnGet;\n      this.updateAgeOnHas = !!updateAgeOnHas;\n      this.ttlResolution = isPosInt(ttlResolution) || ttlResolution === 0 ? ttlResolution : 1;\n      this.ttlAutopurge = !!ttlAutopurge;\n      this.ttl = ttl || maxAge || 0;\n      if (this.ttl) {\n        if (!isPosInt(this.ttl)) {\n          throw new TypeError(\"ttl must be a positive integer if specified\");\n        }\n        this.initializeTTLTracking();\n      }\n      if (this.max === 0 && this.ttl === 0 && this.maxSize === 0) {\n        throw new TypeError(\"At least one of max, maxSize, or ttl is required\");\n      }\n      if (!this.ttlAutopurge && !this.max && !this.maxSize) {\n        const code = \"LRU_CACHE_UNBOUNDED\";\n        if (shouldWarn(code)) {\n          warned.add(code);\n          const msg = \"TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.\";\n          emitWarning(msg, \"UnboundedCacheWarning\", code, LRUCache);\n        }\n      }\n      if (stale) {\n        deprecatedOption(\"stale\", \"allowStale\");\n      }\n      if (maxAge) {\n        deprecatedOption(\"maxAge\", \"ttl\");\n      }\n      if (length) {\n        deprecatedOption(\"length\", \"sizeCalculation\");\n      }\n    }\n    getRemainingTTL(key) {\n      return this.has(key, { updateAgeOnHas: false }) ? Infinity : 0;\n    }\n    initializeTTLTracking() {\n      this.ttls = new ZeroArray(this.max);\n      this.starts = new ZeroArray(this.max);\n      this.setItemTTL = (index, ttl, start = perf.now()) => {\n        this.starts[index] = ttl !== 0 ? start : 0;\n        this.ttls[index] = ttl;\n        if (ttl !== 0 && this.ttlAutopurge) {\n          const t = setTimeout(() => {\n            if (this.isStale(index)) {\n              this.delete(this.keyList[index]);\n            }\n          }, ttl + 1);\n          if (t.unref) {\n            t.unref();\n          }\n        }\n      };\n      this.updateItemAge = (index) => {\n        this.starts[index] = this.ttls[index] !== 0 ? perf.now() : 0;\n      };\n      this.statusTTL = (status, index) => {\n        if (status) {\n          status.ttl = this.ttls[index];\n          status.start = this.starts[index];\n          status.now = cachedNow || getNow();\n          status.remainingTTL = status.now + status.ttl - status.start;\n        }\n      };\n      let cachedNow = 0;\n      const getNow = () => {\n        const n = perf.now();\n        if (this.ttlResolution > 0) {\n          cachedNow = n;\n          const t = setTimeout(() => cachedNow = 0, this.ttlResolution);\n          if (t.unref) {\n            t.unref();\n          }\n        }\n        return n;\n      };\n      this.getRemainingTTL = (key) => {\n        const index = this.keyMap.get(key);\n        if (index === undefined) {\n          return 0;\n        }\n        return this.ttls[index] === 0 || this.starts[index] === 0 ? Infinity : this.starts[index] + this.ttls[index] - (cachedNow || getNow());\n      };\n      this.isStale = (index) => {\n        return this.ttls[index] !== 0 && this.starts[index] !== 0 && (cachedNow || getNow()) - this.starts[index] > this.ttls[index];\n      };\n    }\n    updateItemAge(_index) {\n    }\n    statusTTL(_status, _index) {\n    }\n    setItemTTL(_index, _ttl, _start) {\n    }\n    isStale(_index) {\n      return false;\n    }\n    initializeSizeTracking() {\n      this.calculatedSize = 0;\n      this.sizes = new ZeroArray(this.max);\n      this.removeItemSize = (index) => {\n        this.calculatedSize -= this.sizes[index];\n        this.sizes[index] = 0;\n      };\n      this.requireSize = (k, v, size, sizeCalculation) => {\n        if (this.isBackgroundFetch(v)) {\n          return 0;\n        }\n        if (!isPosInt(size)) {\n          if (sizeCalculation) {\n            if (typeof sizeCalculation !== \"function\") {\n              throw new TypeError(\"sizeCalculation must be a function\");\n            }\n            size = sizeCalculation(v, k);\n            if (!isPosInt(size)) {\n              throw new TypeError(\"sizeCalculation return invalid (expect positive integer)\");\n            }\n          } else {\n            throw new TypeError(\"invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.\");\n          }\n        }\n        return size;\n      };\n      this.addItemSize = (index, size, status) => {\n        this.sizes[index] = size;\n        if (this.maxSize) {\n          const maxSize = this.maxSize - this.sizes[index];\n          while (this.calculatedSize > maxSize) {\n            this.evict(true);\n          }\n        }\n        this.calculatedSize += this.sizes[index];\n        if (status) {\n          status.entrySize = size;\n          status.totalCalculatedSize = this.calculatedSize;\n        }\n      };\n    }\n    removeItemSize(_index) {\n    }\n    addItemSize(_index, _size) {\n    }\n    requireSize(_k, _v, size, sizeCalculation) {\n      if (size || sizeCalculation) {\n        throw new TypeError(\"cannot set size without setting maxSize or maxEntrySize on cache\");\n      }\n    }\n    *indexes({ allowStale = this.allowStale } = {}) {\n      if (this.size) {\n        for (let i = this.tail;; ) {\n          if (!this.isValidIndex(i)) {\n            break;\n          }\n          if (allowStale || !this.isStale(i)) {\n            yield i;\n          }\n          if (i === this.head) {\n            break;\n          } else {\n            i = this.prev[i];\n          }\n        }\n      }\n    }\n    *rindexes({ allowStale = this.allowStale } = {}) {\n      if (this.size) {\n        for (let i = this.head;; ) {\n          if (!this.isValidIndex(i)) {\n            break;\n          }\n          if (allowStale || !this.isStale(i)) {\n            yield i;\n          }\n          if (i === this.tail) {\n            break;\n          } else {\n            i = this.next[i];\n          }\n        }\n      }\n    }\n    isValidIndex(index) {\n      return index !== undefined && this.keyMap.get(this.keyList[index]) === index;\n    }\n    *entries() {\n      for (const i of this.indexes()) {\n        if (this.valList[i] !== undefined && this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield [this.keyList[i], this.valList[i]];\n        }\n      }\n    }\n    *rentries() {\n      for (const i of this.rindexes()) {\n        if (this.valList[i] !== undefined && this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield [this.keyList[i], this.valList[i]];\n        }\n      }\n    }\n    *keys() {\n      for (const i of this.indexes()) {\n        if (this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.keyList[i];\n        }\n      }\n    }\n    *rkeys() {\n      for (const i of this.rindexes()) {\n        if (this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.keyList[i];\n        }\n      }\n    }\n    *values() {\n      for (const i of this.indexes()) {\n        if (this.valList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.valList[i];\n        }\n      }\n    }\n    *rvalues() {\n      for (const i of this.rindexes()) {\n        if (this.valList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.valList[i];\n        }\n      }\n    }\n    [Symbol.iterator]() {\n      return this.entries();\n    }\n    find(fn, getOptions) {\n      for (const i of this.indexes()) {\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        if (fn(value, this.keyList[i], this)) {\n          return this.get(this.keyList[i], getOptions);\n        }\n      }\n    }\n    forEach(fn, thisp = this) {\n      for (const i of this.indexes()) {\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        fn.call(thisp, value, this.keyList[i], this);\n      }\n    }\n    rforEach(fn, thisp = this) {\n      for (const i of this.rindexes()) {\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        fn.call(thisp, value, this.keyList[i], this);\n      }\n    }\n    get prune() {\n      deprecatedMethod(\"prune\", \"purgeStale\");\n      return this.purgeStale;\n    }\n    purgeStale() {\n      let deleted = false;\n      for (const i of this.rindexes({ allowStale: true })) {\n        if (this.isStale(i)) {\n          this.delete(this.keyList[i]);\n          deleted = true;\n        }\n      }\n      return deleted;\n    }\n    dump() {\n      const arr = [];\n      for (const i of this.indexes({ allowStale: true })) {\n        const key = this.keyList[i];\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        const entry = { value };\n        if (this.ttls) {\n          entry.ttl = this.ttls[i];\n          const age = perf.now() - this.starts[i];\n          entry.start = Math.floor(Date.now() - age);\n        }\n        if (this.sizes) {\n          entry.size = this.sizes[i];\n        }\n        arr.unshift([key, entry]);\n      }\n      return arr;\n    }\n    load(arr) {\n      this.clear();\n      for (const [key, entry] of arr) {\n        if (entry.start) {\n          const age = Date.now() - entry.start;\n          entry.start = perf.now() - age;\n        }\n        this.set(key, entry.value, entry);\n      }\n    }\n    dispose(_v, _k, _reason) {\n    }\n    set(k, v, {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      status\n    } = {}) {\n      size = this.requireSize(k, v, size, sizeCalculation);\n      if (this.maxEntrySize && size > this.maxEntrySize) {\n        if (status) {\n          status.set = \"miss\";\n          status.maxEntrySizeExceeded = true;\n        }\n        this.delete(k);\n        return this;\n      }\n      let index = this.size === 0 ? undefined : this.keyMap.get(k);\n      if (index === undefined) {\n        index = this.newIndex();\n        this.keyList[index] = k;\n        this.valList[index] = v;\n        this.keyMap.set(k, index);\n        this.next[this.tail] = index;\n        this.prev[index] = this.tail;\n        this.tail = index;\n        this.size++;\n        this.addItemSize(index, size, status);\n        if (status) {\n          status.set = \"add\";\n        }\n        noUpdateTTL = false;\n      } else {\n        this.moveToTail(index);\n        const oldVal = this.valList[index];\n        if (v !== oldVal) {\n          if (this.isBackgroundFetch(oldVal)) {\n            oldVal.__abortController.abort(new Error(\"replaced\"));\n          } else {\n            if (!noDisposeOnSet) {\n              this.dispose(oldVal, k, \"set\");\n              if (this.disposeAfter) {\n                this.disposed.push([oldVal, k, \"set\"]);\n              }\n            }\n          }\n          this.removeItemSize(index);\n          this.valList[index] = v;\n          this.addItemSize(index, size, status);\n          if (status) {\n            status.set = \"replace\";\n            const oldValue = oldVal && this.isBackgroundFetch(oldVal) ? oldVal.__staleWhileFetching : oldVal;\n            if (oldValue !== undefined)\n              status.oldValue = oldValue;\n          }\n        } else if (status) {\n          status.set = \"update\";\n        }\n      }\n      if (ttl !== 0 && this.ttl === 0 && !this.ttls) {\n        this.initializeTTLTracking();\n      }\n      if (!noUpdateTTL) {\n        this.setItemTTL(index, ttl, start);\n      }\n      this.statusTTL(status, index);\n      if (this.disposeAfter) {\n        while (this.disposed.length) {\n          this.disposeAfter(...this.disposed.shift());\n        }\n      }\n      return this;\n    }\n    newIndex() {\n      if (this.size === 0) {\n        return this.tail;\n      }\n      if (this.size === this.max && this.max !== 0) {\n        return this.evict(false);\n      }\n      if (this.free.length !== 0) {\n        return this.free.pop();\n      }\n      return this.initialFill++;\n    }\n    pop() {\n      if (this.size) {\n        const val = this.valList[this.head];\n        this.evict(true);\n        return val;\n      }\n    }\n    evict(free) {\n      const head = this.head;\n      const k = this.keyList[head];\n      const v = this.valList[head];\n      if (this.isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error(\"evicted\"));\n      } else {\n        this.dispose(v, k, \"evict\");\n        if (this.disposeAfter) {\n          this.disposed.push([v, k, \"evict\"]);\n        }\n      }\n      this.removeItemSize(head);\n      if (free) {\n        this.keyList[head] = null;\n        this.valList[head] = null;\n        this.free.push(head);\n      }\n      this.head = this.next[head];\n      this.keyMap.delete(k);\n      this.size--;\n      return head;\n    }\n    has(k, { updateAgeOnHas = this.updateAgeOnHas, status } = {}) {\n      const index = this.keyMap.get(k);\n      if (index !== undefined) {\n        if (!this.isStale(index)) {\n          if (updateAgeOnHas) {\n            this.updateItemAge(index);\n          }\n          if (status)\n            status.has = \"hit\";\n          this.statusTTL(status, index);\n          return true;\n        } else if (status) {\n          status.has = \"stale\";\n          this.statusTTL(status, index);\n        }\n      } else if (status) {\n        status.has = \"miss\";\n      }\n      return false;\n    }\n    peek(k, { allowStale = this.allowStale } = {}) {\n      const index = this.keyMap.get(k);\n      if (index !== undefined && (allowStale || !this.isStale(index))) {\n        const v = this.valList[index];\n        return this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n      }\n    }\n    backgroundFetch(k, index, options, context) {\n      const v = index === undefined ? undefined : this.valList[index];\n      if (this.isBackgroundFetch(v)) {\n        return v;\n      }\n      const ac = new AC;\n      if (options.signal) {\n        options.signal.addEventListener(\"abort\", () => ac.abort(options.signal.reason));\n      }\n      const fetchOpts = {\n        signal: ac.signal,\n        options,\n        context\n      };\n      const cb = (v2, updateCache = false) => {\n        const { aborted } = ac.signal;\n        const ignoreAbort = options.ignoreFetchAbort && v2 !== undefined;\n        if (options.status) {\n          if (aborted && !updateCache) {\n            options.status.fetchAborted = true;\n            options.status.fetchError = ac.signal.reason;\n            if (ignoreAbort)\n              options.status.fetchAbortIgnored = true;\n          } else {\n            options.status.fetchResolved = true;\n          }\n        }\n        if (aborted && !ignoreAbort && !updateCache) {\n          return fetchFail(ac.signal.reason);\n        }\n        if (this.valList[index] === p) {\n          if (v2 === undefined) {\n            if (p.__staleWhileFetching) {\n              this.valList[index] = p.__staleWhileFetching;\n            } else {\n              this.delete(k);\n            }\n          } else {\n            if (options.status)\n              options.status.fetchUpdated = true;\n            this.set(k, v2, fetchOpts.options);\n          }\n        }\n        return v2;\n      };\n      const eb = (er) => {\n        if (options.status) {\n          options.status.fetchRejected = true;\n          options.status.fetchError = er;\n        }\n        return fetchFail(er);\n      };\n      const fetchFail = (er) => {\n        const { aborted } = ac.signal;\n        const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n        const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n        const noDelete = allowStale || options.noDeleteOnFetchRejection;\n        if (this.valList[index] === p) {\n          const del = !noDelete || p.__staleWhileFetching === undefined;\n          if (del) {\n            this.delete(k);\n          } else if (!allowStaleAborted) {\n            this.valList[index] = p.__staleWhileFetching;\n          }\n        }\n        if (allowStale) {\n          if (options.status && p.__staleWhileFetching !== undefined) {\n            options.status.returnedStale = true;\n          }\n          return p.__staleWhileFetching;\n        } else if (p.__returned === p) {\n          throw er;\n        }\n      };\n      const pcall = (res, rej) => {\n        this.fetchMethod(k, v, fetchOpts).then((v2) => res(v2), rej);\n        ac.signal.addEventListener(\"abort\", () => {\n          if (!options.ignoreFetchAbort || options.allowStaleOnFetchAbort) {\n            res();\n            if (options.allowStaleOnFetchAbort) {\n              res = (v2) => cb(v2, true);\n            }\n          }\n        });\n      };\n      if (options.status)\n        options.status.fetchDispatched = true;\n      const p = new Promise(pcall).then(cb, eb);\n      p.__abortController = ac;\n      p.__staleWhileFetching = v;\n      p.__returned = null;\n      if (index === undefined) {\n        this.set(k, p, { ...fetchOpts.options, status: undefined });\n        index = this.keyMap.get(k);\n      } else {\n        this.valList[index] = p;\n      }\n      return p;\n    }\n    isBackgroundFetch(p) {\n      return p && typeof p === \"object\" && typeof p.then === \"function\" && Object.prototype.hasOwnProperty.call(p, \"__staleWhileFetching\") && Object.prototype.hasOwnProperty.call(p, \"__returned\") && (p.__returned === p || p.__returned === null);\n    }\n    async fetch(k, {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      fetchContext = this.fetchContext,\n      forceRefresh = false,\n      status,\n      signal\n    } = {}) {\n      if (!this.fetchMethod) {\n        if (status)\n          status.fetch = \"get\";\n        return this.get(k, {\n          allowStale,\n          updateAgeOnGet,\n          noDeleteOnStaleGet,\n          status\n        });\n      }\n      const options = {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        ttl,\n        noDisposeOnSet,\n        size,\n        sizeCalculation,\n        noUpdateTTL,\n        noDeleteOnFetchRejection,\n        allowStaleOnFetchRejection,\n        allowStaleOnFetchAbort,\n        ignoreFetchAbort,\n        status,\n        signal\n      };\n      let index = this.keyMap.get(k);\n      if (index === undefined) {\n        if (status)\n          status.fetch = \"miss\";\n        const p = this.backgroundFetch(k, index, options, fetchContext);\n        return p.__returned = p;\n      } else {\n        const v = this.valList[index];\n        if (this.isBackgroundFetch(v)) {\n          const stale = allowStale && v.__staleWhileFetching !== undefined;\n          if (status) {\n            status.fetch = \"inflight\";\n            if (stale)\n              status.returnedStale = true;\n          }\n          return stale ? v.__staleWhileFetching : v.__returned = v;\n        }\n        const isStale = this.isStale(index);\n        if (!forceRefresh && !isStale) {\n          if (status)\n            status.fetch = \"hit\";\n          this.moveToTail(index);\n          if (updateAgeOnGet) {\n            this.updateItemAge(index);\n          }\n          this.statusTTL(status, index);\n          return v;\n        }\n        const p = this.backgroundFetch(k, index, options, fetchContext);\n        const hasStale = p.__staleWhileFetching !== undefined;\n        const staleVal = hasStale && allowStale;\n        if (status) {\n          status.fetch = hasStale && isStale ? \"stale\" : \"refresh\";\n          if (staleVal && isStale)\n            status.returnedStale = true;\n        }\n        return staleVal ? p.__staleWhileFetching : p.__returned = p;\n      }\n    }\n    get(k, {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status\n    } = {}) {\n      const index = this.keyMap.get(k);\n      if (index !== undefined) {\n        const value = this.valList[index];\n        const fetching = this.isBackgroundFetch(value);\n        this.statusTTL(status, index);\n        if (this.isStale(index)) {\n          if (status)\n            status.get = \"stale\";\n          if (!fetching) {\n            if (!noDeleteOnStaleGet) {\n              this.delete(k);\n            }\n            if (status)\n              status.returnedStale = allowStale;\n            return allowStale ? value : undefined;\n          } else {\n            if (status) {\n              status.returnedStale = allowStale && value.__staleWhileFetching !== undefined;\n            }\n            return allowStale ? value.__staleWhileFetching : undefined;\n          }\n        } else {\n          if (status)\n            status.get = \"hit\";\n          if (fetching) {\n            return value.__staleWhileFetching;\n          }\n          this.moveToTail(index);\n          if (updateAgeOnGet) {\n            this.updateItemAge(index);\n          }\n          return value;\n        }\n      } else if (status) {\n        status.get = \"miss\";\n      }\n    }\n    connect(p, n) {\n      this.prev[n] = p;\n      this.next[p] = n;\n    }\n    moveToTail(index) {\n      if (index !== this.tail) {\n        if (index === this.head) {\n          this.head = this.next[index];\n        } else {\n          this.connect(this.prev[index], this.next[index]);\n        }\n        this.connect(this.tail, index);\n        this.tail = index;\n      }\n    }\n    get del() {\n      deprecatedMethod(\"del\", \"delete\");\n      return this.delete;\n    }\n    delete(k) {\n      let deleted = false;\n      if (this.size !== 0) {\n        const index = this.keyMap.get(k);\n        if (index !== undefined) {\n          deleted = true;\n          if (this.size === 1) {\n            this.clear();\n          } else {\n            this.removeItemSize(index);\n            const v = this.valList[index];\n            if (this.isBackgroundFetch(v)) {\n              v.__abortController.abort(new Error(\"deleted\"));\n            } else {\n              this.dispose(v, k, \"delete\");\n              if (this.disposeAfter) {\n                this.disposed.push([v, k, \"delete\"]);\n              }\n            }\n            this.keyMap.delete(k);\n            this.keyList[index] = null;\n            this.valList[index] = null;\n            if (index === this.tail) {\n              this.tail = this.prev[index];\n            } else if (index === this.head) {\n              this.head = this.next[index];\n            } else {\n              this.next[this.prev[index]] = this.next[index];\n              this.prev[this.next[index]] = this.prev[index];\n            }\n            this.size--;\n            this.free.push(index);\n          }\n        }\n      }\n      if (this.disposed) {\n        while (this.disposed.length) {\n          this.disposeAfter(...this.disposed.shift());\n        }\n      }\n      return deleted;\n    }\n    clear() {\n      for (const index of this.rindexes({ allowStale: true })) {\n        const v = this.valList[index];\n        if (this.isBackgroundFetch(v)) {\n          v.__abortController.abort(new Error(\"deleted\"));\n        } else {\n          const k = this.keyList[index];\n          this.dispose(v, k, \"delete\");\n          if (this.disposeAfter) {\n            this.disposed.push([v, k, \"delete\"]);\n          }\n        }\n      }\n      this.keyMap.clear();\n      this.valList.fill(null);\n      this.keyList.fill(null);\n      if (this.ttls) {\n        this.ttls.fill(0);\n        this.starts.fill(0);\n      }\n      if (this.sizes) {\n        this.sizes.fill(0);\n      }\n      this.head = 0;\n      this.tail = 0;\n      this.initialFill = 1;\n      this.free.length = 0;\n      this.calculatedSize = 0;\n      this.size = 0;\n      if (this.disposed) {\n        while (this.disposed.length) {\n          this.disposeAfter(...this.disposed.shift());\n        }\n      }\n    }\n    get reset() {\n      deprecatedMethod(\"reset\", \"clear\");\n      return this.clear;\n    }\n    get length() {\n      deprecatedProperty(\"length\", \"size\");\n      return this.size;\n    }\n    static get AbortController() {\n      return AC;\n    }\n    static get AbortSignal() {\n      return AS;\n    }\n  }\n  module.exports = LRUCache;\n});\n\n// node_modules/hosted-git-info/lib/hosts.js\nvar require_hosts = __commonJS((exports, module) => {\n  var maybeJoin = (...args) => args.every((arg) => arg) ? args.join(\"\") : \"\";\n  var maybeEncode = (arg) => arg ? encodeURIComponent(arg) : \"\";\n  var formatHashFragment = (f) => f.toLowerCase().replace(/^\\W+|\\/|\\W+$/g, \"\").replace(/\\W+/g, \"-\");\n  var defaults = {\n    sshtemplate: ({ domain, user, project, committish }) => `git@${domain}:${user}/${project}.git${maybeJoin(\"#\", committish)}`,\n    sshurltemplate: ({ domain, user, project, committish }) => `git+ssh://git@${domain}/${user}/${project}.git${maybeJoin(\"#\", committish)}`,\n    edittemplate: ({ domain, user, project, committish, editpath, path }) => `https://${domain}/${user}/${project}${maybeJoin(\"/\", editpath, \"/\", maybeEncode(committish || \"HEAD\"), \"/\", path)}`,\n    browsetemplate: ({ domain, user, project, committish, treepath }) => `https://${domain}/${user}/${project}${maybeJoin(\"/\", treepath, \"/\", maybeEncode(committish))}`,\n    browsetreetemplate: ({ domain, user, project, committish, treepath, path, fragment, hashformat }) => `https://${domain}/${user}/${project}/${treepath}/${maybeEncode(committish || \"HEAD\")}/${path}${maybeJoin(\"#\", hashformat(fragment || \"\"))}`,\n    browseblobtemplate: ({ domain, user, project, committish, blobpath, path, fragment, hashformat }) => `https://${domain}/${user}/${project}/${blobpath}/${maybeEncode(committish || \"HEAD\")}/${path}${maybeJoin(\"#\", hashformat(fragment || \"\"))}`,\n    docstemplate: ({ domain, user, project, treepath, committish }) => `https://${domain}/${user}/${project}${maybeJoin(\"/\", treepath, \"/\", maybeEncode(committish))}#readme`,\n    httpstemplate: ({ auth, domain, user, project, committish }) => `git+https://${maybeJoin(auth, \"@\")}${domain}/${user}/${project}.git${maybeJoin(\"#\", committish)}`,\n    filetemplate: ({ domain, user, project, committish, path }) => `https://${domain}/${user}/${project}/raw/${maybeEncode(committish || \"HEAD\")}/${path}`,\n    shortcuttemplate: ({ type, user, project, committish }) => `${type}:${user}/${project}${maybeJoin(\"#\", committish)}`,\n    pathtemplate: ({ user, project, committish }) => `${user}/${project}${maybeJoin(\"#\", committish)}`,\n    bugstemplate: ({ domain, user, project }) => `https://${domain}/${user}/${project}/issues`,\n    hashformat: formatHashFragment\n  };\n  var hosts = {};\n  hosts.github = {\n    protocols: [\"git:\", \"http:\", \"git+ssh:\", \"git+https:\", \"ssh:\", \"https:\"],\n    domain: \"github.com\",\n    treepath: \"tree\",\n    blobpath: \"blob\",\n    editpath: \"edit\",\n    filetemplate: ({ auth, user, project, committish, path }) => `https://${maybeJoin(auth, \"@\")}raw.githubusercontent.com/${user}/${project}/${maybeEncode(committish || \"HEAD\")}/${path}`,\n    gittemplate: ({ auth, domain, user, project, committish }) => `git://${maybeJoin(auth, \"@\")}${domain}/${user}/${project}.git${maybeJoin(\"#\", committish)}`,\n    tarballtemplate: ({ domain, user, project, committish }) => `https://codeload.${domain}/${user}/${project}/tar.gz/${maybeEncode(committish || \"HEAD\")}`,\n    extract: (url) => {\n      let [, user, project, type, committish] = url.pathname.split(\"/\", 5);\n      if (type && type !== \"tree\") {\n        return;\n      }\n      if (!type) {\n        committish = url.hash.slice(1);\n      }\n      if (project && project.endsWith(\".git\")) {\n        project = project.slice(0, -4);\n      }\n      if (!user || !project) {\n        return;\n      }\n      return { user, project, committish };\n    }\n  };\n  hosts.bitbucket = {\n    protocols: [\"git+ssh:\", \"git+https:\", \"ssh:\", \"https:\"],\n    domain: \"bitbucket.org\",\n    treepath: \"src\",\n    blobpath: \"src\",\n    editpath: \"?mode=edit\",\n    edittemplate: ({ domain, user, project, committish, treepath, path, editpath }) => `https://${domain}/${user}/${project}${maybeJoin(\"/\", treepath, \"/\", maybeEncode(committish || \"HEAD\"), \"/\", path, editpath)}`,\n    tarballtemplate: ({ domain, user, project, committish }) => `https://${domain}/${user}/${project}/get/${maybeEncode(committish || \"HEAD\")}.tar.gz`,\n    extract: (url) => {\n      let [, user, project, aux] = url.pathname.split(\"/\", 4);\n      if ([\"get\"].includes(aux)) {\n        return;\n      }\n      if (project && project.endsWith(\".git\")) {\n        project = project.slice(0, -4);\n      }\n      if (!user || !project) {\n        return;\n      }\n      return { user, project, committish: url.hash.slice(1) };\n    }\n  };\n  hosts.gitlab = {\n    protocols: [\"git+ssh:\", \"git+https:\", \"ssh:\", \"https:\"],\n    domain: \"gitlab.com\",\n    treepath: \"tree\",\n    blobpath: \"tree\",\n    editpath: \"-/edit\",\n    httpstemplate: ({ auth, domain, user, project, committish }) => `git+https://${maybeJoin(auth, \"@\")}${domain}/${user}/${project}.git${maybeJoin(\"#\", committish)}`,\n    tarballtemplate: ({ domain, user, project, committish }) => `https://${domain}/${user}/${project}/repository/archive.tar.gz?ref=${maybeEncode(committish || \"HEAD\")}`,\n    extract: (url) => {\n      const path = url.pathname.slice(1);\n      if (path.includes(\"/-/\") || path.includes(\"/archive.tar.gz\")) {\n        return;\n      }\n      const segments = path.split(\"/\");\n      let project = segments.pop();\n      if (project.endsWith(\".git\")) {\n        project = project.slice(0, -4);\n      }\n      const user = segments.join(\"/\");\n      if (!user || !project) {\n        return;\n      }\n      return { user, project, committish: url.hash.slice(1) };\n    }\n  };\n  hosts.gist = {\n    protocols: [\"git:\", \"git+ssh:\", \"git+https:\", \"ssh:\", \"https:\"],\n    domain: \"gist.github.com\",\n    editpath: \"edit\",\n    sshtemplate: ({ domain, project, committish }) => `git@${domain}:${project}.git${maybeJoin(\"#\", committish)}`,\n    sshurltemplate: ({ domain, project, committish }) => `git+ssh://git@${domain}/${project}.git${maybeJoin(\"#\", committish)}`,\n    edittemplate: ({ domain, user, project, committish, editpath }) => `https://${domain}/${user}/${project}${maybeJoin(\"/\", maybeEncode(committish))}/${editpath}`,\n    browsetemplate: ({ domain, project, committish }) => `https://${domain}/${project}${maybeJoin(\"/\", maybeEncode(committish))}`,\n    browsetreetemplate: ({ domain, project, committish, path, hashformat }) => `https://${domain}/${project}${maybeJoin(\"/\", maybeEncode(committish))}${maybeJoin(\"#\", hashformat(path))}`,\n    browseblobtemplate: ({ domain, project, committish, path, hashformat }) => `https://${domain}/${project}${maybeJoin(\"/\", maybeEncode(committish))}${maybeJoin(\"#\", hashformat(path))}`,\n    docstemplate: ({ domain, project, committish }) => `https://${domain}/${project}${maybeJoin(\"/\", maybeEncode(committish))}`,\n    httpstemplate: ({ domain, project, committish }) => `git+https://${domain}/${project}.git${maybeJoin(\"#\", committish)}`,\n    filetemplate: ({ user, project, committish, path }) => `https://gist.githubusercontent.com/${user}/${project}/raw${maybeJoin(\"/\", maybeEncode(committish))}/${path}`,\n    shortcuttemplate: ({ type, project, committish }) => `${type}:${project}${maybeJoin(\"#\", committish)}`,\n    pathtemplate: ({ project, committish }) => `${project}${maybeJoin(\"#\", committish)}`,\n    bugstemplate: ({ domain, project }) => `https://${domain}/${project}`,\n    gittemplate: ({ domain, project, committish }) => `git://${domain}/${project}.git${maybeJoin(\"#\", committish)}`,\n    tarballtemplate: ({ project, committish }) => `https://codeload.github.com/gist/${project}/tar.gz/${maybeEncode(committish || \"HEAD\")}`,\n    extract: (url) => {\n      let [, user, project, aux] = url.pathname.split(\"/\", 4);\n      if (aux === \"raw\") {\n        return;\n      }\n      if (!project) {\n        if (!user) {\n          return;\n        }\n        project = user;\n        user = null;\n      }\n      if (project.endsWith(\".git\")) {\n        project = project.slice(0, -4);\n      }\n      return { user, project, committish: url.hash.slice(1) };\n    },\n    hashformat: function(fragment) {\n      return fragment && \"file-\" + formatHashFragment(fragment);\n    }\n  };\n  hosts.sourcehut = {\n    protocols: [\"git+ssh:\", \"https:\"],\n    domain: \"git.sr.ht\",\n    treepath: \"tree\",\n    blobpath: \"tree\",\n    filetemplate: ({ domain, user, project, committish, path }) => `https://${domain}/${user}/${project}/blob/${maybeEncode(committish) || \"HEAD\"}/${path}`,\n    httpstemplate: ({ domain, user, project, committish }) => `https://${domain}/${user}/${project}.git${maybeJoin(\"#\", committish)}`,\n    tarballtemplate: ({ domain, user, project, committish }) => `https://${domain}/${user}/${project}/archive/${maybeEncode(committish) || \"HEAD\"}.tar.gz`,\n    bugstemplate: ({ user, project }) => `https://todo.sr.ht/${user}/${project}`,\n    extract: (url) => {\n      let [, user, project, aux] = url.pathname.split(\"/\", 4);\n      if ([\"archive\"].includes(aux)) {\n        return;\n      }\n      if (project && project.endsWith(\".git\")) {\n        project = project.slice(0, -4);\n      }\n      if (!user || !project) {\n        return;\n      }\n      return { user, project, committish: url.hash.slice(1) };\n    }\n  };\n  for (const [name, host] of Object.entries(hosts)) {\n    hosts[name] = Object.assign({}, defaults, host);\n  }\n  module.exports = hosts;\n});\n\n// node_modules/hosted-git-info/lib/parse-url.js\nvar require_parse_url = __commonJS((exports, module) => {\n  var url = __require(\"url\");\n  var lastIndexOfBefore = (str, char, beforeChar) => {\n    const startPosition = str.indexOf(beforeChar);\n    return str.lastIndexOf(char, startPosition > -1 ? startPosition : Infinity);\n  };\n  var safeUrl = (u) => {\n    try {\n      return new url.URL(u);\n    } catch {\n    }\n  };\n  var correctProtocol = (arg, protocols) => {\n    const firstColon = arg.indexOf(\":\");\n    const proto = arg.slice(0, firstColon + 1);\n    if (Object.prototype.hasOwnProperty.call(protocols, proto)) {\n      return arg;\n    }\n    const firstAt = arg.indexOf(\"@\");\n    if (firstAt > -1) {\n      if (firstAt > firstColon) {\n        return `git+ssh://${arg}`;\n      } else {\n        return arg;\n      }\n    }\n    const doubleSlash = arg.indexOf(\"//\");\n    if (doubleSlash === firstColon + 1) {\n      return arg;\n    }\n    return `${arg.slice(0, firstColon + 1)}//${arg.slice(firstColon + 1)}`;\n  };\n  var correctUrl = (giturl) => {\n    const firstAt = lastIndexOfBefore(giturl, \"@\", \"#\");\n    const lastColonBeforeHash = lastIndexOfBefore(giturl, \":\", \"#\");\n    if (lastColonBeforeHash > firstAt) {\n      giturl = giturl.slice(0, lastColonBeforeHash) + \"/\" + giturl.slice(lastColonBeforeHash + 1);\n    }\n    if (lastIndexOfBefore(giturl, \":\", \"#\") === -1 && giturl.indexOf(\"//\") === -1) {\n      giturl = `git+ssh://${giturl}`;\n    }\n    return giturl;\n  };\n  module.exports = (giturl, protocols) => {\n    const withProtocol = protocols ? correctProtocol(giturl, protocols) : giturl;\n    return safeUrl(withProtocol) || safeUrl(correctUrl(withProtocol));\n  };\n});\n\n// node_modules/hosted-git-info/lib/from-url.js\nvar require_from_url = __commonJS((exports, module) => {\n  var parseUrl = require_parse_url();\n  var isGitHubShorthand = (arg) => {\n    const firstHash = arg.indexOf(\"#\");\n    const firstSlash = arg.indexOf(\"/\");\n    const secondSlash = arg.indexOf(\"/\", firstSlash + 1);\n    const firstColon = arg.indexOf(\":\");\n    const firstSpace = /\\s/.exec(arg);\n    const firstAt = arg.indexOf(\"@\");\n    const spaceOnlyAfterHash = !firstSpace || firstHash > -1 && firstSpace.index > firstHash;\n    const atOnlyAfterHash = firstAt === -1 || firstHash > -1 && firstAt > firstHash;\n    const colonOnlyAfterHash = firstColon === -1 || firstHash > -1 && firstColon > firstHash;\n    const secondSlashOnlyAfterHash = secondSlash === -1 || firstHash > -1 && secondSlash > firstHash;\n    const hasSlash = firstSlash > 0;\n    const doesNotEndWithSlash = firstHash > -1 ? arg[firstHash - 1] !== \"/\" : !arg.endsWith(\"/\");\n    const doesNotStartWithDot = !arg.startsWith(\".\");\n    return spaceOnlyAfterHash && hasSlash && doesNotEndWithSlash && doesNotStartWithDot && atOnlyAfterHash && colonOnlyAfterHash && secondSlashOnlyAfterHash;\n  };\n  module.exports = (giturl, opts, { gitHosts, protocols }) => {\n    if (!giturl) {\n      return;\n    }\n    const correctedUrl = isGitHubShorthand(giturl) ? `github:${giturl}` : giturl;\n    const parsed = parseUrl(correctedUrl, protocols);\n    if (!parsed) {\n      return;\n    }\n    const gitHostShortcut = gitHosts.byShortcut[parsed.protocol];\n    const gitHostDomain = gitHosts.byDomain[parsed.hostname.startsWith(\"www.\") ? parsed.hostname.slice(4) : parsed.hostname];\n    const gitHostName = gitHostShortcut || gitHostDomain;\n    if (!gitHostName) {\n      return;\n    }\n    const gitHostInfo = gitHosts[gitHostShortcut || gitHostDomain];\n    let auth = null;\n    if (protocols[parsed.protocol]?.auth && (parsed.username || parsed.password)) {\n      auth = `${parsed.username}${parsed.password ? \":\" + parsed.password : \"\"}`;\n    }\n    let committish = null;\n    let user = null;\n    let project = null;\n    let defaultRepresentation = null;\n    try {\n      if (gitHostShortcut) {\n        let pathname = parsed.pathname.startsWith(\"/\") ? parsed.pathname.slice(1) : parsed.pathname;\n        const firstAt = pathname.indexOf(\"@\");\n        if (firstAt > -1) {\n          pathname = pathname.slice(firstAt + 1);\n        }\n        const lastSlash = pathname.lastIndexOf(\"/\");\n        if (lastSlash > -1) {\n          user = decodeURIComponent(pathname.slice(0, lastSlash));\n          if (!user) {\n            user = null;\n          }\n          project = decodeURIComponent(pathname.slice(lastSlash + 1));\n        } else {\n          project = decodeURIComponent(pathname);\n        }\n        if (project.endsWith(\".git\")) {\n          project = project.slice(0, -4);\n        }\n        if (parsed.hash) {\n          committish = decodeURIComponent(parsed.hash.slice(1));\n        }\n        defaultRepresentation = \"shortcut\";\n      } else {\n        if (!gitHostInfo.protocols.includes(parsed.protocol)) {\n          return;\n        }\n        const segments = gitHostInfo.extract(parsed);\n        if (!segments) {\n          return;\n        }\n        user = segments.user && decodeURIComponent(segments.user);\n        project = decodeURIComponent(segments.project);\n        committish = decodeURIComponent(segments.committish);\n        defaultRepresentation = protocols[parsed.protocol]?.name || parsed.protocol.slice(0, -1);\n      }\n    } catch (err) {\n      if (err instanceof URIError) {\n        return;\n      } else {\n        throw err;\n      }\n    }\n    return [gitHostName, user, auth, project, committish, defaultRepresentation, opts];\n  };\n});\n\n// node_modules/hosted-git-info/lib/index.js\nvar require_lib5 = __commonJS((exports, module) => {\n  var LRU = require_lru_cache();\n  var hosts = require_hosts();\n  var fromUrl = require_from_url();\n  var parseUrl = require_parse_url();\n  var cache = new LRU({ max: 1000 });\n\n  class GitHost {\n    constructor(type, user, auth, project, committish, defaultRepresentation, opts = {}) {\n      Object.assign(this, GitHost.#gitHosts[type], {\n        type,\n        user,\n        auth,\n        project,\n        committish,\n        default: defaultRepresentation,\n        opts\n      });\n    }\n    static #gitHosts = { byShortcut: {}, byDomain: {} };\n    static #protocols = {\n      \"git+ssh:\": { name: \"sshurl\" },\n      \"ssh:\": { name: \"sshurl\" },\n      \"git+https:\": { name: \"https\", auth: true },\n      \"git:\": { auth: true },\n      \"http:\": { auth: true },\n      \"https:\": { auth: true },\n      \"git+http:\": { auth: true }\n    };\n    static addHost(name, host) {\n      GitHost.#gitHosts[name] = host;\n      GitHost.#gitHosts.byDomain[host.domain] = name;\n      GitHost.#gitHosts.byShortcut[`${name}:`] = name;\n      GitHost.#protocols[`${name}:`] = { name };\n    }\n    static fromUrl(giturl, opts) {\n      if (typeof giturl !== \"string\") {\n        return;\n      }\n      const key = giturl + JSON.stringify(opts || {});\n      if (!cache.has(key)) {\n        const hostArgs = fromUrl(giturl, opts, {\n          gitHosts: GitHost.#gitHosts,\n          protocols: GitHost.#protocols\n        });\n        cache.set(key, hostArgs ? new GitHost(...hostArgs) : undefined);\n      }\n      return cache.get(key);\n    }\n    static parseUrl(url) {\n      return parseUrl(url);\n    }\n    #fill(template, opts) {\n      if (typeof template !== \"function\") {\n        return null;\n      }\n      const options = { ...this, ...this.opts, ...opts };\n      if (!options.path) {\n        options.path = \"\";\n      }\n      if (options.path.startsWith(\"/\")) {\n        options.path = options.path.slice(1);\n      }\n      if (options.noCommittish) {\n        options.committish = null;\n      }\n      const result = template(options);\n      return options.noGitPlus && result.startsWith(\"git+\") ? result.slice(4) : result;\n    }\n    hash() {\n      return this.committish ? `#${this.committish}` : \"\";\n    }\n    ssh(opts) {\n      return this.#fill(this.sshtemplate, opts);\n    }\n    sshurl(opts) {\n      return this.#fill(this.sshurltemplate, opts);\n    }\n    browse(path, ...args) {\n      if (typeof path !== \"string\") {\n        return this.#fill(this.browsetemplate, path);\n      }\n      if (typeof args[0] !== \"string\") {\n        return this.#fill(this.browsetreetemplate, { ...args[0], path });\n      }\n      return this.#fill(this.browsetreetemplate, { ...args[1], fragment: args[0], path });\n    }\n    browseFile(path, ...args) {\n      if (typeof args[0] !== \"string\") {\n        return this.#fill(this.browseblobtemplate, { ...args[0], path });\n      }\n      return this.#fill(this.browseblobtemplate, { ...args[1], fragment: args[0], path });\n    }\n    docs(opts) {\n      return this.#fill(this.docstemplate, opts);\n    }\n    bugs(opts) {\n      return this.#fill(this.bugstemplate, opts);\n    }\n    https(opts) {\n      return this.#fill(this.httpstemplate, opts);\n    }\n    git(opts) {\n      return this.#fill(this.gittemplate, opts);\n    }\n    shortcut(opts) {\n      return this.#fill(this.shortcuttemplate, opts);\n    }\n    path(opts) {\n      return this.#fill(this.pathtemplate, opts);\n    }\n    tarball(opts) {\n      return this.#fill(this.tarballtemplate, { ...opts, noCommittish: false });\n    }\n    file(path, opts) {\n      return this.#fill(this.filetemplate, { ...opts, path });\n    }\n    edit(path, opts) {\n      return this.#fill(this.edittemplate, { ...opts, path });\n    }\n    getDefaultRepresentation() {\n      return this.default;\n    }\n    toString(opts) {\n      if (this.default && typeof this[this.default] === \"function\") {\n        return this[this.default](opts);\n      }\n      return this.sshurl(opts);\n    }\n  }\n  for (const [name, host] of Object.entries(hosts)) {\n    GitHost.addHost(name, host);\n  }\n  module.exports = GitHost;\n});\n\n// node_modules/function-bind/implementation.js\nvar require_implementation = __commonJS((exports, module) => {\n  var ERROR_MESSAGE = \"Function.prototype.bind called on incompatible \";\n  var slice = Array.prototype.slice;\n  var toStr = Object.prototype.toString;\n  var funcType = \"[object Function]\";\n  module.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== \"function\" || toStr.call(target) !== funcType) {\n      throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n    var bound;\n    var binder = function() {\n      if (this instanceof bound) {\n        var result = target.apply(this, args.concat(slice.call(arguments)));\n        if (Object(result) === result) {\n          return result;\n        }\n        return this;\n      } else {\n        return target.apply(that, args.concat(slice.call(arguments)));\n      }\n    };\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0;i < boundLength; i++) {\n      boundArgs.push(\"$\" + i);\n    }\n    bound = Function(\"binder\", \"return function (\" + boundArgs.join(\",\") + \"){ return binder.apply(this,arguments); }\")(binder);\n    if (target.prototype) {\n      var Empty = function Empty() {\n      };\n      Empty.prototype = target.prototype;\n      bound.prototype = new Empty;\n      Empty.prototype = null;\n    }\n    return bound;\n  };\n});\n\n// node_modules/function-bind/index.js\nvar require_function_bind = __commonJS((exports, module) => {\n  var implementation = require_implementation();\n  module.exports = Function.prototype.bind || implementation;\n});\n\n// node_modules/has/src/index.js\nvar require_src2 = __commonJS((exports, module) => {\n  var bind = require_function_bind();\n  module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n});\n\n// node_modules/is-core-module/core.json\nvar require_core2 = __commonJS((exports, module) => {\n  module.exports = {\n    assert: true,\n    \"node:assert\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"assert/strict\": \">= 15\",\n    \"node:assert/strict\": \">= 16\",\n    async_hooks: \">= 8\",\n    \"node:async_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n    buffer_ieee754: \">= 0.5 && < 0.9.7\",\n    buffer: true,\n    \"node:buffer\": [\">= 14.18 && < 15\", \">= 16\"],\n    child_process: true,\n    \"node:child_process\": [\">= 14.18 && < 15\", \">= 16\"],\n    cluster: \">= 0.5\",\n    \"node:cluster\": [\">= 14.18 && < 15\", \">= 16\"],\n    console: true,\n    \"node:console\": [\">= 14.18 && < 15\", \">= 16\"],\n    constants: true,\n    \"node:constants\": [\">= 14.18 && < 15\", \">= 16\"],\n    crypto: true,\n    \"node:crypto\": [\">= 14.18 && < 15\", \">= 16\"],\n    _debug_agent: \">= 1 && < 8\",\n    _debugger: \"< 8\",\n    dgram: true,\n    \"node:dgram\": [\">= 14.18 && < 15\", \">= 16\"],\n    diagnostics_channel: [\">= 14.17 && < 15\", \">= 15.1\"],\n    \"node:diagnostics_channel\": [\">= 14.18 && < 15\", \">= 16\"],\n    dns: true,\n    \"node:dns\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"dns/promises\": \">= 15\",\n    \"node:dns/promises\": \">= 16\",\n    domain: \">= 0.7.12\",\n    \"node:domain\": [\">= 14.18 && < 15\", \">= 16\"],\n    events: true,\n    \"node:events\": [\">= 14.18 && < 15\", \">= 16\"],\n    freelist: \"< 6\",\n    fs: true,\n    \"node:fs\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"fs/promises\": [\">= 10 && < 10.1\", \">= 14\"],\n    \"node:fs/promises\": [\">= 14.18 && < 15\", \">= 16\"],\n    _http_agent: \">= 0.11.1\",\n    \"node:_http_agent\": [\">= 14.18 && < 15\", \">= 16\"],\n    _http_client: \">= 0.11.1\",\n    \"node:_http_client\": [\">= 14.18 && < 15\", \">= 16\"],\n    _http_common: \">= 0.11.1\",\n    \"node:_http_common\": [\">= 14.18 && < 15\", \">= 16\"],\n    _http_incoming: \">= 0.11.1\",\n    \"node:_http_incoming\": [\">= 14.18 && < 15\", \">= 16\"],\n    _http_outgoing: \">= 0.11.1\",\n    \"node:_http_outgoing\": [\">= 14.18 && < 15\", \">= 16\"],\n    _http_server: \">= 0.11.1\",\n    \"node:_http_server\": [\">= 14.18 && < 15\", \">= 16\"],\n    http: true,\n    \"node:http\": [\">= 14.18 && < 15\", \">= 16\"],\n    http2: \">= 8.8\",\n    \"node:http2\": [\">= 14.18 && < 15\", \">= 16\"],\n    https: true,\n    \"node:https\": [\">= 14.18 && < 15\", \">= 16\"],\n    inspector: \">= 8\",\n    \"node:inspector\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"inspector/promises\": [\">= 19\"],\n    \"node:inspector/promises\": [\">= 19\"],\n    _linklist: \"< 8\",\n    module: true,\n    \"node:module\": [\">= 14.18 && < 15\", \">= 16\"],\n    net: true,\n    \"node:net\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"node-inspect/lib/_inspect\": \">= 7.6 && < 12\",\n    \"node-inspect/lib/internal/inspect_client\": \">= 7.6 && < 12\",\n    \"node-inspect/lib/internal/inspect_repl\": \">= 7.6 && < 12\",\n    os: true,\n    \"node:os\": [\">= 14.18 && < 15\", \">= 16\"],\n    path: true,\n    \"node:path\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"path/posix\": \">= 15.3\",\n    \"node:path/posix\": \">= 16\",\n    \"path/win32\": \">= 15.3\",\n    \"node:path/win32\": \">= 16\",\n    perf_hooks: \">= 8.5\",\n    \"node:perf_hooks\": [\">= 14.18 && < 15\", \">= 16\"],\n    process: \">= 1\",\n    \"node:process\": [\">= 14.18 && < 15\", \">= 16\"],\n    punycode: \">= 0.5\",\n    \"node:punycode\": [\">= 14.18 && < 15\", \">= 16\"],\n    querystring: true,\n    \"node:querystring\": [\">= 14.18 && < 15\", \">= 16\"],\n    readline: true,\n    \"node:readline\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"readline/promises\": \">= 17\",\n    \"node:readline/promises\": \">= 17\",\n    repl: true,\n    \"node:repl\": [\">= 14.18 && < 15\", \">= 16\"],\n    smalloc: \">= 0.11.5 && < 3\",\n    _stream_duplex: \">= 0.9.4\",\n    \"node:_stream_duplex\": [\">= 14.18 && < 15\", \">= 16\"],\n    _stream_transform: \">= 0.9.4\",\n    \"node:_stream_transform\": [\">= 14.18 && < 15\", \">= 16\"],\n    _stream_wrap: \">= 1.4.1\",\n    \"node:_stream_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n    _stream_passthrough: \">= 0.9.4\",\n    \"node:_stream_passthrough\": [\">= 14.18 && < 15\", \">= 16\"],\n    _stream_readable: \">= 0.9.4\",\n    \"node:_stream_readable\": [\">= 14.18 && < 15\", \">= 16\"],\n    _stream_writable: \">= 0.9.4\",\n    \"node:_stream_writable\": [\">= 14.18 && < 15\", \">= 16\"],\n    stream: true,\n    \"node:stream\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"stream/consumers\": \">= 16.7\",\n    \"node:stream/consumers\": \">= 16.7\",\n    \"stream/promises\": \">= 15\",\n    \"node:stream/promises\": \">= 16\",\n    \"stream/web\": \">= 16.5\",\n    \"node:stream/web\": \">= 16.5\",\n    string_decoder: true,\n    \"node:string_decoder\": [\">= 14.18 && < 15\", \">= 16\"],\n    sys: [\">= 0.4 && < 0.7\", \">= 0.8\"],\n    \"node:sys\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"test/reporters\": \">= 19.9 && < 20.2\",\n    \"node:test/reporters\": [\">= 19.9\", \">= 20\"],\n    \"node:test\": [\">= 16.17 && < 17\", \">= 18\"],\n    timers: true,\n    \"node:timers\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"timers/promises\": \">= 15\",\n    \"node:timers/promises\": \">= 16\",\n    _tls_common: \">= 0.11.13\",\n    \"node:_tls_common\": [\">= 14.18 && < 15\", \">= 16\"],\n    _tls_legacy: \">= 0.11.3 && < 10\",\n    _tls_wrap: \">= 0.11.3\",\n    \"node:_tls_wrap\": [\">= 14.18 && < 15\", \">= 16\"],\n    tls: true,\n    \"node:tls\": [\">= 14.18 && < 15\", \">= 16\"],\n    trace_events: \">= 10\",\n    \"node:trace_events\": [\">= 14.18 && < 15\", \">= 16\"],\n    tty: true,\n    \"node:tty\": [\">= 14.18 && < 15\", \">= 16\"],\n    url: true,\n    \"node:url\": [\">= 14.18 && < 15\", \">= 16\"],\n    util: true,\n    \"node:util\": [\">= 14.18 && < 15\", \">= 16\"],\n    \"util/types\": \">= 15.3\",\n    \"node:util/types\": \">= 16\",\n    \"v8/tools/arguments\": \">= 10 && < 12\",\n    \"v8/tools/codemap\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n    \"v8/tools/consarray\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n    \"v8/tools/csvparser\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n    \"v8/tools/logreader\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n    \"v8/tools/profile_view\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n    \"v8/tools/splaytree\": [\">= 4.4 && < 5\", \">= 5.2 && < 12\"],\n    v8: \">= 1\",\n    \"node:v8\": [\">= 14.18 && < 15\", \">= 16\"],\n    vm: true,\n    \"node:vm\": [\">= 14.18 && < 15\", \">= 16\"],\n    wasi: [\">= 13.4 && < 13.5\", \">= 20\"],\n    \"node:wasi\": \">= 20\",\n    worker_threads: \">= 11.7\",\n    \"node:worker_threads\": [\">= 14.18 && < 15\", \">= 16\"],\n    zlib: \">= 0.5\",\n    \"node:zlib\": [\">= 14.18 && < 15\", \">= 16\"]\n  };\n});\n\n// node_modules/is-core-module/index.js\nvar require_is_core_module = __commonJS((exports, module) => {\n  var specifierIncluded = function(current, specifier) {\n    var nodeParts = current.split(\".\");\n    var parts = specifier.split(\" \");\n    var op = parts.length > 1 ? parts[0] : \"=\";\n    var versionParts = (parts.length > 1 ? parts[1] : parts[0]).split(\".\");\n    for (var i = 0;i < 3; ++i) {\n      var cur = parseInt(nodeParts[i] || 0, 10);\n      var ver = parseInt(versionParts[i] || 0, 10);\n      if (cur === ver) {\n        continue;\n      }\n      if (op === \"<\") {\n        return cur < ver;\n      }\n      if (op === \">=\") {\n        return cur >= ver;\n      }\n      return false;\n    }\n    return op === \">=\";\n  };\n  var matchesRange = function(current, range) {\n    var specifiers = range.split(/ ?&& ?/);\n    if (specifiers.length === 0) {\n      return false;\n    }\n    for (var i = 0;i < specifiers.length; ++i) {\n      if (!specifierIncluded(current, specifiers[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var versionIncluded = function(nodeVersion, specifierValue) {\n    if (typeof specifierValue === \"boolean\") {\n      return specifierValue;\n    }\n    var current = typeof nodeVersion === \"undefined\" ? process.versions && process.versions.node : nodeVersion;\n    if (typeof current !== \"string\") {\n      throw new TypeError(typeof nodeVersion === \"undefined\" ? \"Unable to determine current node version\" : \"If provided, a valid node version is required\");\n    }\n    if (specifierValue && typeof specifierValue === \"object\") {\n      for (var i = 0;i < specifierValue.length; ++i) {\n        if (matchesRange(current, specifierValue[i])) {\n          return true;\n        }\n      }\n      return false;\n    }\n    return matchesRange(current, specifierValue);\n  };\n  var has = require_src2();\n  var data = require_core2();\n  module.exports = function isCore(x, nodeVersion) {\n    return has(data, x) && versionIncluded(nodeVersion, data[x]);\n  };\n});\n\n// node_modules/normalize-package-data/lib/extract_description.js\nvar require_extract_description = __commonJS((exports, module) => {\n  var extractDescription = function(d) {\n    if (!d) {\n      return;\n    }\n    if (d === \"ERROR: No README data found!\") {\n      return;\n    }\n    d = d.trim().split(\"\\n\");\n    let s = 0;\n    while (d[s] && d[s].trim().match(/^(#|$)/)) {\n      s++;\n    }\n    const l = d.length;\n    let e = s + 1;\n    while (e < l && d[e].trim()) {\n      e++;\n    }\n    return d.slice(s, e).join(\" \").trim();\n  };\n  module.exports = extractDescription;\n});\n\n// node_modules/normalize-package-data/lib/typos.json\nvar require_typos = __commonJS((exports, module) => {\n  module.exports = {\n    topLevel: {\n      dependancies: \"dependencies\",\n      dependecies: \"dependencies\",\n      depdenencies: \"dependencies\",\n      devEependencies: \"devDependencies\",\n      depends: \"dependencies\",\n      \"dev-dependencies\": \"devDependencies\",\n      devDependences: \"devDependencies\",\n      devDepenencies: \"devDependencies\",\n      devdependencies: \"devDependencies\",\n      repostitory: \"repository\",\n      repo: \"repository\",\n      prefereGlobal: \"preferGlobal\",\n      hompage: \"homepage\",\n      hampage: \"homepage\",\n      autohr: \"author\",\n      autor: \"author\",\n      contributers: \"contributors\",\n      publicationConfig: \"publishConfig\",\n      script: \"scripts\"\n    },\n    bugs: { web: \"url\", name: \"url\" },\n    script: { server: \"start\", tests: \"test\" }\n  };\n});\n\n// node_modules/normalize-package-data/lib/fixer.js\nvar require_fixer = __commonJS((exports, module) => {\n  var isValidScopedPackageName = function(spec) {\n    if (spec.charAt(0) !== \"@\") {\n      return false;\n    }\n    var rest = spec.slice(1).split(\"/\");\n    if (rest.length !== 2) {\n      return false;\n    }\n    return rest[0] && rest[1] && rest[0] === encodeURIComponent(rest[0]) && rest[1] === encodeURIComponent(rest[1]);\n  };\n  var isCorrectlyEncodedName = function(spec) {\n    return !spec.match(/[/@\\s+%:]/) && spec === encodeURIComponent(spec);\n  };\n  var ensureValidName = function(name, strict, allowLegacyCase) {\n    if (name.charAt(0) === \".\" || !(isValidScopedPackageName(name) || isCorrectlyEncodedName(name)) || strict && !allowLegacyCase && name !== name.toLowerCase() || name.toLowerCase() === \"node_modules\" || name.toLowerCase() === \"favicon.ico\") {\n      throw new Error(\"Invalid name: \" + JSON.stringify(name));\n    }\n  };\n  var modifyPeople = function(data, fn) {\n    if (data.author) {\n      data.author = fn(data.author);\n    }\n    [\"maintainers\", \"contributors\"].forEach(function(set) {\n      if (!Array.isArray(data[set])) {\n        return;\n      }\n      data[set] = data[set].map(fn);\n    });\n    return data;\n  };\n  var unParsePerson = function(person) {\n    if (typeof person === \"string\") {\n      return person;\n    }\n    var name = person.name || \"\";\n    var u = person.url || person.web;\n    var wrappedUrl = u ? \" (\" + u + \")\" : \"\";\n    var e = person.email || person.mail;\n    var wrappedEmail = e ? \" <\" + e + \">\" : \"\";\n    return name + wrappedEmail + wrappedUrl;\n  };\n  var parsePerson = function(person) {\n    if (typeof person !== \"string\") {\n      return person;\n    }\n    var matchedName = person.match(/^([^(<]+)/);\n    var matchedUrl = person.match(/\\(([^()]+)\\)/);\n    var matchedEmail = person.match(/<([^<>]+)>/);\n    var obj = {};\n    if (matchedName && matchedName[0].trim()) {\n      obj.name = matchedName[0].trim();\n    }\n    if (matchedEmail) {\n      obj.email = matchedEmail[1];\n    }\n    if (matchedUrl) {\n      obj.url = matchedUrl[1];\n    }\n    return obj;\n  };\n  var addOptionalDepsToDeps = function(data, warn) {\n    var o = data.optionalDependencies;\n    if (!o) {\n      return;\n    }\n    var d = data.dependencies || {};\n    Object.keys(o).forEach(function(k) {\n      d[k] = o[k];\n    });\n    data.dependencies = d;\n  };\n  var depObjectify = function(deps, type, warn) {\n    if (!deps) {\n      return {};\n    }\n    if (typeof deps === \"string\") {\n      deps = deps.trim().split(/[\\n\\r\\s\\t ,]+/);\n    }\n    if (!Array.isArray(deps)) {\n      return deps;\n    }\n    warn(\"deprecatedArrayDependencies\", type);\n    var o = {};\n    deps.filter(function(d) {\n      return typeof d === \"string\";\n    }).forEach(function(d) {\n      d = d.trim().split(/(:?[@\\s><=])/);\n      var dn = d.shift();\n      var dv = d.join(\"\");\n      dv = dv.trim();\n      dv = dv.replace(/^@/, \"\");\n      o[dn] = dv;\n    });\n    return o;\n  };\n  var objectifyDeps = function(data, warn) {\n    depTypes.forEach(function(type) {\n      if (!data[type]) {\n        return;\n      }\n      data[type] = depObjectify(data[type], type, warn);\n    });\n  };\n  var bugsTypos = function(bugs, warn) {\n    if (!bugs) {\n      return;\n    }\n    Object.keys(bugs).forEach(function(k) {\n      if (typos.bugs[k]) {\n        warn(\"typo\", k, typos.bugs[k], \"bugs\");\n        bugs[typos.bugs[k]] = bugs[k];\n        delete bugs[k];\n      }\n    });\n  };\n  var isValidSemver = require_valid();\n  var cleanSemver = require_clean();\n  var validateLicense = require_validate_npm_package_license();\n  var hostedGitInfo = require_lib5();\n  var isBuiltinModule = require_is_core_module();\n  var depTypes = [\"dependencies\", \"devDependencies\", \"optionalDependencies\"];\n  var extractDescription = require_extract_description();\n  var url = __require(\"url\");\n  var typos = require_typos();\n  var isEmail = (str) => str.includes(\"@\") && str.indexOf(\"@\") < str.lastIndexOf(\".\");\n  module.exports = {\n    warn: function() {\n    },\n    fixRepositoryField: function(data) {\n      if (data.repositories) {\n        this.warn(\"repositories\");\n        data.repository = data.repositories[0];\n      }\n      if (!data.repository) {\n        return this.warn(\"missingRepository\");\n      }\n      if (typeof data.repository === \"string\") {\n        data.repository = {\n          type: \"git\",\n          url: data.repository\n        };\n      }\n      var r = data.repository.url || \"\";\n      if (r) {\n        var hosted = hostedGitInfo.fromUrl(r);\n        if (hosted) {\n          r = data.repository.url = hosted.getDefaultRepresentation() === \"shortcut\" ? hosted.https() : hosted.toString();\n        }\n      }\n      if (r.match(/github.com\\/[^/]+\\/[^/]+\\.git\\.git$/)) {\n        this.warn(\"brokenGitUrl\", r);\n      }\n    },\n    fixTypos: function(data) {\n      Object.keys(typos.topLevel).forEach(function(d) {\n        if (Object.prototype.hasOwnProperty.call(data, d)) {\n          this.warn(\"typo\", d, typos.topLevel[d]);\n        }\n      }, this);\n    },\n    fixScriptsField: function(data) {\n      if (!data.scripts) {\n        return;\n      }\n      if (typeof data.scripts !== \"object\") {\n        this.warn(\"nonObjectScripts\");\n        delete data.scripts;\n        return;\n      }\n      Object.keys(data.scripts).forEach(function(k) {\n        if (typeof data.scripts[k] !== \"string\") {\n          this.warn(\"nonStringScript\");\n          delete data.scripts[k];\n        } else if (typos.script[k] && !data.scripts[typos.script[k]]) {\n          this.warn(\"typo\", k, typos.script[k], \"scripts\");\n        }\n      }, this);\n    },\n    fixFilesField: function(data) {\n      var files = data.files;\n      if (files && !Array.isArray(files)) {\n        this.warn(\"nonArrayFiles\");\n        delete data.files;\n      } else if (data.files) {\n        data.files = data.files.filter(function(file) {\n          if (!file || typeof file !== \"string\") {\n            this.warn(\"invalidFilename\", file);\n            return false;\n          } else {\n            return true;\n          }\n        }, this);\n      }\n    },\n    fixBinField: function(data) {\n      if (!data.bin) {\n        return;\n      }\n      if (typeof data.bin === \"string\") {\n        var b = {};\n        var match;\n        if (match = data.name.match(/^@[^/]+[/](.*)$/)) {\n          b[match[1]] = data.bin;\n        } else {\n          b[data.name] = data.bin;\n        }\n        data.bin = b;\n      }\n    },\n    fixManField: function(data) {\n      if (!data.man) {\n        return;\n      }\n      if (typeof data.man === \"string\") {\n        data.man = [data.man];\n      }\n    },\n    fixBundleDependenciesField: function(data) {\n      var bdd = \"bundledDependencies\";\n      var bd = \"bundleDependencies\";\n      if (data[bdd] && !data[bd]) {\n        data[bd] = data[bdd];\n        delete data[bdd];\n      }\n      if (data[bd] && !Array.isArray(data[bd])) {\n        this.warn(\"nonArrayBundleDependencies\");\n        delete data[bd];\n      } else if (data[bd]) {\n        data[bd] = data[bd].filter(function(filtered) {\n          if (!filtered || typeof filtered !== \"string\") {\n            this.warn(\"nonStringBundleDependency\", filtered);\n            return false;\n          } else {\n            if (!data.dependencies) {\n              data.dependencies = {};\n            }\n            if (!Object.prototype.hasOwnProperty.call(data.dependencies, filtered)) {\n              this.warn(\"nonDependencyBundleDependency\", filtered);\n              data.dependencies[filtered] = \"*\";\n            }\n            return true;\n          }\n        }, this);\n      }\n    },\n    fixDependencies: function(data, strict) {\n      objectifyDeps(data, this.warn);\n      addOptionalDepsToDeps(data, this.warn);\n      this.fixBundleDependenciesField(data);\n      [\"dependencies\", \"devDependencies\"].forEach(function(deps) {\n        if (!(deps in data)) {\n          return;\n        }\n        if (!data[deps] || typeof data[deps] !== \"object\") {\n          this.warn(\"nonObjectDependencies\", deps);\n          delete data[deps];\n          return;\n        }\n        Object.keys(data[deps]).forEach(function(d) {\n          var r = data[deps][d];\n          if (typeof r !== \"string\") {\n            this.warn(\"nonStringDependency\", d, JSON.stringify(r));\n            delete data[deps][d];\n          }\n          var hosted = hostedGitInfo.fromUrl(data[deps][d]);\n          if (hosted) {\n            data[deps][d] = hosted.toString();\n          }\n        }, this);\n      }, this);\n    },\n    fixModulesField: function(data) {\n      if (data.modules) {\n        this.warn(\"deprecatedModules\");\n        delete data.modules;\n      }\n    },\n    fixKeywordsField: function(data) {\n      if (typeof data.keywords === \"string\") {\n        data.keywords = data.keywords.split(/,\\s+/);\n      }\n      if (data.keywords && !Array.isArray(data.keywords)) {\n        delete data.keywords;\n        this.warn(\"nonArrayKeywords\");\n      } else if (data.keywords) {\n        data.keywords = data.keywords.filter(function(kw) {\n          if (typeof kw !== \"string\" || !kw) {\n            this.warn(\"nonStringKeyword\");\n            return false;\n          } else {\n            return true;\n          }\n        }, this);\n      }\n    },\n    fixVersionField: function(data, strict) {\n      var loose = !strict;\n      if (!data.version) {\n        data.version = \"\";\n        return true;\n      }\n      if (!isValidSemver(data.version, loose)) {\n        throw new Error('Invalid version: \"' + data.version + '\"');\n      }\n      data.version = cleanSemver(data.version, loose);\n      return true;\n    },\n    fixPeople: function(data) {\n      modifyPeople(data, unParsePerson);\n      modifyPeople(data, parsePerson);\n    },\n    fixNameField: function(data, options) {\n      if (typeof options === \"boolean\") {\n        options = { strict: options };\n      } else if (typeof options === \"undefined\") {\n        options = {};\n      }\n      var strict = options.strict;\n      if (!data.name && !strict) {\n        data.name = \"\";\n        return;\n      }\n      if (typeof data.name !== \"string\") {\n        throw new Error(\"name field must be a string.\");\n      }\n      if (!strict) {\n        data.name = data.name.trim();\n      }\n      ensureValidName(data.name, strict, options.allowLegacyCase);\n      if (isBuiltinModule(data.name)) {\n        this.warn(\"conflictingName\", data.name);\n      }\n    },\n    fixDescriptionField: function(data) {\n      if (data.description && typeof data.description !== \"string\") {\n        this.warn(\"nonStringDescription\");\n        delete data.description;\n      }\n      if (data.readme && !data.description) {\n        data.description = extractDescription(data.readme);\n      }\n      if (data.description === undefined) {\n        delete data.description;\n      }\n      if (!data.description) {\n        this.warn(\"missingDescription\");\n      }\n    },\n    fixReadmeField: function(data) {\n      if (!data.readme) {\n        this.warn(\"missingReadme\");\n        data.readme = \"ERROR: No README data found!\";\n      }\n    },\n    fixBugsField: function(data) {\n      if (!data.bugs && data.repository && data.repository.url) {\n        var hosted = hostedGitInfo.fromUrl(data.repository.url);\n        if (hosted && hosted.bugs()) {\n          data.bugs = { url: hosted.bugs() };\n        }\n      } else if (data.bugs) {\n        if (typeof data.bugs === \"string\") {\n          if (isEmail(data.bugs)) {\n            data.bugs = { email: data.bugs };\n          } else if (url.parse(data.bugs).protocol) {\n            data.bugs = { url: data.bugs };\n          } else {\n            this.warn(\"nonEmailUrlBugsString\");\n          }\n        } else {\n          bugsTypos(data.bugs, this.warn);\n          var oldBugs = data.bugs;\n          data.bugs = {};\n          if (oldBugs.url) {\n            if (typeof oldBugs.url === \"string\" && url.parse(oldBugs.url).protocol) {\n              data.bugs.url = oldBugs.url;\n            } else {\n              this.warn(\"nonUrlBugsUrlField\");\n            }\n          }\n          if (oldBugs.email) {\n            if (typeof oldBugs.email === \"string\" && isEmail(oldBugs.email)) {\n              data.bugs.email = oldBugs.email;\n            } else {\n              this.warn(\"nonEmailBugsEmailField\");\n            }\n          }\n        }\n        if (!data.bugs.email && !data.bugs.url) {\n          delete data.bugs;\n          this.warn(\"emptyNormalizedBugs\");\n        }\n      }\n    },\n    fixHomepageField: function(data) {\n      if (!data.homepage && data.repository && data.repository.url) {\n        var hosted = hostedGitInfo.fromUrl(data.repository.url);\n        if (hosted && hosted.docs()) {\n          data.homepage = hosted.docs();\n        }\n      }\n      if (!data.homepage) {\n        return;\n      }\n      if (typeof data.homepage !== \"string\") {\n        this.warn(\"nonUrlHomepage\");\n        return delete data.homepage;\n      }\n      if (!url.parse(data.homepage).protocol) {\n        data.homepage = \"http://\" + data.homepage;\n      }\n    },\n    fixLicenseField: function(data) {\n      const license = data.license || data.licence;\n      if (!license) {\n        return this.warn(\"missingLicense\");\n      }\n      if (typeof license !== \"string\" || license.length < 1 || license.trim() === \"\") {\n        return this.warn(\"invalidLicense\");\n      }\n      if (!validateLicense(license).validForNewPackages) {\n        return this.warn(\"invalidLicense\");\n      }\n    }\n  };\n});\n\n// node_modules/normalize-package-data/lib/warning_messages.json\nvar require_warning_messages = __commonJS((exports, module) => {\n  module.exports = {\n    repositories: \"'repositories' (plural) Not supported. Please pick one as the 'repository' field\",\n    missingRepository: \"No repository field.\",\n    brokenGitUrl: \"Probably broken git url: %s\",\n    nonObjectScripts: \"scripts must be an object\",\n    nonStringScript: \"script values must be string commands\",\n    nonArrayFiles: \"Invalid 'files' member\",\n    invalidFilename: \"Invalid filename in 'files' list: %s\",\n    nonArrayBundleDependencies: \"Invalid 'bundleDependencies' list. Must be array of package names\",\n    nonStringBundleDependency: \"Invalid bundleDependencies member: %s\",\n    nonDependencyBundleDependency: \"Non-dependency in bundleDependencies: %s\",\n    nonObjectDependencies: \"%s field must be an object\",\n    nonStringDependency: \"Invalid dependency: %s %s\",\n    deprecatedArrayDependencies: \"specifying %s as array is deprecated\",\n    deprecatedModules: \"modules field is deprecated\",\n    nonArrayKeywords: \"keywords should be an array of strings\",\n    nonStringKeyword: \"keywords should be an array of strings\",\n    conflictingName: \"%s is also the name of a node core module.\",\n    nonStringDescription: \"'description' field should be a string\",\n    missingDescription: \"No description\",\n    missingReadme: \"No README data\",\n    missingLicense: \"No license field.\",\n    nonEmailUrlBugsString: \"Bug string field must be url, email, or {email,url}\",\n    nonUrlBugsUrlField: \"bugs.url field must be a string url. Deleted.\",\n    nonEmailBugsEmailField: \"bugs.email field must be a string email. Deleted.\",\n    emptyNormalizedBugs: \"Normalized value of bugs field is an empty object. Deleted.\",\n    nonUrlHomepage: \"homepage field must be a string url. Deleted.\",\n    invalidLicense: \"license should be a valid SPDX license expression\",\n    typo: \"%s should probably be %s.\"\n  };\n});\n\n// node_modules/normalize-package-data/lib/make_warning.js\nvar require_make_warning = __commonJS((exports, module) => {\n  var makeTypoWarning = function(providedName, probableName, field) {\n    if (field) {\n      providedName = field + \"['\" + providedName + \"']\";\n      probableName = field + \"['\" + probableName + \"']\";\n    }\n    return util.format(messages.typo, providedName, probableName);\n  };\n  var util = __require(\"util\");\n  var messages = require_warning_messages();\n  module.exports = function() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    var warningName = args.shift();\n    if (warningName === \"typo\") {\n      return makeTypoWarning.apply(null, args);\n    } else {\n      var msgTemplate = messages[warningName] ? messages[warningName] : warningName + \": '%s'\";\n      args.unshift(msgTemplate);\n      return util.format.apply(null, args);\n    }\n  };\n});\n\n// node_modules/proc-log/lib/index.js\nvar require_lib6 = __commonJS((exports, module) => {\n  var LEVELS = [\n    \"notice\",\n    \"error\",\n    \"warn\",\n    \"info\",\n    \"verbose\",\n    \"http\",\n    \"silly\",\n    \"pause\",\n    \"resume\"\n  ];\n  var log = (level) => (...args) => process.emit(\"log\", level, ...args);\n  var logger = {};\n  for (const level of LEVELS) {\n    logger[level] = log(level);\n  }\n  logger.LEVELS = LEVELS;\n  module.exports = logger;\n});\n\n// node_modules/promise-inflight/inflight.js\nvar require_inflight = __commonJS((exports, module) => {\n  var inflight = function(unique, doFly) {\n    return Bluebird.all([unique, doFly]).then(function(args) {\n      const unique2 = args[0];\n      const doFly2 = args[1];\n      if (Array.isArray(unique2)) {\n        return Bluebird.all(unique2).then(function(uniqueArr) {\n          return _inflight(uniqueArr.join(\"\"), doFly2);\n        });\n      } else {\n        return _inflight(unique2, doFly2);\n      }\n    });\n    function _inflight(unique2, doFly2) {\n      if (!active[unique2]) {\n        let cleanup = function() {\n          delete active[unique2];\n        };\n        active[unique2] = new Bluebird(function(resolve) {\n          return resolve(doFly2());\n        });\n        active[unique2].then(cleanup, cleanup);\n      }\n      return active[unique2];\n    }\n  };\n  module.exports = inflight;\n  var Bluebird;\n  try {\n    Bluebird = (() => { throw (new Error(`Cannot require module \"bluebird\"`)); } )();\n  } catch (_) {\n    Bluebird = Promise;\n  }\n  var active = {};\n  inflight.active = active;\n});\n\n// node_modules/isexe/windows.js\nvar require_windows = __commonJS((exports, module) => {\n  var checkPathExt = function(path, options) {\n    var pathext = options.pathExt !== undefined ? options.pathExt : process.env.PATHEXT;\n    if (!pathext) {\n      return true;\n    }\n    pathext = pathext.split(\";\");\n    if (pathext.indexOf(\"\") !== -1) {\n      return true;\n    }\n    for (var i = 0;i < pathext.length; i++) {\n      var p = pathext[i].toLowerCase();\n      if (p && path.substr(-p.length).toLowerCase() === p) {\n        return true;\n      }\n    }\n    return false;\n  };\n  var checkStat = function(stat, path, options) {\n    if (!stat.isSymbolicLink() && !stat.isFile()) {\n      return false;\n    }\n    return checkPathExt(path, options);\n  };\n  var isexe = function(path, options, cb) {\n    fs.stat(path, function(er, stat) {\n      cb(er, er ? false : checkStat(stat, path, options));\n    });\n  };\n  var sync = function(path, options) {\n    return checkStat(fs.statSync(path), path, options);\n  };\n  module.exports = isexe;\n  isexe.sync = sync;\n  var fs = __require(\"fs\");\n});\n\n// node_modules/isexe/mode.js\nvar require_mode = __commonJS((exports, module) => {\n  var isexe = function(path, options, cb) {\n    fs.stat(path, function(er, stat) {\n      cb(er, er ? false : checkStat(stat, options));\n    });\n  };\n  var sync = function(path, options) {\n    return checkStat(fs.statSync(path), options);\n  };\n  var checkStat = function(stat, options) {\n    return stat.isFile() && checkMode(stat, options);\n  };\n  var checkMode = function(stat, options) {\n    var mod = stat.mode;\n    var uid = stat.uid;\n    var gid = stat.gid;\n    var myUid = options.uid !== undefined ? options.uid : process.getuid && process.getuid();\n    var myGid = options.gid !== undefined ? options.gid : process.getgid && process.getgid();\n    var u = parseInt(\"100\", 8);\n    var g = parseInt(\"010\", 8);\n    var o = parseInt(\"001\", 8);\n    var ug = u | g;\n    var ret = mod & o || mod & g && gid === myGid || mod & u && uid === myUid || mod & ug && myUid === 0;\n    return ret;\n  };\n  module.exports = isexe;\n  isexe.sync = sync;\n  var fs = __require(\"fs\");\n});\n\n// node_modules/isexe/index.js\nvar require_isexe = __commonJS((exports, module) => {\n  var isexe = function(path, options, cb) {\n    if (typeof options === \"function\") {\n      cb = options;\n      options = {};\n    }\n    if (!cb) {\n      if (typeof Promise !== \"function\") {\n        throw new TypeError(\"callback not provided\");\n      }\n      return new Promise(function(resolve, reject) {\n        isexe(path, options || {}, function(er, is) {\n          if (er) {\n            reject(er);\n          } else {\n            resolve(is);\n          }\n        });\n      });\n    }\n    core(path, options || {}, function(er, is) {\n      if (er) {\n        if (er.code === \"EACCES\" || options && options.ignoreErrors) {\n          er = null;\n          is = false;\n        }\n      }\n      cb(er, is);\n    });\n  };\n  var sync = function(path, options) {\n    try {\n      return core.sync(path, options || {});\n    } catch (er) {\n      if (options && options.ignoreErrors || er.code === \"EACCES\") {\n        return false;\n      } else {\n        throw er;\n      }\n    }\n  };\n  var fs = __require(\"fs\");\n  var core;\n  if (process.platform === \"win32\" || global.TESTING_WINDOWS) {\n    core = require_windows();\n  } else {\n    core = require_mode();\n  }\n  module.exports = isexe;\n  isexe.sync = sync;\n});\n\n// node_modules/@npmcli/promise-spawn/node_modules/which/lib/index.js\nvar require_lib7 = __commonJS((exports, module) => {\n  var isexe = require_isexe();\n  var { join, delimiter, sep, posix } = __require(\"path\");\n  var isWindows = process.platform === \"win32\";\n  var rSlash = new RegExp(`[${posix.sep}${sep === posix.sep ? \"\" : sep}]`.replace(/(\\\\)/g, \"\\\\$1\"));\n  var rRel = new RegExp(`^\\\\.${rSlash.source}`);\n  var getNotFoundError = (cmd) => Object.assign(new Error(`not found: ${cmd}`), { code: \"ENOENT\" });\n  var getPathInfo = (cmd, {\n    path: optPath = process.env.PATH,\n    pathExt: optPathExt = process.env.PATHEXT,\n    delimiter: optDelimiter = delimiter\n  }) => {\n    const pathEnv = cmd.match(rSlash) ? [\"\"] : [\n      ...isWindows ? [process.cwd()] : [],\n      ...(optPath || \"\").split(optDelimiter)\n    ];\n    if (isWindows) {\n      const pathExtExe = optPathExt || [\".EXE\", \".CMD\", \".BAT\", \".COM\"].join(optDelimiter);\n      const pathExt = pathExtExe.split(optDelimiter).reduce((acc, item) => {\n        acc.push(item);\n        acc.push(item.toLowerCase());\n        return acc;\n      }, []);\n      if (cmd.includes(\".\") && pathExt[0] !== \"\") {\n        pathExt.unshift(\"\");\n      }\n      return { pathEnv, pathExt, pathExtExe };\n    }\n    return { pathEnv, pathExt: [\"\"] };\n  };\n  var getPathPart = (raw, cmd) => {\n    const pathPart = /^\".*\"$/.test(raw) ? raw.slice(1, -1) : raw;\n    const prefix = !pathPart && rRel.test(cmd) ? cmd.slice(0, 2) : \"\";\n    return prefix + join(pathPart, cmd);\n  };\n  var which = async (cmd, opt = {}) => {\n    const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt);\n    const found = [];\n    for (const envPart of pathEnv) {\n      const p = getPathPart(envPart, cmd);\n      for (const ext of pathExt) {\n        const withExt = p + ext;\n        const is = await isexe(withExt, { pathExt: pathExtExe, ignoreErrors: true });\n        if (is) {\n          if (!opt.all) {\n            return withExt;\n          }\n          found.push(withExt);\n        }\n      }\n    }\n    if (opt.all && found.length) {\n      return found;\n    }\n    if (opt.nothrow) {\n      return null;\n    }\n    throw getNotFoundError(cmd);\n  };\n  var whichSync = (cmd, opt = {}) => {\n    const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt);\n    const found = [];\n    for (const pathEnvPart of pathEnv) {\n      const p = getPathPart(pathEnvPart, cmd);\n      for (const ext of pathExt) {\n        const withExt = p + ext;\n        const is = isexe.sync(withExt, { pathExt: pathExtExe, ignoreErrors: true });\n        if (is) {\n          if (!opt.all) {\n            return withExt;\n          }\n          found.push(withExt);\n        }\n      }\n    }\n    if (opt.all && found.length) {\n      return found;\n    }\n    if (opt.nothrow) {\n      return null;\n    }\n    throw getNotFoundError(cmd);\n  };\n  module.exports = which;\n  which.sync = whichSync;\n});\n\n// node_modules/@npmcli/promise-spawn/lib/escape.js\nvar require_escape2 = __commonJS((exports, module) => {\n  var cmd = (input, doubleEscape) => {\n    if (!input.length) {\n      return '\"\"';\n    }\n    let result;\n    if (!/[ \\t\\n\\v\"]/.test(input)) {\n      result = input;\n    } else {\n      result = '\"';\n      for (let i = 0;i <= input.length; ++i) {\n        let slashCount = 0;\n        while (input[i] === \"\\\\\") {\n          ++i;\n          ++slashCount;\n        }\n        if (i === input.length) {\n          result += \"\\\\\".repeat(slashCount * 2);\n          break;\n        }\n        if (input[i] === '\"') {\n          result += \"\\\\\".repeat(slashCount * 2 + 1);\n          result += input[i];\n        } else {\n          result += \"\\\\\".repeat(slashCount);\n          result += input[i];\n        }\n      }\n      result += '\"';\n    }\n    result = result.replace(/[ !%^&()<>|\"]/g, \"^$&\");\n    if (doubleEscape) {\n      result = result.replace(/[ !%^&()<>|\"]/g, \"^$&\");\n    }\n    return result;\n  };\n  var sh = (input) => {\n    if (!input.length) {\n      return `''`;\n    }\n    if (!/[\\t\\n\\r \"#$&'()*;<>?\\\\`|~]/.test(input)) {\n      return input;\n    }\n    const result = `'${input.replace(/'/g, `'\\\\''`)}'`.replace(/^(?:'')+(?!$)/, \"\").replace(/\\\\'''/g, `\\\\'`);\n    return result;\n  };\n  module.exports = {\n    cmd,\n    sh\n  };\n});\n\n// node_modules/@npmcli/promise-spawn/lib/index.js\nvar require_lib8 = __commonJS((exports, module) => {\n  var { spawn } = __require(\"child_process\");\n  var os = __require(\"os\");\n  var which = require_lib7();\n  var escape = require_escape2();\n  var promiseSpawn = (cmd, args, opts = {}, extra = {}) => {\n    if (opts.shell) {\n      return spawnWithShell(cmd, args, opts, extra);\n    }\n    let proc;\n    const p = new Promise((res, rej) => {\n      proc = spawn(cmd, args, opts);\n      const stdout = [];\n      const stderr = [];\n      const reject = (er) => rej(Object.assign(er, {\n        cmd,\n        args,\n        ...stdioResult(stdout, stderr, opts),\n        ...extra\n      }));\n      proc.on(\"error\", reject);\n      if (proc.stdout) {\n        proc.stdout.on(\"data\", (c) => stdout.push(c)).on(\"error\", reject);\n        proc.stdout.on(\"error\", (er) => reject(er));\n      }\n      if (proc.stderr) {\n        proc.stderr.on(\"data\", (c) => stderr.push(c)).on(\"error\", reject);\n        proc.stderr.on(\"error\", (er) => reject(er));\n      }\n      proc.on(\"close\", (code, signal) => {\n        const result = {\n          cmd,\n          args,\n          code,\n          signal,\n          ...stdioResult(stdout, stderr, opts),\n          ...extra\n        };\n        if (code || signal) {\n          rej(Object.assign(new Error(\"command failed\"), result));\n        } else {\n          res(result);\n        }\n      });\n    });\n    p.stdin = proc.stdin;\n    p.process = proc;\n    return p;\n  };\n  var spawnWithShell = (cmd, args, opts, extra) => {\n    let command = opts.shell;\n    if (command === true) {\n      command = process.platform === \"win32\" ? process.env.ComSpec : \"sh\";\n    }\n    const options = { ...opts, shell: false };\n    const realArgs = [];\n    let script = cmd;\n    const isCmd = /(?:^|\\\\)cmd(?:\\.exe)?$/i.test(command);\n    if (isCmd) {\n      let doubleEscape = false;\n      let initialCmd = \"\";\n      let insideQuotes = false;\n      for (let i = 0;i < cmd.length; ++i) {\n        const char = cmd.charAt(i);\n        if (char === \" \" && !insideQuotes) {\n          break;\n        }\n        initialCmd += char;\n        if (char === '\"' || char === \"'\") {\n          insideQuotes = !insideQuotes;\n        }\n      }\n      let pathToInitial;\n      try {\n        pathToInitial = which.sync(initialCmd, {\n          path: options.env && options.env.PATH || process.env.PATH,\n          pathext: options.env && options.env.PATHEXT || process.env.PATHEXT\n        }).toLowerCase();\n      } catch (err) {\n        pathToInitial = initialCmd.toLowerCase();\n      }\n      doubleEscape = pathToInitial.endsWith(\".cmd\") || pathToInitial.endsWith(\".bat\");\n      for (const arg of args) {\n        script += ` ${escape.cmd(arg, doubleEscape)}`;\n      }\n      realArgs.push(\"/d\", \"/s\", \"/c\", script);\n      options.windowsVerbatimArguments = true;\n    } else {\n      for (const arg of args) {\n        script += ` ${escape.sh(arg)}`;\n      }\n      realArgs.push(\"-c\", script);\n    }\n    return promiseSpawn(command, realArgs, options, extra);\n  };\n  var open = (_args, opts = {}, extra = {}) => {\n    const options = { ...opts, shell: true };\n    const args = [].concat(_args);\n    let platform = process.platform;\n    if (platform === \"linux\" && os.release().toLowerCase().includes(\"microsoft\")) {\n      platform = \"win32\";\n    }\n    let command = options.command;\n    if (!command) {\n      if (platform === \"win32\") {\n        options.shell = process.env.ComSpec;\n        command = 'start \"\"';\n      } else if (platform === \"darwin\") {\n        command = \"open\";\n      } else {\n        command = \"xdg-open\";\n      }\n    }\n    return spawnWithShell(command, args, options, extra);\n  };\n  promiseSpawn.open = open;\n  var isPipe = (stdio = \"pipe\", fd) => {\n    if (stdio === \"pipe\" || stdio === null) {\n      return true;\n    }\n    if (Array.isArray(stdio)) {\n      return isPipe(stdio[fd], fd);\n    }\n    return false;\n  };\n  var stdioResult = (stdout, stderr, { stdioString = true, stdio }) => {\n    const result = {\n      stdout: null,\n      stderr: null\n    };\n    if (isPipe(stdio, 1)) {\n      result.stdout = Buffer.concat(stdout);\n      if (stdioString) {\n        result.stdout = result.stdout.toString().trim();\n      }\n    }\n    if (isPipe(stdio, 2)) {\n      result.stderr = Buffer.concat(stderr);\n      if (stdioString) {\n        result.stderr = result.stderr.toString().trim();\n      }\n    }\n    return result;\n  };\n  module.exports = promiseSpawn;\n});\n\n// node_modules/err-code/index.js\nvar require_err_code = __commonJS((exports, module) => {\n  var assign = function(obj, props) {\n    for (const key in props) {\n      Object.defineProperty(obj, key, {\n        value: props[key],\n        enumerable: true,\n        configurable: true\n      });\n    }\n    return obj;\n  };\n  var createError = function(err, code, props) {\n    if (!err || typeof err === \"string\") {\n      throw new TypeError(\"Please pass an Error to err-code\");\n    }\n    if (!props) {\n      props = {};\n    }\n    if (typeof code === \"object\") {\n      props = code;\n      code = undefined;\n    }\n    if (code != null) {\n      props.code = code;\n    }\n    try {\n      return assign(err, props);\n    } catch (_) {\n      props.message = err.message;\n      props.stack = err.stack;\n      const ErrClass = function() {\n      };\n      ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n      return assign(new ErrClass, props);\n    }\n  };\n  module.exports = createError;\n});\n\n// node_modules/retry/lib/retry_operation.js\nvar require_retry_operation = __commonJS((exports, module) => {\n  var RetryOperation = function(timeouts, options) {\n    if (typeof options === \"boolean\") {\n      options = { forever: options };\n    }\n    this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n    this._timeouts = timeouts;\n    this._options = options || {};\n    this._maxRetryTime = options && options.maxRetryTime || Infinity;\n    this._fn = null;\n    this._errors = [];\n    this._attempts = 1;\n    this._operationTimeout = null;\n    this._operationTimeoutCb = null;\n    this._timeout = null;\n    this._operationStart = null;\n    if (this._options.forever) {\n      this._cachedTimeouts = this._timeouts.slice(0);\n    }\n  };\n  module.exports = RetryOperation;\n  RetryOperation.prototype.reset = function() {\n    this._attempts = 1;\n    this._timeouts = this._originalTimeouts;\n  };\n  RetryOperation.prototype.stop = function() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    this._timeouts = [];\n    this._cachedTimeouts = null;\n  };\n  RetryOperation.prototype.retry = function(err) {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    if (!err) {\n      return false;\n    }\n    var currentTime = new Date().getTime();\n    if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n      this._errors.unshift(new Error(\"RetryOperation timeout occurred\"));\n      return false;\n    }\n    this._errors.push(err);\n    var timeout = this._timeouts.shift();\n    if (timeout === undefined) {\n      if (this._cachedTimeouts) {\n        this._errors.splice(this._errors.length - 1, this._errors.length);\n        this._timeouts = this._cachedTimeouts.slice(0);\n        timeout = this._timeouts.shift();\n      } else {\n        return false;\n      }\n    }\n    var self = this;\n    var timer = setTimeout(function() {\n      self._attempts++;\n      if (self._operationTimeoutCb) {\n        self._timeout = setTimeout(function() {\n          self._operationTimeoutCb(self._attempts);\n        }, self._operationTimeout);\n        if (self._options.unref) {\n          self._timeout.unref();\n        }\n      }\n      self._fn(self._attempts);\n    }, timeout);\n    if (this._options.unref) {\n      timer.unref();\n    }\n    return true;\n  };\n  RetryOperation.prototype.attempt = function(fn, timeoutOps) {\n    this._fn = fn;\n    if (timeoutOps) {\n      if (timeoutOps.timeout) {\n        this._operationTimeout = timeoutOps.timeout;\n      }\n      if (timeoutOps.cb) {\n        this._operationTimeoutCb = timeoutOps.cb;\n      }\n    }\n    var self = this;\n    if (this._operationTimeoutCb) {\n      this._timeout = setTimeout(function() {\n        self._operationTimeoutCb();\n      }, self._operationTimeout);\n    }\n    this._operationStart = new Date().getTime();\n    this._fn(this._attempts);\n  };\n  RetryOperation.prototype.try = function(fn) {\n    console.log(\"Using RetryOperation.try() is deprecated\");\n    this.attempt(fn);\n  };\n  RetryOperation.prototype.start = function(fn) {\n    console.log(\"Using RetryOperation.start() is deprecated\");\n    this.attempt(fn);\n  };\n  RetryOperation.prototype.start = RetryOperation.prototype.try;\n  RetryOperation.prototype.errors = function() {\n    return this._errors;\n  };\n  RetryOperation.prototype.attempts = function() {\n    return this._attempts;\n  };\n  RetryOperation.prototype.mainError = function() {\n    if (this._errors.length === 0) {\n      return null;\n    }\n    var counts = {};\n    var mainError = null;\n    var mainErrorCount = 0;\n    for (var i = 0;i < this._errors.length; i++) {\n      var error = this._errors[i];\n      var message = error.message;\n      var count = (counts[message] || 0) + 1;\n      counts[message] = count;\n      if (count >= mainErrorCount) {\n        mainError = error;\n        mainErrorCount = count;\n      }\n    }\n    return mainError;\n  };\n});\n\n// node_modules/retry/lib/retry.js\nvar require_retry = __commonJS((exports) => {\n  var RetryOperation = require_retry_operation();\n  exports.operation = function(options) {\n    var timeouts = exports.timeouts(options);\n    return new RetryOperation(timeouts, {\n      forever: options && options.forever,\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n    });\n  };\n  exports.timeouts = function(options) {\n    if (options instanceof Array) {\n      return [].concat(options);\n    }\n    var opts = {\n      retries: 10,\n      factor: 2,\n      minTimeout: 1 * 1000,\n      maxTimeout: Infinity,\n      randomize: false\n    };\n    for (var key in options) {\n      opts[key] = options[key];\n    }\n    if (opts.minTimeout > opts.maxTimeout) {\n      throw new Error(\"minTimeout is greater than maxTimeout\");\n    }\n    var timeouts = [];\n    for (var i = 0;i < opts.retries; i++) {\n      timeouts.push(this.createTimeout(i, opts));\n    }\n    if (options && options.forever && !timeouts.length) {\n      timeouts.push(this.createTimeout(i, opts));\n    }\n    timeouts.sort(function(a, b) {\n      return a - b;\n    });\n    return timeouts;\n  };\n  exports.createTimeout = function(attempt, opts) {\n    var random = opts.randomize ? Math.random() + 1 : 1;\n    var timeout = Math.round(random * opts.minTimeout * Math.pow(opts.factor, attempt));\n    timeout = Math.min(timeout, opts.maxTimeout);\n    return timeout;\n  };\n  exports.wrap = function(obj, options, methods) {\n    if (options instanceof Array) {\n      methods = options;\n      options = null;\n    }\n    if (!methods) {\n      methods = [];\n      for (var key in obj) {\n        if (typeof obj[key] === \"function\") {\n          methods.push(key);\n        }\n      }\n    }\n    for (var i = 0;i < methods.length; i++) {\n      var method = methods[i];\n      var original = obj[method];\n      obj[method] = function retryWrapper(original2) {\n        var op = exports.operation(options);\n        var args = Array.prototype.slice.call(arguments, 1);\n        var callback = args.pop();\n        args.push(function(err) {\n          if (op.retry(err)) {\n            return;\n          }\n          if (err) {\n            arguments[0] = op.mainError();\n          }\n          callback.apply(this, arguments);\n        });\n        op.attempt(function() {\n          original2.apply(obj, args);\n        });\n      }.bind(obj, original);\n      obj[method].options = options;\n    }\n  };\n});\n\n// node_modules/promise-retry/index.js\nvar require_promise_retry = __commonJS((exports, module) => {\n  var isRetryError = function(err) {\n    return err && err.code === \"EPROMISERETRY\" && hasOwn.call(err, \"retried\");\n  };\n  var promiseRetry = function(fn, options) {\n    var temp;\n    var operation;\n    if (typeof fn === \"object\" && typeof options === \"function\") {\n      temp = options;\n      options = fn;\n      fn = temp;\n    }\n    operation = retry.operation(options);\n    return new Promise(function(resolve, reject) {\n      operation.attempt(function(number) {\n        Promise.resolve().then(function() {\n          return fn(function(err) {\n            if (isRetryError(err)) {\n              err = err.retried;\n            }\n            throw errcode(new Error(\"Retrying\"), \"EPROMISERETRY\", { retried: err });\n          }, number);\n        }).then(resolve, function(err) {\n          if (isRetryError(err)) {\n            err = err.retried;\n            if (operation.retry(err || new Error)) {\n              return;\n            }\n          }\n          reject(err);\n        });\n      });\n    });\n  };\n  var errcode = require_err_code();\n  var retry = require_retry();\n  var hasOwn = Object.prototype.hasOwnProperty;\n  module.exports = promiseRetry;\n});\n\n// node_modules/@npmcli/git/lib/errors.js\nvar require_errors = __commonJS((exports, module) => {\n  var maxRetry = 3;\n\n  class GitError extends Error {\n    shouldRetry() {\n      return false;\n    }\n  }\n\n  class GitConnectionError extends GitError {\n    constructor(message) {\n      super(\"A git connection error occurred\");\n    }\n    shouldRetry(number) {\n      return number < maxRetry;\n    }\n  }\n\n  class GitPathspecError extends GitError {\n    constructor(message) {\n      super(\"The git reference could not be found\");\n    }\n  }\n\n  class GitUnknownError extends GitError {\n    constructor(message) {\n      super(\"An unknown git error occurred\");\n    }\n  }\n  module.exports = {\n    GitConnectionError,\n    GitPathspecError,\n    GitUnknownError\n  };\n});\n\n// node_modules/@npmcli/git/lib/make-error.js\nvar require_make_error = __commonJS((exports, module) => {\n  var makeError = function(er) {\n    const message = er.stderr;\n    let gitEr;\n    if (connectionErrorRe.test(message)) {\n      gitEr = new GitConnectionError(message);\n    } else if (missingPathspecRe.test(message)) {\n      gitEr = new GitPathspecError(message);\n    } else {\n      gitEr = new GitUnknownError(message);\n    }\n    return Object.assign(gitEr, er);\n  };\n  var {\n    GitConnectionError,\n    GitPathspecError,\n    GitUnknownError\n  } = require_errors();\n  var connectionErrorRe = new RegExp([\n    \"remote error: Internal Server Error\",\n    \"The remote end hung up unexpectedly\",\n    \"Connection timed out\",\n    \"Operation timed out\",\n    \"Failed to connect to .* Timed out\",\n    \"Connection reset by peer\",\n    \"SSL_ERROR_SYSCALL\",\n    \"The requested URL returned error: 503\"\n  ].join(\"|\"));\n  var missingPathspecRe = /pathspec .* did not match any file\\(s\\) known to git/;\n  module.exports = makeError;\n});\n\n// node_modules/@npmcli/git/node_modules/which/lib/index.js\nvar require_lib9 = __commonJS((exports, module) => {\n  var isexe = require_isexe();\n  var { join, delimiter, sep, posix } = __require(\"path\");\n  var isWindows = process.platform === \"win32\";\n  var rSlash = new RegExp(`[${posix.sep}${sep === posix.sep ? \"\" : sep}]`.replace(/(\\\\)/g, \"\\\\$1\"));\n  var rRel = new RegExp(`^\\\\.${rSlash.source}`);\n  var getNotFoundError = (cmd) => Object.assign(new Error(`not found: ${cmd}`), { code: \"ENOENT\" });\n  var getPathInfo = (cmd, {\n    path: optPath = process.env.PATH,\n    pathExt: optPathExt = process.env.PATHEXT,\n    delimiter: optDelimiter = delimiter\n  }) => {\n    const pathEnv = cmd.match(rSlash) ? [\"\"] : [\n      ...isWindows ? [process.cwd()] : [],\n      ...(optPath || \"\").split(optDelimiter)\n    ];\n    if (isWindows) {\n      const pathExtExe = optPathExt || [\".EXE\", \".CMD\", \".BAT\", \".COM\"].join(optDelimiter);\n      const pathExt = pathExtExe.split(optDelimiter).reduce((acc, item) => {\n        acc.push(item);\n        acc.push(item.toLowerCase());\n        return acc;\n      }, []);\n      if (cmd.includes(\".\") && pathExt[0] !== \"\") {\n        pathExt.unshift(\"\");\n      }\n      return { pathEnv, pathExt, pathExtExe };\n    }\n    return { pathEnv, pathExt: [\"\"] };\n  };\n  var getPathPart = (raw, cmd) => {\n    const pathPart = /^\".*\"$/.test(raw) ? raw.slice(1, -1) : raw;\n    const prefix = !pathPart && rRel.test(cmd) ? cmd.slice(0, 2) : \"\";\n    return prefix + join(pathPart, cmd);\n  };\n  var which = async (cmd, opt = {}) => {\n    const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt);\n    const found = [];\n    for (const envPart of pathEnv) {\n      const p = getPathPart(envPart, cmd);\n      for (const ext of pathExt) {\n        const withExt = p + ext;\n        const is = await isexe(withExt, { pathExt: pathExtExe, ignoreErrors: true });\n        if (is) {\n          if (!opt.all) {\n            return withExt;\n          }\n          found.push(withExt);\n        }\n      }\n    }\n    if (opt.all && found.length) {\n      return found;\n    }\n    if (opt.nothrow) {\n      return null;\n    }\n    throw getNotFoundError(cmd);\n  };\n  var whichSync = (cmd, opt = {}) => {\n    const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt);\n    const found = [];\n    for (const pathEnvPart of pathEnv) {\n      const p = getPathPart(pathEnvPart, cmd);\n      for (const ext of pathExt) {\n        const withExt = p + ext;\n        const is = isexe.sync(withExt, { pathExt: pathExtExe, ignoreErrors: true });\n        if (is) {\n          if (!opt.all) {\n            return withExt;\n          }\n          found.push(withExt);\n        }\n      }\n    }\n    if (opt.all && found.length) {\n      return found;\n    }\n    if (opt.nothrow) {\n      return null;\n    }\n    throw getNotFoundError(cmd);\n  };\n  module.exports = which;\n  which.sync = whichSync;\n});\n\n// node_modules/@npmcli/git/lib/which.js\nvar require_which = __commonJS((exports, module) => {\n  var which = require_lib9();\n  var gitPath;\n  try {\n    gitPath = which.sync(\"git\");\n  } catch {\n  }\n  module.exports = (opts = {}) => {\n    if (opts.git) {\n      return opts.git;\n    }\n    if (!gitPath || opts.git === false) {\n      return Object.assign(new Error(\"No git binary found in $PATH\"), { code: \"ENOGIT\" });\n    }\n    return gitPath;\n  };\n});\n\n// node_modules/@npmcli/git/lib/opts.js\nvar require_opts = __commonJS((exports, module) => {\n  var gitEnv = {\n    GIT_ASKPASS: \"echo\",\n    GIT_SSH_COMMAND: \"ssh -oStrictHostKeyChecking=accept-new\"\n  };\n  module.exports = (opts = {}) => ({\n    stdioString: true,\n    ...opts,\n    shell: false,\n    env: opts.env || { ...gitEnv, ...process.env }\n  });\n});\n\n// node_modules/@npmcli/git/lib/spawn.js\nvar require_spawn = __commonJS((exports, module) => {\n  var spawn = require_lib8();\n  var promiseRetry = require_promise_retry();\n  var log = require_lib6();\n  var makeError = require_make_error();\n  var whichGit = require_which();\n  var makeOpts = require_opts();\n  module.exports = (gitArgs, opts = {}) => {\n    const gitPath = whichGit(opts);\n    if (gitPath instanceof Error) {\n      return Promise.reject(gitPath);\n    }\n    const args = opts.allowReplace || gitArgs[0] === \"--no-replace-objects\" ? gitArgs : [\"--no-replace-objects\", ...gitArgs];\n    let retryOpts = opts.retry;\n    if (retryOpts === null || retryOpts === undefined) {\n      retryOpts = {\n        retries: opts.fetchRetries || 2,\n        factor: opts.fetchRetryFactor || 10,\n        maxTimeout: opts.fetchRetryMaxtimeout || 60000,\n        minTimeout: opts.fetchRetryMintimeout || 1000\n      };\n    }\n    return promiseRetry((retryFn, number) => {\n      if (number !== 1) {\n        log.silly(\"git\", `Retrying git command: ${args.join(\" \")} attempt # ${number}`);\n      }\n      return spawn(gitPath, args, makeOpts(opts)).catch((er) => {\n        const gitError = makeError(er);\n        if (!gitError.shouldRetry(number)) {\n          throw gitError;\n        }\n        retryFn(gitError);\n      });\n    }, retryOpts);\n  };\n});\n\n// node_modules/@npmcli/git/node_modules/lru-cache/index.js\nvar require_lru_cache2 = __commonJS((exports, module) => {\n  var perf = typeof performance === \"object\" && performance && typeof performance.now === \"function\" ? performance : Date;\n  var hasAbortController = typeof AbortController === \"function\";\n  var AC = hasAbortController ? AbortController : class AbortController2 {\n    constructor() {\n      this.signal = new AS;\n    }\n    abort(reason = new Error(\"This operation was aborted\")) {\n      this.signal.reason = this.signal.reason || reason;\n      this.signal.aborted = true;\n      this.signal.dispatchEvent({\n        type: \"abort\",\n        target: this.signal\n      });\n    }\n  };\n  var hasAbortSignal = typeof AbortSignal === \"function\";\n  var hasACAbortSignal = typeof AC.AbortSignal === \"function\";\n  var AS = hasAbortSignal ? AbortSignal : hasACAbortSignal ? AC.AbortController : class AbortSignal2 {\n    constructor() {\n      this.reason = undefined;\n      this.aborted = false;\n      this._listeners = [];\n    }\n    dispatchEvent(e) {\n      if (e.type === \"abort\") {\n        this.aborted = true;\n        this.onabort(e);\n        this._listeners.forEach((f) => f(e), this);\n      }\n    }\n    onabort() {\n    }\n    addEventListener(ev, fn) {\n      if (ev === \"abort\") {\n        this._listeners.push(fn);\n      }\n    }\n    removeEventListener(ev, fn) {\n      if (ev === \"abort\") {\n        this._listeners = this._listeners.filter((f) => f !== fn);\n      }\n    }\n  };\n  var warned = new Set;\n  var deprecatedOption = (opt, instead) => {\n    const code = `LRU_CACHE_OPTION_${opt}`;\n    if (shouldWarn(code)) {\n      warn(code, `${opt} option`, `options.${instead}`, LRUCache);\n    }\n  };\n  var deprecatedMethod = (method, instead) => {\n    const code = `LRU_CACHE_METHOD_${method}`;\n    if (shouldWarn(code)) {\n      const { prototype } = LRUCache;\n      const { get } = Object.getOwnPropertyDescriptor(prototype, method);\n      warn(code, `${method} method`, `cache.${instead}()`, get);\n    }\n  };\n  var deprecatedProperty = (field, instead) => {\n    const code = `LRU_CACHE_PROPERTY_${field}`;\n    if (shouldWarn(code)) {\n      const { prototype } = LRUCache;\n      const { get } = Object.getOwnPropertyDescriptor(prototype, field);\n      warn(code, `${field} property`, `cache.${instead}`, get);\n    }\n  };\n  var emitWarning = (...a) => {\n    typeof process === \"object\" && process && typeof process.emitWarning === \"function\" ? process.emitWarning(...a) : console.error(...a);\n  };\n  var shouldWarn = (code) => !warned.has(code);\n  var warn = (code, what, instead, fn) => {\n    warned.add(code);\n    const msg = `The ${what} is deprecated. Please use ${instead} instead.`;\n    emitWarning(msg, \"DeprecationWarning\", code, fn);\n  };\n  var isPosInt = (n) => n && n === Math.floor(n) && n > 0 && isFinite(n);\n  var getUintArray = (max) => !isPosInt(max) ? null : max <= Math.pow(2, 8) ? Uint8Array : max <= Math.pow(2, 16) ? Uint16Array : max <= Math.pow(2, 32) ? Uint32Array : max <= Number.MAX_SAFE_INTEGER ? ZeroArray : null;\n\n  class ZeroArray extends Array {\n    constructor(size) {\n      super(size);\n      this.fill(0);\n    }\n  }\n\n  class Stack {\n    constructor(max) {\n      if (max === 0) {\n        return [];\n      }\n      const UintArray = getUintArray(max);\n      this.heap = new UintArray(max);\n      this.length = 0;\n    }\n    push(n) {\n      this.heap[this.length++] = n;\n    }\n    pop() {\n      return this.heap[--this.length];\n    }\n  }\n\n  class LRUCache {\n    constructor(options = {}) {\n      const {\n        max = 0,\n        ttl,\n        ttlResolution = 1,\n        ttlAutopurge,\n        updateAgeOnGet,\n        updateAgeOnHas,\n        allowStale,\n        dispose,\n        disposeAfter,\n        noDisposeOnSet,\n        noUpdateTTL,\n        maxSize = 0,\n        maxEntrySize = 0,\n        sizeCalculation,\n        fetchMethod,\n        fetchContext,\n        noDeleteOnFetchRejection,\n        noDeleteOnStaleGet,\n        allowStaleOnFetchRejection,\n        allowStaleOnFetchAbort,\n        ignoreFetchAbort\n      } = options;\n      const { length, maxAge, stale } = options instanceof LRUCache ? {} : options;\n      if (max !== 0 && !isPosInt(max)) {\n        throw new TypeError(\"max option must be a nonnegative integer\");\n      }\n      const UintArray = max ? getUintArray(max) : Array;\n      if (!UintArray) {\n        throw new Error(\"invalid max value: \" + max);\n      }\n      this.max = max;\n      this.maxSize = maxSize;\n      this.maxEntrySize = maxEntrySize || this.maxSize;\n      this.sizeCalculation = sizeCalculation || length;\n      if (this.sizeCalculation) {\n        if (!this.maxSize && !this.maxEntrySize) {\n          throw new TypeError(\"cannot set sizeCalculation without setting maxSize or maxEntrySize\");\n        }\n        if (typeof this.sizeCalculation !== \"function\") {\n          throw new TypeError(\"sizeCalculation set to non-function\");\n        }\n      }\n      this.fetchMethod = fetchMethod || null;\n      if (this.fetchMethod && typeof this.fetchMethod !== \"function\") {\n        throw new TypeError(\"fetchMethod must be a function if specified\");\n      }\n      this.fetchContext = fetchContext;\n      if (!this.fetchMethod && fetchContext !== undefined) {\n        throw new TypeError(\"cannot set fetchContext without fetchMethod\");\n      }\n      this.keyMap = new Map;\n      this.keyList = new Array(max).fill(null);\n      this.valList = new Array(max).fill(null);\n      this.next = new UintArray(max);\n      this.prev = new UintArray(max);\n      this.head = 0;\n      this.tail = 0;\n      this.free = new Stack(max);\n      this.initialFill = 1;\n      this.size = 0;\n      if (typeof dispose === \"function\") {\n        this.dispose = dispose;\n      }\n      if (typeof disposeAfter === \"function\") {\n        this.disposeAfter = disposeAfter;\n        this.disposed = [];\n      } else {\n        this.disposeAfter = null;\n        this.disposed = null;\n      }\n      this.noDisposeOnSet = !!noDisposeOnSet;\n      this.noUpdateTTL = !!noUpdateTTL;\n      this.noDeleteOnFetchRejection = !!noDeleteOnFetchRejection;\n      this.allowStaleOnFetchRejection = !!allowStaleOnFetchRejection;\n      this.allowStaleOnFetchAbort = !!allowStaleOnFetchAbort;\n      this.ignoreFetchAbort = !!ignoreFetchAbort;\n      if (this.maxEntrySize !== 0) {\n        if (this.maxSize !== 0) {\n          if (!isPosInt(this.maxSize)) {\n            throw new TypeError(\"maxSize must be a positive integer if specified\");\n          }\n        }\n        if (!isPosInt(this.maxEntrySize)) {\n          throw new TypeError(\"maxEntrySize must be a positive integer if specified\");\n        }\n        this.initializeSizeTracking();\n      }\n      this.allowStale = !!allowStale || !!stale;\n      this.noDeleteOnStaleGet = !!noDeleteOnStaleGet;\n      this.updateAgeOnGet = !!updateAgeOnGet;\n      this.updateAgeOnHas = !!updateAgeOnHas;\n      this.ttlResolution = isPosInt(ttlResolution) || ttlResolution === 0 ? ttlResolution : 1;\n      this.ttlAutopurge = !!ttlAutopurge;\n      this.ttl = ttl || maxAge || 0;\n      if (this.ttl) {\n        if (!isPosInt(this.ttl)) {\n          throw new TypeError(\"ttl must be a positive integer if specified\");\n        }\n        this.initializeTTLTracking();\n      }\n      if (this.max === 0 && this.ttl === 0 && this.maxSize === 0) {\n        throw new TypeError(\"At least one of max, maxSize, or ttl is required\");\n      }\n      if (!this.ttlAutopurge && !this.max && !this.maxSize) {\n        const code = \"LRU_CACHE_UNBOUNDED\";\n        if (shouldWarn(code)) {\n          warned.add(code);\n          const msg = \"TTL caching without ttlAutopurge, max, or maxSize can result in unbounded memory consumption.\";\n          emitWarning(msg, \"UnboundedCacheWarning\", code, LRUCache);\n        }\n      }\n      if (stale) {\n        deprecatedOption(\"stale\", \"allowStale\");\n      }\n      if (maxAge) {\n        deprecatedOption(\"maxAge\", \"ttl\");\n      }\n      if (length) {\n        deprecatedOption(\"length\", \"sizeCalculation\");\n      }\n    }\n    getRemainingTTL(key) {\n      return this.has(key, { updateAgeOnHas: false }) ? Infinity : 0;\n    }\n    initializeTTLTracking() {\n      this.ttls = new ZeroArray(this.max);\n      this.starts = new ZeroArray(this.max);\n      this.setItemTTL = (index, ttl, start = perf.now()) => {\n        this.starts[index] = ttl !== 0 ? start : 0;\n        this.ttls[index] = ttl;\n        if (ttl !== 0 && this.ttlAutopurge) {\n          const t = setTimeout(() => {\n            if (this.isStale(index)) {\n              this.delete(this.keyList[index]);\n            }\n          }, ttl + 1);\n          if (t.unref) {\n            t.unref();\n          }\n        }\n      };\n      this.updateItemAge = (index) => {\n        this.starts[index] = this.ttls[index] !== 0 ? perf.now() : 0;\n      };\n      this.statusTTL = (status, index) => {\n        if (status) {\n          status.ttl = this.ttls[index];\n          status.start = this.starts[index];\n          status.now = cachedNow || getNow();\n          status.remainingTTL = status.now + status.ttl - status.start;\n        }\n      };\n      let cachedNow = 0;\n      const getNow = () => {\n        const n = perf.now();\n        if (this.ttlResolution > 0) {\n          cachedNow = n;\n          const t = setTimeout(() => cachedNow = 0, this.ttlResolution);\n          if (t.unref) {\n            t.unref();\n          }\n        }\n        return n;\n      };\n      this.getRemainingTTL = (key) => {\n        const index = this.keyMap.get(key);\n        if (index === undefined) {\n          return 0;\n        }\n        return this.ttls[index] === 0 || this.starts[index] === 0 ? Infinity : this.starts[index] + this.ttls[index] - (cachedNow || getNow());\n      };\n      this.isStale = (index) => {\n        return this.ttls[index] !== 0 && this.starts[index] !== 0 && (cachedNow || getNow()) - this.starts[index] > this.ttls[index];\n      };\n    }\n    updateItemAge(_index) {\n    }\n    statusTTL(_status, _index) {\n    }\n    setItemTTL(_index, _ttl, _start) {\n    }\n    isStale(_index) {\n      return false;\n    }\n    initializeSizeTracking() {\n      this.calculatedSize = 0;\n      this.sizes = new ZeroArray(this.max);\n      this.removeItemSize = (index) => {\n        this.calculatedSize -= this.sizes[index];\n        this.sizes[index] = 0;\n      };\n      this.requireSize = (k, v, size, sizeCalculation) => {\n        if (this.isBackgroundFetch(v)) {\n          return 0;\n        }\n        if (!isPosInt(size)) {\n          if (sizeCalculation) {\n            if (typeof sizeCalculation !== \"function\") {\n              throw new TypeError(\"sizeCalculation must be a function\");\n            }\n            size = sizeCalculation(v, k);\n            if (!isPosInt(size)) {\n              throw new TypeError(\"sizeCalculation return invalid (expect positive integer)\");\n            }\n          } else {\n            throw new TypeError(\"invalid size value (must be positive integer). When maxSize or maxEntrySize is used, sizeCalculation or size must be set.\");\n          }\n        }\n        return size;\n      };\n      this.addItemSize = (index, size, status) => {\n        this.sizes[index] = size;\n        if (this.maxSize) {\n          const maxSize = this.maxSize - this.sizes[index];\n          while (this.calculatedSize > maxSize) {\n            this.evict(true);\n          }\n        }\n        this.calculatedSize += this.sizes[index];\n        if (status) {\n          status.entrySize = size;\n          status.totalCalculatedSize = this.calculatedSize;\n        }\n      };\n    }\n    removeItemSize(_index) {\n    }\n    addItemSize(_index, _size) {\n    }\n    requireSize(_k, _v, size, sizeCalculation) {\n      if (size || sizeCalculation) {\n        throw new TypeError(\"cannot set size without setting maxSize or maxEntrySize on cache\");\n      }\n    }\n    *indexes({ allowStale = this.allowStale } = {}) {\n      if (this.size) {\n        for (let i = this.tail;; ) {\n          if (!this.isValidIndex(i)) {\n            break;\n          }\n          if (allowStale || !this.isStale(i)) {\n            yield i;\n          }\n          if (i === this.head) {\n            break;\n          } else {\n            i = this.prev[i];\n          }\n        }\n      }\n    }\n    *rindexes({ allowStale = this.allowStale } = {}) {\n      if (this.size) {\n        for (let i = this.head;; ) {\n          if (!this.isValidIndex(i)) {\n            break;\n          }\n          if (allowStale || !this.isStale(i)) {\n            yield i;\n          }\n          if (i === this.tail) {\n            break;\n          } else {\n            i = this.next[i];\n          }\n        }\n      }\n    }\n    isValidIndex(index) {\n      return index !== undefined && this.keyMap.get(this.keyList[index]) === index;\n    }\n    *entries() {\n      for (const i of this.indexes()) {\n        if (this.valList[i] !== undefined && this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield [this.keyList[i], this.valList[i]];\n        }\n      }\n    }\n    *rentries() {\n      for (const i of this.rindexes()) {\n        if (this.valList[i] !== undefined && this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield [this.keyList[i], this.valList[i]];\n        }\n      }\n    }\n    *keys() {\n      for (const i of this.indexes()) {\n        if (this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.keyList[i];\n        }\n      }\n    }\n    *rkeys() {\n      for (const i of this.rindexes()) {\n        if (this.keyList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.keyList[i];\n        }\n      }\n    }\n    *values() {\n      for (const i of this.indexes()) {\n        if (this.valList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.valList[i];\n        }\n      }\n    }\n    *rvalues() {\n      for (const i of this.rindexes()) {\n        if (this.valList[i] !== undefined && !this.isBackgroundFetch(this.valList[i])) {\n          yield this.valList[i];\n        }\n      }\n    }\n    [Symbol.iterator]() {\n      return this.entries();\n    }\n    find(fn, getOptions) {\n      for (const i of this.indexes()) {\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        if (fn(value, this.keyList[i], this)) {\n          return this.get(this.keyList[i], getOptions);\n        }\n      }\n    }\n    forEach(fn, thisp = this) {\n      for (const i of this.indexes()) {\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        fn.call(thisp, value, this.keyList[i], this);\n      }\n    }\n    rforEach(fn, thisp = this) {\n      for (const i of this.rindexes()) {\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        fn.call(thisp, value, this.keyList[i], this);\n      }\n    }\n    get prune() {\n      deprecatedMethod(\"prune\", \"purgeStale\");\n      return this.purgeStale;\n    }\n    purgeStale() {\n      let deleted = false;\n      for (const i of this.rindexes({ allowStale: true })) {\n        if (this.isStale(i)) {\n          this.delete(this.keyList[i]);\n          deleted = true;\n        }\n      }\n      return deleted;\n    }\n    dump() {\n      const arr = [];\n      for (const i of this.indexes({ allowStale: true })) {\n        const key = this.keyList[i];\n        const v = this.valList[i];\n        const value = this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n        if (value === undefined)\n          continue;\n        const entry = { value };\n        if (this.ttls) {\n          entry.ttl = this.ttls[i];\n          const age = perf.now() - this.starts[i];\n          entry.start = Math.floor(Date.now() - age);\n        }\n        if (this.sizes) {\n          entry.size = this.sizes[i];\n        }\n        arr.unshift([key, entry]);\n      }\n      return arr;\n    }\n    load(arr) {\n      this.clear();\n      for (const [key, entry] of arr) {\n        if (entry.start) {\n          const age = Date.now() - entry.start;\n          entry.start = perf.now() - age;\n        }\n        this.set(key, entry.value, entry);\n      }\n    }\n    dispose(_v, _k, _reason) {\n    }\n    set(k, v, {\n      ttl = this.ttl,\n      start,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      status\n    } = {}) {\n      size = this.requireSize(k, v, size, sizeCalculation);\n      if (this.maxEntrySize && size > this.maxEntrySize) {\n        if (status) {\n          status.set = \"miss\";\n          status.maxEntrySizeExceeded = true;\n        }\n        this.delete(k);\n        return this;\n      }\n      let index = this.size === 0 ? undefined : this.keyMap.get(k);\n      if (index === undefined) {\n        index = this.newIndex();\n        this.keyList[index] = k;\n        this.valList[index] = v;\n        this.keyMap.set(k, index);\n        this.next[this.tail] = index;\n        this.prev[index] = this.tail;\n        this.tail = index;\n        this.size++;\n        this.addItemSize(index, size, status);\n        if (status) {\n          status.set = \"add\";\n        }\n        noUpdateTTL = false;\n      } else {\n        this.moveToTail(index);\n        const oldVal = this.valList[index];\n        if (v !== oldVal) {\n          if (this.isBackgroundFetch(oldVal)) {\n            oldVal.__abortController.abort(new Error(\"replaced\"));\n          } else {\n            if (!noDisposeOnSet) {\n              this.dispose(oldVal, k, \"set\");\n              if (this.disposeAfter) {\n                this.disposed.push([oldVal, k, \"set\"]);\n              }\n            }\n          }\n          this.removeItemSize(index);\n          this.valList[index] = v;\n          this.addItemSize(index, size, status);\n          if (status) {\n            status.set = \"replace\";\n            const oldValue = oldVal && this.isBackgroundFetch(oldVal) ? oldVal.__staleWhileFetching : oldVal;\n            if (oldValue !== undefined)\n              status.oldValue = oldValue;\n          }\n        } else if (status) {\n          status.set = \"update\";\n        }\n      }\n      if (ttl !== 0 && this.ttl === 0 && !this.ttls) {\n        this.initializeTTLTracking();\n      }\n      if (!noUpdateTTL) {\n        this.setItemTTL(index, ttl, start);\n      }\n      this.statusTTL(status, index);\n      if (this.disposeAfter) {\n        while (this.disposed.length) {\n          this.disposeAfter(...this.disposed.shift());\n        }\n      }\n      return this;\n    }\n    newIndex() {\n      if (this.size === 0) {\n        return this.tail;\n      }\n      if (this.size === this.max && this.max !== 0) {\n        return this.evict(false);\n      }\n      if (this.free.length !== 0) {\n        return this.free.pop();\n      }\n      return this.initialFill++;\n    }\n    pop() {\n      if (this.size) {\n        const val = this.valList[this.head];\n        this.evict(true);\n        return val;\n      }\n    }\n    evict(free) {\n      const head = this.head;\n      const k = this.keyList[head];\n      const v = this.valList[head];\n      if (this.isBackgroundFetch(v)) {\n        v.__abortController.abort(new Error(\"evicted\"));\n      } else {\n        this.dispose(v, k, \"evict\");\n        if (this.disposeAfter) {\n          this.disposed.push([v, k, \"evict\"]);\n        }\n      }\n      this.removeItemSize(head);\n      if (free) {\n        this.keyList[head] = null;\n        this.valList[head] = null;\n        this.free.push(head);\n      }\n      this.head = this.next[head];\n      this.keyMap.delete(k);\n      this.size--;\n      return head;\n    }\n    has(k, { updateAgeOnHas = this.updateAgeOnHas, status } = {}) {\n      const index = this.keyMap.get(k);\n      if (index !== undefined) {\n        if (!this.isStale(index)) {\n          if (updateAgeOnHas) {\n            this.updateItemAge(index);\n          }\n          if (status)\n            status.has = \"hit\";\n          this.statusTTL(status, index);\n          return true;\n        } else if (status) {\n          status.has = \"stale\";\n          this.statusTTL(status, index);\n        }\n      } else if (status) {\n        status.has = \"miss\";\n      }\n      return false;\n    }\n    peek(k, { allowStale = this.allowStale } = {}) {\n      const index = this.keyMap.get(k);\n      if (index !== undefined && (allowStale || !this.isStale(index))) {\n        const v = this.valList[index];\n        return this.isBackgroundFetch(v) ? v.__staleWhileFetching : v;\n      }\n    }\n    backgroundFetch(k, index, options, context) {\n      const v = index === undefined ? undefined : this.valList[index];\n      if (this.isBackgroundFetch(v)) {\n        return v;\n      }\n      const ac = new AC;\n      if (options.signal) {\n        options.signal.addEventListener(\"abort\", () => ac.abort(options.signal.reason));\n      }\n      const fetchOpts = {\n        signal: ac.signal,\n        options,\n        context\n      };\n      const cb = (v2, updateCache = false) => {\n        const { aborted } = ac.signal;\n        const ignoreAbort = options.ignoreFetchAbort && v2 !== undefined;\n        if (options.status) {\n          if (aborted && !updateCache) {\n            options.status.fetchAborted = true;\n            options.status.fetchError = ac.signal.reason;\n            if (ignoreAbort)\n              options.status.fetchAbortIgnored = true;\n          } else {\n            options.status.fetchResolved = true;\n          }\n        }\n        if (aborted && !ignoreAbort && !updateCache) {\n          return fetchFail(ac.signal.reason);\n        }\n        if (this.valList[index] === p) {\n          if (v2 === undefined) {\n            if (p.__staleWhileFetching) {\n              this.valList[index] = p.__staleWhileFetching;\n            } else {\n              this.delete(k);\n            }\n          } else {\n            if (options.status)\n              options.status.fetchUpdated = true;\n            this.set(k, v2, fetchOpts.options);\n          }\n        }\n        return v2;\n      };\n      const eb = (er) => {\n        if (options.status) {\n          options.status.fetchRejected = true;\n          options.status.fetchError = er;\n        }\n        return fetchFail(er);\n      };\n      const fetchFail = (er) => {\n        const { aborted } = ac.signal;\n        const allowStaleAborted = aborted && options.allowStaleOnFetchAbort;\n        const allowStale = allowStaleAborted || options.allowStaleOnFetchRejection;\n        const noDelete = allowStale || options.noDeleteOnFetchRejection;\n        if (this.valList[index] === p) {\n          const del = !noDelete || p.__staleWhileFetching === undefined;\n          if (del) {\n            this.delete(k);\n          } else if (!allowStaleAborted) {\n            this.valList[index] = p.__staleWhileFetching;\n          }\n        }\n        if (allowStale) {\n          if (options.status && p.__staleWhileFetching !== undefined) {\n            options.status.returnedStale = true;\n          }\n          return p.__staleWhileFetching;\n        } else if (p.__returned === p) {\n          throw er;\n        }\n      };\n      const pcall = (res, rej) => {\n        this.fetchMethod(k, v, fetchOpts).then((v2) => res(v2), rej);\n        ac.signal.addEventListener(\"abort\", () => {\n          if (!options.ignoreFetchAbort || options.allowStaleOnFetchAbort) {\n            res();\n            if (options.allowStaleOnFetchAbort) {\n              res = (v2) => cb(v2, true);\n            }\n          }\n        });\n      };\n      if (options.status)\n        options.status.fetchDispatched = true;\n      const p = new Promise(pcall).then(cb, eb);\n      p.__abortController = ac;\n      p.__staleWhileFetching = v;\n      p.__returned = null;\n      if (index === undefined) {\n        this.set(k, p, { ...fetchOpts.options, status: undefined });\n        index = this.keyMap.get(k);\n      } else {\n        this.valList[index] = p;\n      }\n      return p;\n    }\n    isBackgroundFetch(p) {\n      return p && typeof p === \"object\" && typeof p.then === \"function\" && Object.prototype.hasOwnProperty.call(p, \"__staleWhileFetching\") && Object.prototype.hasOwnProperty.call(p, \"__returned\") && (p.__returned === p || p.__returned === null);\n    }\n    async fetch(k, {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      ttl = this.ttl,\n      noDisposeOnSet = this.noDisposeOnSet,\n      size = 0,\n      sizeCalculation = this.sizeCalculation,\n      noUpdateTTL = this.noUpdateTTL,\n      noDeleteOnFetchRejection = this.noDeleteOnFetchRejection,\n      allowStaleOnFetchRejection = this.allowStaleOnFetchRejection,\n      ignoreFetchAbort = this.ignoreFetchAbort,\n      allowStaleOnFetchAbort = this.allowStaleOnFetchAbort,\n      fetchContext = this.fetchContext,\n      forceRefresh = false,\n      status,\n      signal\n    } = {}) {\n      if (!this.fetchMethod) {\n        if (status)\n          status.fetch = \"get\";\n        return this.get(k, {\n          allowStale,\n          updateAgeOnGet,\n          noDeleteOnStaleGet,\n          status\n        });\n      }\n      const options = {\n        allowStale,\n        updateAgeOnGet,\n        noDeleteOnStaleGet,\n        ttl,\n        noDisposeOnSet,\n        size,\n        sizeCalculation,\n        noUpdateTTL,\n        noDeleteOnFetchRejection,\n        allowStaleOnFetchRejection,\n        allowStaleOnFetchAbort,\n        ignoreFetchAbort,\n        status,\n        signal\n      };\n      let index = this.keyMap.get(k);\n      if (index === undefined) {\n        if (status)\n          status.fetch = \"miss\";\n        const p = this.backgroundFetch(k, index, options, fetchContext);\n        return p.__returned = p;\n      } else {\n        const v = this.valList[index];\n        if (this.isBackgroundFetch(v)) {\n          const stale = allowStale && v.__staleWhileFetching !== undefined;\n          if (status) {\n            status.fetch = \"inflight\";\n            if (stale)\n              status.returnedStale = true;\n          }\n          return stale ? v.__staleWhileFetching : v.__returned = v;\n        }\n        const isStale = this.isStale(index);\n        if (!forceRefresh && !isStale) {\n          if (status)\n            status.fetch = \"hit\";\n          this.moveToTail(index);\n          if (updateAgeOnGet) {\n            this.updateItemAge(index);\n          }\n          this.statusTTL(status, index);\n          return v;\n        }\n        const p = this.backgroundFetch(k, index, options, fetchContext);\n        const hasStale = p.__staleWhileFetching !== undefined;\n        const staleVal = hasStale && allowStale;\n        if (status) {\n          status.fetch = hasStale && isStale ? \"stale\" : \"refresh\";\n          if (staleVal && isStale)\n            status.returnedStale = true;\n        }\n        return staleVal ? p.__staleWhileFetching : p.__returned = p;\n      }\n    }\n    get(k, {\n      allowStale = this.allowStale,\n      updateAgeOnGet = this.updateAgeOnGet,\n      noDeleteOnStaleGet = this.noDeleteOnStaleGet,\n      status\n    } = {}) {\n      const index = this.keyMap.get(k);\n      if (index !== undefined) {\n        const value = this.valList[index];\n        const fetching = this.isBackgroundFetch(value);\n        this.statusTTL(status, index);\n        if (this.isStale(index)) {\n          if (status)\n            status.get = \"stale\";\n          if (!fetching) {\n            if (!noDeleteOnStaleGet) {\n              this.delete(k);\n            }\n            if (status)\n              status.returnedStale = allowStale;\n            return allowStale ? value : undefined;\n          } else {\n            if (status) {\n              status.returnedStale = allowStale && value.__staleWhileFetching !== undefined;\n            }\n            return allowStale ? value.__staleWhileFetching : undefined;\n          }\n        } else {\n          if (status)\n            status.get = \"hit\";\n          if (fetching) {\n            return value.__staleWhileFetching;\n          }\n          this.moveToTail(index);\n          if (updateAgeOnGet) {\n            this.updateItemAge(index);\n          }\n          return value;\n        }\n      } else if (status) {\n        status.get = \"miss\";\n      }\n    }\n    connect(p, n) {\n      this.prev[n] = p;\n      this.next[p] = n;\n    }\n    moveToTail(index) {\n      if (index !== this.tail) {\n        if (index === this.head) {\n          this.head = this.next[index];\n        } else {\n          this.connect(this.prev[index], this.next[index]);\n        }\n        this.connect(this.tail, index);\n        this.tail = index;\n      }\n    }\n    get del() {\n      deprecatedMethod(\"del\", \"delete\");\n      return this.delete;\n    }\n    delete(k) {\n      let deleted = false;\n      if (this.size !== 0) {\n        const index = this.keyMap.get(k);\n        if (index !== undefined) {\n          deleted = true;\n          if (this.size === 1) {\n            this.clear();\n          } else {\n            this.removeItemSize(index);\n            const v = this.valList[index];\n            if (this.isBackgroundFetch(v)) {\n              v.__abortController.abort(new Error(\"deleted\"));\n            } else {\n              this.dispose(v, k, \"delete\");\n              if (this.disposeAfter) {\n                this.disposed.push([v, k, \"delete\"]);\n              }\n            }\n            this.keyMap.delete(k);\n            this.keyList[index] = null;\n            this.valList[index] = null;\n            if (index === this.tail) {\n              this.tail = this.prev[index];\n            } else if (index === this.head) {\n              this.head = this.next[index];\n            } else {\n              this.next[this.prev[index]] = this.next[index];\n              this.prev[this.next[index]] = this.prev[index];\n            }\n            this.size--;\n            this.free.push(index);\n          }\n        }\n      }\n      if (this.disposed) {\n        while (this.disposed.length) {\n          this.disposeAfter(...this.disposed.shift());\n        }\n      }\n      return deleted;\n    }\n    clear() {\n      for (const index of this.rindexes({ allowStale: true })) {\n        const v = this.valList[index];\n        if (this.isBackgroundFetch(v)) {\n          v.__abortController.abort(new Error(\"deleted\"));\n        } else {\n          const k = this.keyList[index];\n          this.dispose(v, k, \"delete\");\n          if (this.disposeAfter) {\n            this.disposed.push([v, k, \"delete\"]);\n          }\n        }\n      }\n      this.keyMap.clear();\n      this.valList.fill(null);\n      this.keyList.fill(null);\n      if (this.ttls) {\n        this.ttls.fill(0);\n        this.starts.fill(0);\n      }\n      if (this.sizes) {\n        this.sizes.fill(0);\n      }\n      this.head = 0;\n      this.tail = 0;\n      this.initialFill = 1;\n      this.free.length = 0;\n      this.calculatedSize = 0;\n      this.size = 0;\n      if (this.disposed) {\n        while (this.disposed.length) {\n          this.disposeAfter(...this.disposed.shift());\n        }\n      }\n    }\n    get reset() {\n      deprecatedMethod(\"reset\", \"clear\");\n      return this.clear;\n    }\n    get length() {\n      deprecatedProperty(\"length\", \"size\");\n      return this.size;\n    }\n    static get AbortController() {\n      return AC;\n    }\n    static get AbortSignal() {\n      return AS;\n    }\n  }\n  module.exports = LRUCache;\n});\n\n// node_modules/semver/functions/inc.js\nvar require_inc = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var inc = (version2, release, options, identifier, identifierBase) => {\n    if (typeof options === \"string\") {\n      identifierBase = identifier;\n      identifier = options;\n      options = undefined;\n    }\n    try {\n      return new SemVer(version2 instanceof SemVer ? version2.version : version2, options).inc(release, identifier, identifierBase).version;\n    } catch (er) {\n      return null;\n    }\n  };\n  module.exports = inc;\n});\n\n// node_modules/semver/functions/diff.js\nvar require_diff = __commonJS((exports, module) => {\n  var parse3 = require_parse();\n  var diff = (version1, version2) => {\n    const v12 = parse3(version1, null, true);\n    const v2 = parse3(version2, null, true);\n    const comparison = v12.compare(v2);\n    if (comparison === 0) {\n      return null;\n    }\n    const v1Higher = comparison > 0;\n    const highVersion = v1Higher ? v12 : v2;\n    const lowVersion = v1Higher ? v2 : v12;\n    const highHasPre = !!highVersion.prerelease.length;\n    const lowHasPre = !!lowVersion.prerelease.length;\n    if (lowHasPre && !highHasPre) {\n      if (!lowVersion.patch && !lowVersion.minor) {\n        return \"major\";\n      }\n      if (highVersion.patch) {\n        return \"patch\";\n      }\n      if (highVersion.minor) {\n        return \"minor\";\n      }\n      return \"major\";\n    }\n    const prefix = highHasPre ? \"pre\" : \"\";\n    if (v12.major !== v2.major) {\n      return prefix + \"major\";\n    }\n    if (v12.minor !== v2.minor) {\n      return prefix + \"minor\";\n    }\n    if (v12.patch !== v2.patch) {\n      return prefix + \"patch\";\n    }\n    return \"prerelease\";\n  };\n  module.exports = diff;\n});\n\n// node_modules/semver/functions/major.js\nvar require_major = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var major = (a, loose) => new SemVer(a, loose).major;\n  module.exports = major;\n});\n\n// node_modules/semver/functions/minor.js\nvar require_minor = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var minor = (a, loose) => new SemVer(a, loose).minor;\n  module.exports = minor;\n});\n\n// node_modules/semver/functions/patch.js\nvar require_patch = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var patch = (a, loose) => new SemVer(a, loose).patch;\n  module.exports = patch;\n});\n\n// node_modules/semver/functions/prerelease.js\nvar require_prerelease = __commonJS((exports, module) => {\n  var parse3 = require_parse();\n  var prerelease = (version2, options) => {\n    const parsed = parse3(version2, options);\n    return parsed && parsed.prerelease.length ? parsed.prerelease : null;\n  };\n  module.exports = prerelease;\n});\n\n// node_modules/semver/functions/compare.js\nvar require_compare = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var compare = (a, b, loose) => new SemVer(a, loose).compare(new SemVer(b, loose));\n  module.exports = compare;\n});\n\n// node_modules/semver/functions/rcompare.js\nvar require_rcompare = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var rcompare = (a, b, loose) => compare(b, a, loose);\n  module.exports = rcompare;\n});\n\n// node_modules/semver/functions/compare-loose.js\nvar require_compare_loose = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var compareLoose = (a, b) => compare(a, b, true);\n  module.exports = compareLoose;\n});\n\n// node_modules/semver/functions/compare-build.js\nvar require_compare_build = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var compareBuild = (a, b, loose) => {\n    const versionA = new SemVer(a, loose);\n    const versionB = new SemVer(b, loose);\n    return versionA.compare(versionB) || versionA.compareBuild(versionB);\n  };\n  module.exports = compareBuild;\n});\n\n// node_modules/semver/functions/sort.js\nvar require_sort = __commonJS((exports, module) => {\n  var compareBuild = require_compare_build();\n  var sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose));\n  module.exports = sort;\n});\n\n// node_modules/semver/functions/rsort.js\nvar require_rsort = __commonJS((exports, module) => {\n  var compareBuild = require_compare_build();\n  var rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose));\n  module.exports = rsort;\n});\n\n// node_modules/semver/functions/gt.js\nvar require_gt = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var gt = (a, b, loose) => compare(a, b, loose) > 0;\n  module.exports = gt;\n});\n\n// node_modules/semver/functions/lt.js\nvar require_lt = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var lt = (a, b, loose) => compare(a, b, loose) < 0;\n  module.exports = lt;\n});\n\n// node_modules/semver/functions/eq.js\nvar require_eq = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var eq = (a, b, loose) => compare(a, b, loose) === 0;\n  module.exports = eq;\n});\n\n// node_modules/semver/functions/neq.js\nvar require_neq = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var neq = (a, b, loose) => compare(a, b, loose) !== 0;\n  module.exports = neq;\n});\n\n// node_modules/semver/functions/gte.js\nvar require_gte = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var gte = (a, b, loose) => compare(a, b, loose) >= 0;\n  module.exports = gte;\n});\n\n// node_modules/semver/functions/lte.js\nvar require_lte = __commonJS((exports, module) => {\n  var compare = require_compare();\n  var lte = (a, b, loose) => compare(a, b, loose) <= 0;\n  module.exports = lte;\n});\n\n// node_modules/semver/functions/cmp.js\nvar require_cmp = __commonJS((exports, module) => {\n  var eq = require_eq();\n  var neq = require_neq();\n  var gt = require_gt();\n  var gte = require_gte();\n  var lt = require_lt();\n  var lte = require_lte();\n  var cmp = (a, op, b, loose) => {\n    switch (op) {\n      case \"===\":\n        if (typeof a === \"object\") {\n          a = a.version;\n        }\n        if (typeof b === \"object\") {\n          b = b.version;\n        }\n        return a === b;\n      case \"!==\":\n        if (typeof a === \"object\") {\n          a = a.version;\n        }\n        if (typeof b === \"object\") {\n          b = b.version;\n        }\n        return a !== b;\n      case \"\":\n      case \"=\":\n      case \"==\":\n        return eq(a, b, loose);\n      case \"!=\":\n        return neq(a, b, loose);\n      case \">\":\n        return gt(a, b, loose);\n      case \">=\":\n        return gte(a, b, loose);\n      case \"<\":\n        return lt(a, b, loose);\n      case \"<=\":\n        return lte(a, b, loose);\n      default:\n        throw new TypeError(`Invalid operator: ${op}`);\n    }\n  };\n  module.exports = cmp;\n});\n\n// node_modules/semver/functions/coerce.js\nvar require_coerce = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var parse3 = require_parse();\n  var { safeRe: re, t } = require_re();\n  var coerce = (version2, options) => {\n    if (version2 instanceof SemVer) {\n      return version2;\n    }\n    if (typeof version2 === \"number\") {\n      version2 = String(version2);\n    }\n    if (typeof version2 !== \"string\") {\n      return null;\n    }\n    options = options || {};\n    let match = null;\n    if (!options.rtl) {\n      match = version2.match(re[t.COERCE]);\n    } else {\n      let next;\n      while ((next = re[t.COERCERTL].exec(version2)) && (!match || match.index + match[0].length !== version2.length)) {\n        if (!match || next.index + next[0].length !== match.index + match[0].length) {\n          match = next;\n        }\n        re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length;\n      }\n      re[t.COERCERTL].lastIndex = -1;\n    }\n    if (match === null) {\n      return null;\n    }\n    return parse3(`${match[2]}.${match[3] || \"0\"}.${match[4] || \"0\"}`, options);\n  };\n  module.exports = coerce;\n});\n\n// node_modules/yallist/iterator.js\nvar require_iterator = __commonJS((exports, module) => {\n  module.exports = function(Yallist) {\n    Yallist.prototype[Symbol.iterator] = function* () {\n      for (let walker = this.head;walker; walker = walker.next) {\n        yield walker.value;\n      }\n    };\n  };\n});\n\n// node_modules/yallist/yallist.js\nvar require_yallist = __commonJS((exports, module) => {\n  var Yallist = function(list) {\n    var self = this;\n    if (!(self instanceof Yallist)) {\n      self = new Yallist;\n    }\n    self.tail = null;\n    self.head = null;\n    self.length = 0;\n    if (list && typeof list.forEach === \"function\") {\n      list.forEach(function(item) {\n        self.push(item);\n      });\n    } else if (arguments.length > 0) {\n      for (var i = 0, l = arguments.length;i < l; i++) {\n        self.push(arguments[i]);\n      }\n    }\n    return self;\n  };\n  var insert = function(self, node, value) {\n    var inserted = node === self.head ? new Node(value, null, node, self) : new Node(value, node, node.next, self);\n    if (inserted.next === null) {\n      self.tail = inserted;\n    }\n    if (inserted.prev === null) {\n      self.head = inserted;\n    }\n    self.length++;\n    return inserted;\n  };\n  var push = function(self, item) {\n    self.tail = new Node(item, self.tail, null, self);\n    if (!self.head) {\n      self.head = self.tail;\n    }\n    self.length++;\n  };\n  var unshift = function(self, item) {\n    self.head = new Node(item, null, self.head, self);\n    if (!self.tail) {\n      self.tail = self.head;\n    }\n    self.length++;\n  };\n  var Node = function(value, prev, next, list) {\n    if (!(this instanceof Node)) {\n      return new Node(value, prev, next, list);\n    }\n    this.list = list;\n    this.value = value;\n    if (prev) {\n      prev.next = this;\n      this.prev = prev;\n    } else {\n      this.prev = null;\n    }\n    if (next) {\n      next.prev = this;\n      this.next = next;\n    } else {\n      this.next = null;\n    }\n  };\n  module.exports = Yallist;\n  Yallist.Node = Node;\n  Yallist.create = Yallist;\n  Yallist.prototype.removeNode = function(node) {\n    if (node.list !== this) {\n      throw new Error(\"removing node which does not belong to this list\");\n    }\n    var next = node.next;\n    var prev = node.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    if (node === this.head) {\n      this.head = next;\n    }\n    if (node === this.tail) {\n      this.tail = prev;\n    }\n    node.list.length--;\n    node.next = null;\n    node.prev = null;\n    node.list = null;\n    return next;\n  };\n  Yallist.prototype.unshiftNode = function(node) {\n    if (node === this.head) {\n      return;\n    }\n    if (node.list) {\n      node.list.removeNode(node);\n    }\n    var head = this.head;\n    node.list = this;\n    node.next = head;\n    if (head) {\n      head.prev = node;\n    }\n    this.head = node;\n    if (!this.tail) {\n      this.tail = node;\n    }\n    this.length++;\n  };\n  Yallist.prototype.pushNode = function(node) {\n    if (node === this.tail) {\n      return;\n    }\n    if (node.list) {\n      node.list.removeNode(node);\n    }\n    var tail = this.tail;\n    node.list = this;\n    node.prev = tail;\n    if (tail) {\n      tail.next = node;\n    }\n    this.tail = node;\n    if (!this.head) {\n      this.head = node;\n    }\n    this.length++;\n  };\n  Yallist.prototype.push = function() {\n    for (var i = 0, l = arguments.length;i < l; i++) {\n      push(this, arguments[i]);\n    }\n    return this.length;\n  };\n  Yallist.prototype.unshift = function() {\n    for (var i = 0, l = arguments.length;i < l; i++) {\n      unshift(this, arguments[i]);\n    }\n    return this.length;\n  };\n  Yallist.prototype.pop = function() {\n    if (!this.tail) {\n      return;\n    }\n    var res = this.tail.value;\n    this.tail = this.tail.prev;\n    if (this.tail) {\n      this.tail.next = null;\n    } else {\n      this.head = null;\n    }\n    this.length--;\n    return res;\n  };\n  Yallist.prototype.shift = function() {\n    if (!this.head) {\n      return;\n    }\n    var res = this.head.value;\n    this.head = this.head.next;\n    if (this.head) {\n      this.head.prev = null;\n    } else {\n      this.tail = null;\n    }\n    this.length--;\n    return res;\n  };\n  Yallist.prototype.forEach = function(fn, thisp) {\n    thisp = thisp || this;\n    for (var walker = this.head, i = 0;walker !== null; i++) {\n      fn.call(thisp, walker.value, i, this);\n      walker = walker.next;\n    }\n  };\n  Yallist.prototype.forEachReverse = function(fn, thisp) {\n    thisp = thisp || this;\n    for (var walker = this.tail, i = this.length - 1;walker !== null; i--) {\n      fn.call(thisp, walker.value, i, this);\n      walker = walker.prev;\n    }\n  };\n  Yallist.prototype.get = function(n) {\n    for (var i = 0, walker = this.head;walker !== null && i < n; i++) {\n      walker = walker.next;\n    }\n    if (i === n && walker !== null) {\n      return walker.value;\n    }\n  };\n  Yallist.prototype.getReverse = function(n) {\n    for (var i = 0, walker = this.tail;walker !== null && i < n; i++) {\n      walker = walker.prev;\n    }\n    if (i === n && walker !== null) {\n      return walker.value;\n    }\n  };\n  Yallist.prototype.map = function(fn, thisp) {\n    thisp = thisp || this;\n    var res = new Yallist;\n    for (var walker = this.head;walker !== null; ) {\n      res.push(fn.call(thisp, walker.value, this));\n      walker = walker.next;\n    }\n    return res;\n  };\n  Yallist.prototype.mapReverse = function(fn, thisp) {\n    thisp = thisp || this;\n    var res = new Yallist;\n    for (var walker = this.tail;walker !== null; ) {\n      res.push(fn.call(thisp, walker.value, this));\n      walker = walker.prev;\n    }\n    return res;\n  };\n  Yallist.prototype.reduce = function(fn, initial) {\n    var acc;\n    var walker = this.head;\n    if (arguments.length > 1) {\n      acc = initial;\n    } else if (this.head) {\n      walker = this.head.next;\n      acc = this.head.value;\n    } else {\n      throw new TypeError(\"Reduce of empty list with no initial value\");\n    }\n    for (var i = 0;walker !== null; i++) {\n      acc = fn(acc, walker.value, i);\n      walker = walker.next;\n    }\n    return acc;\n  };\n  Yallist.prototype.reduceReverse = function(fn, initial) {\n    var acc;\n    var walker = this.tail;\n    if (arguments.length > 1) {\n      acc = initial;\n    } else if (this.tail) {\n      walker = this.tail.prev;\n      acc = this.tail.value;\n    } else {\n      throw new TypeError(\"Reduce of empty list with no initial value\");\n    }\n    for (var i = this.length - 1;walker !== null; i--) {\n      acc = fn(acc, walker.value, i);\n      walker = walker.prev;\n    }\n    return acc;\n  };\n  Yallist.prototype.toArray = function() {\n    var arr = new Array(this.length);\n    for (var i = 0, walker = this.head;walker !== null; i++) {\n      arr[i] = walker.value;\n      walker = walker.next;\n    }\n    return arr;\n  };\n  Yallist.prototype.toArrayReverse = function() {\n    var arr = new Array(this.length);\n    for (var i = 0, walker = this.tail;walker !== null; i++) {\n      arr[i] = walker.value;\n      walker = walker.prev;\n    }\n    return arr;\n  };\n  Yallist.prototype.slice = function(from, to) {\n    to = to || this.length;\n    if (to < 0) {\n      to += this.length;\n    }\n    from = from || 0;\n    if (from < 0) {\n      from += this.length;\n    }\n    var ret = new Yallist;\n    if (to < from || to < 0) {\n      return ret;\n    }\n    if (from < 0) {\n      from = 0;\n    }\n    if (to > this.length) {\n      to = this.length;\n    }\n    for (var i = 0, walker = this.head;walker !== null && i < from; i++) {\n      walker = walker.next;\n    }\n    for (;walker !== null && i < to; i++, walker = walker.next) {\n      ret.push(walker.value);\n    }\n    return ret;\n  };\n  Yallist.prototype.sliceReverse = function(from, to) {\n    to = to || this.length;\n    if (to < 0) {\n      to += this.length;\n    }\n    from = from || 0;\n    if (from < 0) {\n      from += this.length;\n    }\n    var ret = new Yallist;\n    if (to < from || to < 0) {\n      return ret;\n    }\n    if (from < 0) {\n      from = 0;\n    }\n    if (to > this.length) {\n      to = this.length;\n    }\n    for (var i = this.length, walker = this.tail;walker !== null && i > to; i--) {\n      walker = walker.prev;\n    }\n    for (;walker !== null && i > from; i--, walker = walker.prev) {\n      ret.push(walker.value);\n    }\n    return ret;\n  };\n  Yallist.prototype.splice = function(start, deleteCount, ...nodes) {\n    if (start > this.length) {\n      start = this.length - 1;\n    }\n    if (start < 0) {\n      start = this.length + start;\n    }\n    for (var i = 0, walker = this.head;walker !== null && i < start; i++) {\n      walker = walker.next;\n    }\n    var ret = [];\n    for (var i = 0;walker && i < deleteCount; i++) {\n      ret.push(walker.value);\n      walker = this.removeNode(walker);\n    }\n    if (walker === null) {\n      walker = this.tail;\n    }\n    if (walker !== this.head && walker !== this.tail) {\n      walker = walker.prev;\n    }\n    for (var i = 0;i < nodes.length; i++) {\n      walker = insert(this, walker, nodes[i]);\n    }\n    return ret;\n  };\n  Yallist.prototype.reverse = function() {\n    var head = this.head;\n    var tail = this.tail;\n    for (var walker = head;walker !== null; walker = walker.prev) {\n      var p = walker.prev;\n      walker.prev = walker.next;\n      walker.next = p;\n    }\n    this.head = tail;\n    this.tail = head;\n    return this;\n  };\n  try {\n    require_iterator()(Yallist);\n  } catch (er) {\n  }\n});\n\n// node_modules/lru-cache/index.js\nvar require_lru_cache3 = __commonJS((exports, module) => {\n  var Yallist = require_yallist();\n  var MAX = Symbol(\"max\");\n  var LENGTH = Symbol(\"length\");\n  var LENGTH_CALCULATOR = Symbol(\"lengthCalculator\");\n  var ALLOW_STALE = Symbol(\"allowStale\");\n  var MAX_AGE = Symbol(\"maxAge\");\n  var DISPOSE = Symbol(\"dispose\");\n  var NO_DISPOSE_ON_SET = Symbol(\"noDisposeOnSet\");\n  var LRU_LIST = Symbol(\"lruList\");\n  var CACHE = Symbol(\"cache\");\n  var UPDATE_AGE_ON_GET = Symbol(\"updateAgeOnGet\");\n  var naiveLength = () => 1;\n\n  class LRUCache {\n    constructor(options) {\n      if (typeof options === \"number\")\n        options = { max: options };\n      if (!options)\n        options = {};\n      if (options.max && (typeof options.max !== \"number\" || options.max < 0))\n        throw new TypeError(\"max must be a non-negative number\");\n      const max = this[MAX] = options.max || Infinity;\n      const lc = options.length || naiveLength;\n      this[LENGTH_CALCULATOR] = typeof lc !== \"function\" ? naiveLength : lc;\n      this[ALLOW_STALE] = options.stale || false;\n      if (options.maxAge && typeof options.maxAge !== \"number\")\n        throw new TypeError(\"maxAge must be a number\");\n      this[MAX_AGE] = options.maxAge || 0;\n      this[DISPOSE] = options.dispose;\n      this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false;\n      this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false;\n      this.reset();\n    }\n    set max(mL) {\n      if (typeof mL !== \"number\" || mL < 0)\n        throw new TypeError(\"max must be a non-negative number\");\n      this[MAX] = mL || Infinity;\n      trim(this);\n    }\n    get max() {\n      return this[MAX];\n    }\n    set allowStale(allowStale) {\n      this[ALLOW_STALE] = !!allowStale;\n    }\n    get allowStale() {\n      return this[ALLOW_STALE];\n    }\n    set maxAge(mA) {\n      if (typeof mA !== \"number\")\n        throw new TypeError(\"maxAge must be a non-negative number\");\n      this[MAX_AGE] = mA;\n      trim(this);\n    }\n    get maxAge() {\n      return this[MAX_AGE];\n    }\n    set lengthCalculator(lC) {\n      if (typeof lC !== \"function\")\n        lC = naiveLength;\n      if (lC !== this[LENGTH_CALCULATOR]) {\n        this[LENGTH_CALCULATOR] = lC;\n        this[LENGTH] = 0;\n        this[LRU_LIST].forEach((hit) => {\n          hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key);\n          this[LENGTH] += hit.length;\n        });\n      }\n      trim(this);\n    }\n    get lengthCalculator() {\n      return this[LENGTH_CALCULATOR];\n    }\n    get length() {\n      return this[LENGTH];\n    }\n    get itemCount() {\n      return this[LRU_LIST].length;\n    }\n    rforEach(fn, thisp) {\n      thisp = thisp || this;\n      for (let walker = this[LRU_LIST].tail;walker !== null; ) {\n        const prev = walker.prev;\n        forEachStep(this, fn, walker, thisp);\n        walker = prev;\n      }\n    }\n    forEach(fn, thisp) {\n      thisp = thisp || this;\n      for (let walker = this[LRU_LIST].head;walker !== null; ) {\n        const next = walker.next;\n        forEachStep(this, fn, walker, thisp);\n        walker = next;\n      }\n    }\n    keys() {\n      return this[LRU_LIST].toArray().map((k) => k.key);\n    }\n    values() {\n      return this[LRU_LIST].toArray().map((k) => k.value);\n    }\n    reset() {\n      if (this[DISPOSE] && this[LRU_LIST] && this[LRU_LIST].length) {\n        this[LRU_LIST].forEach((hit) => this[DISPOSE](hit.key, hit.value));\n      }\n      this[CACHE] = new Map;\n      this[LRU_LIST] = new Yallist;\n      this[LENGTH] = 0;\n    }\n    dump() {\n      return this[LRU_LIST].map((hit) => isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter((h) => h);\n    }\n    dumpLru() {\n      return this[LRU_LIST];\n    }\n    set(key, value, maxAge) {\n      maxAge = maxAge || this[MAX_AGE];\n      if (maxAge && typeof maxAge !== \"number\")\n        throw new TypeError(\"maxAge must be a number\");\n      const now = maxAge ? Date.now() : 0;\n      const len = this[LENGTH_CALCULATOR](value, key);\n      if (this[CACHE].has(key)) {\n        if (len > this[MAX]) {\n          del(this, this[CACHE].get(key));\n          return false;\n        }\n        const node = this[CACHE].get(key);\n        const item = node.value;\n        if (this[DISPOSE]) {\n          if (!this[NO_DISPOSE_ON_SET])\n            this[DISPOSE](key, item.value);\n        }\n        item.now = now;\n        item.maxAge = maxAge;\n        item.value = value;\n        this[LENGTH] += len - item.length;\n        item.length = len;\n        this.get(key);\n        trim(this);\n        return true;\n      }\n      const hit = new Entry(key, value, len, now, maxAge);\n      if (hit.length > this[MAX]) {\n        if (this[DISPOSE])\n          this[DISPOSE](key, value);\n        return false;\n      }\n      this[LENGTH] += hit.length;\n      this[LRU_LIST].unshift(hit);\n      this[CACHE].set(key, this[LRU_LIST].head);\n      trim(this);\n      return true;\n    }\n    has(key) {\n      if (!this[CACHE].has(key))\n        return false;\n      const hit = this[CACHE].get(key).value;\n      return !isStale(this, hit);\n    }\n    get(key) {\n      return get(this, key, true);\n    }\n    peek(key) {\n      return get(this, key, false);\n    }\n    pop() {\n      const node = this[LRU_LIST].tail;\n      if (!node)\n        return null;\n      del(this, node);\n      return node.value;\n    }\n    del(key) {\n      del(this, this[CACHE].get(key));\n    }\n    load(arr) {\n      this.reset();\n      const now = Date.now();\n      for (let l = arr.length - 1;l >= 0; l--) {\n        const hit = arr[l];\n        const expiresAt = hit.e || 0;\n        if (expiresAt === 0)\n          this.set(hit.k, hit.v);\n        else {\n          const maxAge = expiresAt - now;\n          if (maxAge > 0) {\n            this.set(hit.k, hit.v, maxAge);\n          }\n        }\n      }\n    }\n    prune() {\n      this[CACHE].forEach((value, key) => get(this, key, false));\n    }\n  }\n  var get = (self, key, doUse) => {\n    const node = self[CACHE].get(key);\n    if (node) {\n      const hit = node.value;\n      if (isStale(self, hit)) {\n        del(self, node);\n        if (!self[ALLOW_STALE])\n          return;\n      } else {\n        if (doUse) {\n          if (self[UPDATE_AGE_ON_GET])\n            node.value.now = Date.now();\n          self[LRU_LIST].unshiftNode(node);\n        }\n      }\n      return hit.value;\n    }\n  };\n  var isStale = (self, hit) => {\n    if (!hit || !hit.maxAge && !self[MAX_AGE])\n      return false;\n    const diff = Date.now() - hit.now;\n    return hit.maxAge ? diff > hit.maxAge : self[MAX_AGE] && diff > self[MAX_AGE];\n  };\n  var trim = (self) => {\n    if (self[LENGTH] > self[MAX]) {\n      for (let walker = self[LRU_LIST].tail;self[LENGTH] > self[MAX] && walker !== null; ) {\n        const prev = walker.prev;\n        del(self, walker);\n        walker = prev;\n      }\n    }\n  };\n  var del = (self, node) => {\n    if (node) {\n      const hit = node.value;\n      if (self[DISPOSE])\n        self[DISPOSE](hit.key, hit.value);\n      self[LENGTH] -= hit.length;\n      self[CACHE].delete(hit.key);\n      self[LRU_LIST].removeNode(node);\n    }\n  };\n\n  class Entry {\n    constructor(key, value, length, now, maxAge) {\n      this.key = key;\n      this.value = value;\n      this.length = length;\n      this.now = now;\n      this.maxAge = maxAge || 0;\n    }\n  }\n  var forEachStep = (self, fn, node, thisp) => {\n    let hit = node.value;\n    if (isStale(self, hit)) {\n      del(self, node);\n      if (!self[ALLOW_STALE])\n        hit = undefined;\n    }\n    if (hit)\n      fn.call(thisp, hit.value, hit.key, self);\n  };\n  module.exports = LRUCache;\n});\n\n// node_modules/semver/classes/range.js\nvar require_range = __commonJS((exports, module) => {\n  class Range {\n    constructor(range, options) {\n      options = parseOptions(options);\n      if (range instanceof Range) {\n        if (range.loose === !!options.loose && range.includePrerelease === !!options.includePrerelease) {\n          return range;\n        } else {\n          return new Range(range.raw, options);\n        }\n      }\n      if (range instanceof Comparator) {\n        this.raw = range.value;\n        this.set = [[range]];\n        this.format();\n        return this;\n      }\n      this.options = options;\n      this.loose = !!options.loose;\n      this.includePrerelease = !!options.includePrerelease;\n      this.raw = range.trim().split(/\\s+/).join(\" \");\n      this.set = this.raw.split(\"||\").map((r) => this.parseRange(r.trim())).filter((c) => c.length);\n      if (!this.set.length) {\n        throw new TypeError(`Invalid SemVer Range: ${this.raw}`);\n      }\n      if (this.set.length > 1) {\n        const first = this.set[0];\n        this.set = this.set.filter((c) => !isNullSet(c[0]));\n        if (this.set.length === 0) {\n          this.set = [first];\n        } else if (this.set.length > 1) {\n          for (const c of this.set) {\n            if (c.length === 1 && isAny(c[0])) {\n              this.set = [c];\n              break;\n            }\n          }\n        }\n      }\n      this.format();\n    }\n    format() {\n      this.range = this.set.map((comps) => comps.join(\" \").trim()).join(\"||\").trim();\n      return this.range;\n    }\n    toString() {\n      return this.range;\n    }\n    parseRange(range) {\n      const memoOpts = (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) | (this.options.loose && FLAG_LOOSE);\n      const memoKey = memoOpts + \":\" + range;\n      const cached = cache.get(memoKey);\n      if (cached) {\n        return cached;\n      }\n      const loose = this.options.loose;\n      const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE];\n      range = range.replace(hr, hyphenReplace(this.options.includePrerelease));\n      debug(\"hyphen replace\", range);\n      range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace);\n      debug(\"comparator trim\", range);\n      range = range.replace(re[t.TILDETRIM], tildeTrimReplace);\n      debug(\"tilde trim\", range);\n      range = range.replace(re[t.CARETTRIM], caretTrimReplace);\n      debug(\"caret trim\", range);\n      let rangeList = range.split(\" \").map((comp) => parseComparator(comp, this.options)).join(\" \").split(/\\s+/).map((comp) => replaceGTE0(comp, this.options));\n      if (loose) {\n        rangeList = rangeList.filter((comp) => {\n          debug(\"loose invalid filter\", comp, this.options);\n          return !!comp.match(re[t.COMPARATORLOOSE]);\n        });\n      }\n      debug(\"range list\", rangeList);\n      const rangeMap = new Map;\n      const comparators = rangeList.map((comp) => new Comparator(comp, this.options));\n      for (const comp of comparators) {\n        if (isNullSet(comp)) {\n          return [comp];\n        }\n        rangeMap.set(comp.value, comp);\n      }\n      if (rangeMap.size > 1 && rangeMap.has(\"\")) {\n        rangeMap.delete(\"\");\n      }\n      const result = [...rangeMap.values()];\n      cache.set(memoKey, result);\n      return result;\n    }\n    intersects(range, options) {\n      if (!(range instanceof Range)) {\n        throw new TypeError(\"a Range is required\");\n      }\n      return this.set.some((thisComparators) => {\n        return isSatisfiable(thisComparators, options) && range.set.some((rangeComparators) => {\n          return isSatisfiable(rangeComparators, options) && thisComparators.every((thisComparator) => {\n            return rangeComparators.every((rangeComparator) => {\n              return thisComparator.intersects(rangeComparator, options);\n            });\n          });\n        });\n      });\n    }\n    test(version2) {\n      if (!version2) {\n        return false;\n      }\n      if (typeof version2 === \"string\") {\n        try {\n          version2 = new SemVer(version2, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n      for (let i = 0;i < this.set.length; i++) {\n        if (testSet(this.set[i], version2, this.options)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n  module.exports = Range;\n  var LRU = require_lru_cache3();\n  var cache = new LRU({ max: 1000 });\n  var parseOptions = require_parse_options();\n  var Comparator = require_comparator();\n  var debug = require_debug();\n  var SemVer = require_semver();\n  var {\n    safeRe: re,\n    t,\n    comparatorTrimReplace,\n    tildeTrimReplace,\n    caretTrimReplace\n  } = require_re();\n  var { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require_constants();\n  var isNullSet = (c) => c.value === \"<0.0.0-0\";\n  var isAny = (c) => c.value === \"\";\n  var isSatisfiable = (comparators, options) => {\n    let result = true;\n    const remainingComparators = comparators.slice();\n    let testComparator = remainingComparators.pop();\n    while (result && remainingComparators.length) {\n      result = remainingComparators.every((otherComparator) => {\n        return testComparator.intersects(otherComparator, options);\n      });\n      testComparator = remainingComparators.pop();\n    }\n    return result;\n  };\n  var parseComparator = (comp, options) => {\n    debug(\"comp\", comp, options);\n    comp = replaceCarets(comp, options);\n    debug(\"caret\", comp);\n    comp = replaceTildes(comp, options);\n    debug(\"tildes\", comp);\n    comp = replaceXRanges(comp, options);\n    debug(\"xrange\", comp);\n    comp = replaceStars(comp, options);\n    debug(\"stars\", comp);\n    return comp;\n  };\n  var isX = (id) => !id || id.toLowerCase() === \"x\" || id === \"*\";\n  var replaceTildes = (comp, options) => {\n    return comp.trim().split(/\\s+/).map((c) => replaceTilde(c, options)).join(\" \");\n  };\n  var replaceTilde = (comp, options) => {\n    const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE];\n    return comp.replace(r, (_, M, m, p, pr) => {\n      debug(\"tilde\", comp, _, M, m, p, pr);\n      let ret;\n      if (isX(M)) {\n        ret = \"\";\n      } else if (isX(m)) {\n        ret = `>=${M}.0.0 <${+M + 1}.0.0-0`;\n      } else if (isX(p)) {\n        ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`;\n      } else if (pr) {\n        debug(\"replaceTilde pr\", pr);\n        ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n      } else {\n        ret = `>=${M}.${m}.${p} <${M}.${+m + 1}.0-0`;\n      }\n      debug(\"tilde return\", ret);\n      return ret;\n    });\n  };\n  var replaceCarets = (comp, options) => {\n    return comp.trim().split(/\\s+/).map((c) => replaceCaret(c, options)).join(\" \");\n  };\n  var replaceCaret = (comp, options) => {\n    debug(\"caret\", comp, options);\n    const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET];\n    const z = options.includePrerelease ? \"-0\" : \"\";\n    return comp.replace(r, (_, M, m, p, pr) => {\n      debug(\"caret\", comp, _, M, m, p, pr);\n      let ret;\n      if (isX(M)) {\n        ret = \"\";\n      } else if (isX(m)) {\n        ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`;\n      } else if (isX(p)) {\n        if (M === \"0\") {\n          ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`;\n        } else {\n          ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`;\n        }\n      } else if (pr) {\n        debug(\"replaceCaret pr\", pr);\n        if (M === \"0\") {\n          if (m === \"0\") {\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${m}.${+p + 1}-0`;\n          } else {\n            ret = `>=${M}.${m}.${p}-${pr} <${M}.${+m + 1}.0-0`;\n          }\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr} <${+M + 1}.0.0-0`;\n        }\n      } else {\n        debug(\"no pr\");\n        if (M === \"0\") {\n          if (m === \"0\") {\n            ret = `>=${M}.${m}.${p}${z} <${M}.${m}.${+p + 1}-0`;\n          } else {\n            ret = `>=${M}.${m}.${p}${z} <${M}.${+m + 1}.0-0`;\n          }\n        } else {\n          ret = `>=${M}.${m}.${p} <${+M + 1}.0.0-0`;\n        }\n      }\n      debug(\"caret return\", ret);\n      return ret;\n    });\n  };\n  var replaceXRanges = (comp, options) => {\n    debug(\"replaceXRanges\", comp, options);\n    return comp.split(/\\s+/).map((c) => replaceXRange(c, options)).join(\" \");\n  };\n  var replaceXRange = (comp, options) => {\n    comp = comp.trim();\n    const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE];\n    return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n      debug(\"xRange\", comp, ret, gtlt, M, m, p, pr);\n      const xM = isX(M);\n      const xm = xM || isX(m);\n      const xp = xm || isX(p);\n      const anyX = xp;\n      if (gtlt === \"=\" && anyX) {\n        gtlt = \"\";\n      }\n      pr = options.includePrerelease ? \"-0\" : \"\";\n      if (xM) {\n        if (gtlt === \">\" || gtlt === \"<\") {\n          ret = \"<0.0.0-0\";\n        } else {\n          ret = \"*\";\n        }\n      } else if (gtlt && anyX) {\n        if (xm) {\n          m = 0;\n        }\n        p = 0;\n        if (gtlt === \">\") {\n          gtlt = \">=\";\n          if (xm) {\n            M = +M + 1;\n            m = 0;\n            p = 0;\n          } else {\n            m = +m + 1;\n            p = 0;\n          }\n        } else if (gtlt === \"<=\") {\n          gtlt = \"<\";\n          if (xm) {\n            M = +M + 1;\n          } else {\n            m = +m + 1;\n          }\n        }\n        if (gtlt === \"<\") {\n          pr = \"-0\";\n        }\n        ret = `${gtlt + M}.${m}.${p}${pr}`;\n      } else if (xm) {\n        ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`;\n      } else if (xp) {\n        ret = `>=${M}.${m}.0${pr} <${M}.${+m + 1}.0-0`;\n      }\n      debug(\"xRange return\", ret);\n      return ret;\n    });\n  };\n  var replaceStars = (comp, options) => {\n    debug(\"replaceStars\", comp, options);\n    return comp.trim().replace(re[t.STAR], \"\");\n  };\n  var replaceGTE0 = (comp, options) => {\n    debug(\"replaceGTE0\", comp, options);\n    return comp.trim().replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], \"\");\n  };\n  var hyphenReplace = (incPr) => ($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) => {\n    if (isX(fM)) {\n      from = \"\";\n    } else if (isX(fm)) {\n      from = `>=${fM}.0.0${incPr ? \"-0\" : \"\"}`;\n    } else if (isX(fp)) {\n      from = `>=${fM}.${fm}.0${incPr ? \"-0\" : \"\"}`;\n    } else if (fpr) {\n      from = `>=${from}`;\n    } else {\n      from = `>=${from}${incPr ? \"-0\" : \"\"}`;\n    }\n    if (isX(tM)) {\n      to = \"\";\n    } else if (isX(tm)) {\n      to = `<${+tM + 1}.0.0-0`;\n    } else if (isX(tp)) {\n      to = `<${tM}.${+tm + 1}.0-0`;\n    } else if (tpr) {\n      to = `<=${tM}.${tm}.${tp}-${tpr}`;\n    } else if (incPr) {\n      to = `<${tM}.${tm}.${+tp + 1}-0`;\n    } else {\n      to = `<=${to}`;\n    }\n    return `${from} ${to}`.trim();\n  };\n  var testSet = (set, version2, options) => {\n    for (let i = 0;i < set.length; i++) {\n      if (!set[i].test(version2)) {\n        return false;\n      }\n    }\n    if (version2.prerelease.length && !options.includePrerelease) {\n      for (let i = 0;i < set.length; i++) {\n        debug(set[i].semver);\n        if (set[i].semver === Comparator.ANY) {\n          continue;\n        }\n        if (set[i].semver.prerelease.length > 0) {\n          const allowed = set[i].semver;\n          if (allowed.major === version2.major && allowed.minor === version2.minor && allowed.patch === version2.patch) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    return true;\n  };\n});\n\n// node_modules/semver/classes/comparator.js\nvar require_comparator = __commonJS((exports, module) => {\n  var ANY = Symbol(\"SemVer ANY\");\n\n  class Comparator {\n    static get ANY() {\n      return ANY;\n    }\n    constructor(comp, options) {\n      options = parseOptions(options);\n      if (comp instanceof Comparator) {\n        if (comp.loose === !!options.loose) {\n          return comp;\n        } else {\n          comp = comp.value;\n        }\n      }\n      comp = comp.trim().split(/\\s+/).join(\" \");\n      debug(\"comparator\", comp, options);\n      this.options = options;\n      this.loose = !!options.loose;\n      this.parse(comp);\n      if (this.semver === ANY) {\n        this.value = \"\";\n      } else {\n        this.value = this.operator + this.semver.version;\n      }\n      debug(\"comp\", this);\n    }\n    parse(comp) {\n      const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR];\n      const m = comp.match(r);\n      if (!m) {\n        throw new TypeError(`Invalid comparator: ${comp}`);\n      }\n      this.operator = m[1] !== undefined ? m[1] : \"\";\n      if (this.operator === \"=\") {\n        this.operator = \"\";\n      }\n      if (!m[2]) {\n        this.semver = ANY;\n      } else {\n        this.semver = new SemVer(m[2], this.options.loose);\n      }\n    }\n    toString() {\n      return this.value;\n    }\n    test(version2) {\n      debug(\"Comparator.test\", version2, this.options.loose);\n      if (this.semver === ANY || version2 === ANY) {\n        return true;\n      }\n      if (typeof version2 === \"string\") {\n        try {\n          version2 = new SemVer(version2, this.options);\n        } catch (er) {\n          return false;\n        }\n      }\n      return cmp(version2, this.operator, this.semver, this.options);\n    }\n    intersects(comp, options) {\n      if (!(comp instanceof Comparator)) {\n        throw new TypeError(\"a Comparator is required\");\n      }\n      if (this.operator === \"\") {\n        if (this.value === \"\") {\n          return true;\n        }\n        return new Range(comp.value, options).test(this.value);\n      } else if (comp.operator === \"\") {\n        if (comp.value === \"\") {\n          return true;\n        }\n        return new Range(this.value, options).test(comp.semver);\n      }\n      options = parseOptions(options);\n      if (options.includePrerelease && (this.value === \"<0.0.0-0\" || comp.value === \"<0.0.0-0\")) {\n        return false;\n      }\n      if (!options.includePrerelease && (this.value.startsWith(\"<0.0.0\") || comp.value.startsWith(\"<0.0.0\"))) {\n        return false;\n      }\n      if (this.operator.startsWith(\">\") && comp.operator.startsWith(\">\")) {\n        return true;\n      }\n      if (this.operator.startsWith(\"<\") && comp.operator.startsWith(\"<\")) {\n        return true;\n      }\n      if (this.semver.version === comp.semver.version && this.operator.includes(\"=\") && comp.operator.includes(\"=\")) {\n        return true;\n      }\n      if (cmp(this.semver, \"<\", comp.semver, options) && this.operator.startsWith(\">\") && comp.operator.startsWith(\"<\")) {\n        return true;\n      }\n      if (cmp(this.semver, \">\", comp.semver, options) && this.operator.startsWith(\"<\") && comp.operator.startsWith(\">\")) {\n        return true;\n      }\n      return false;\n    }\n  }\n  module.exports = Comparator;\n  var parseOptions = require_parse_options();\n  var { safeRe: re, t } = require_re();\n  var cmp = require_cmp();\n  var debug = require_debug();\n  var SemVer = require_semver();\n  var Range = require_range();\n});\n\n// node_modules/semver/functions/satisfies.js\nvar require_satisfies = __commonJS((exports, module) => {\n  var Range = require_range();\n  var satisfies = (version2, range, options) => {\n    try {\n      range = new Range(range, options);\n    } catch (er) {\n      return false;\n    }\n    return range.test(version2);\n  };\n  module.exports = satisfies;\n});\n\n// node_modules/semver/ranges/to-comparators.js\nvar require_to_comparators = __commonJS((exports, module) => {\n  var Range = require_range();\n  var toComparators = (range, options) => new Range(range, options).set.map((comp) => comp.map((c) => c.value).join(\" \").trim().split(\" \"));\n  module.exports = toComparators;\n});\n\n// node_modules/semver/ranges/max-satisfying.js\nvar require_max_satisfying = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var Range = require_range();\n  var maxSatisfying = (versions, range, options) => {\n    let max = null;\n    let maxSV = null;\n    let rangeObj = null;\n    try {\n      rangeObj = new Range(range, options);\n    } catch (er) {\n      return null;\n    }\n    versions.forEach((v) => {\n      if (rangeObj.test(v)) {\n        if (!max || maxSV.compare(v) === -1) {\n          max = v;\n          maxSV = new SemVer(max, options);\n        }\n      }\n    });\n    return max;\n  };\n  module.exports = maxSatisfying;\n});\n\n// node_modules/semver/ranges/min-satisfying.js\nvar require_min_satisfying = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var Range = require_range();\n  var minSatisfying = (versions, range, options) => {\n    let min = null;\n    let minSV = null;\n    let rangeObj = null;\n    try {\n      rangeObj = new Range(range, options);\n    } catch (er) {\n      return null;\n    }\n    versions.forEach((v) => {\n      if (rangeObj.test(v)) {\n        if (!min || minSV.compare(v) === 1) {\n          min = v;\n          minSV = new SemVer(min, options);\n        }\n      }\n    });\n    return min;\n  };\n  module.exports = minSatisfying;\n});\n\n// node_modules/semver/ranges/min-version.js\nvar require_min_version = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var Range = require_range();\n  var gt = require_gt();\n  var minVersion = (range, loose) => {\n    range = new Range(range, loose);\n    let minver = new SemVer(\"0.0.0\");\n    if (range.test(minver)) {\n      return minver;\n    }\n    minver = new SemVer(\"0.0.0-0\");\n    if (range.test(minver)) {\n      return minver;\n    }\n    minver = null;\n    for (let i = 0;i < range.set.length; ++i) {\n      const comparators = range.set[i];\n      let setMin = null;\n      comparators.forEach((comparator) => {\n        const compver = new SemVer(comparator.semver.version);\n        switch (comparator.operator) {\n          case \">\":\n            if (compver.prerelease.length === 0) {\n              compver.patch++;\n            } else {\n              compver.prerelease.push(0);\n            }\n            compver.raw = compver.format();\n          case \"\":\n          case \">=\":\n            if (!setMin || gt(compver, setMin)) {\n              setMin = compver;\n            }\n            break;\n          case \"<\":\n          case \"<=\":\n            break;\n          default:\n            throw new Error(`Unexpected operation: ${comparator.operator}`);\n        }\n      });\n      if (setMin && (!minver || gt(minver, setMin))) {\n        minver = setMin;\n      }\n    }\n    if (minver && range.test(minver)) {\n      return minver;\n    }\n    return null;\n  };\n  module.exports = minVersion;\n});\n\n// node_modules/semver/ranges/valid.js\nvar require_valid2 = __commonJS((exports, module) => {\n  var Range = require_range();\n  var validRange = (range, options) => {\n    try {\n      return new Range(range, options).range || \"*\";\n    } catch (er) {\n      return null;\n    }\n  };\n  module.exports = validRange;\n});\n\n// node_modules/semver/ranges/outside.js\nvar require_outside = __commonJS((exports, module) => {\n  var SemVer = require_semver();\n  var Comparator = require_comparator();\n  var { ANY } = Comparator;\n  var Range = require_range();\n  var satisfies = require_satisfies();\n  var gt = require_gt();\n  var lt = require_lt();\n  var lte = require_lte();\n  var gte = require_gte();\n  var outside = (version2, range, hilo, options) => {\n    version2 = new SemVer(version2, options);\n    range = new Range(range, options);\n    let gtfn, ltefn, ltfn, comp, ecomp;\n    switch (hilo) {\n      case \">\":\n        gtfn = gt;\n        ltefn = lte;\n        ltfn = lt;\n        comp = \">\";\n        ecomp = \">=\";\n        break;\n      case \"<\":\n        gtfn = lt;\n        ltefn = gte;\n        ltfn = gt;\n        comp = \"<\";\n        ecomp = \"<=\";\n        break;\n      default:\n        throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n    }\n    if (satisfies(version2, range, options)) {\n      return false;\n    }\n    for (let i = 0;i < range.set.length; ++i) {\n      const comparators = range.set[i];\n      let high = null;\n      let low = null;\n      comparators.forEach((comparator) => {\n        if (comparator.semver === ANY) {\n          comparator = new Comparator(\">=0.0.0\");\n        }\n        high = high || comparator;\n        low = low || comparator;\n        if (gtfn(comparator.semver, high.semver, options)) {\n          high = comparator;\n        } else if (ltfn(comparator.semver, low.semver, options)) {\n          low = comparator;\n        }\n      });\n      if (high.operator === comp || high.operator === ecomp) {\n        return false;\n      }\n      if ((!low.operator || low.operator === comp) && ltefn(version2, low.semver)) {\n        return false;\n      } else if (low.operator === ecomp && ltfn(version2, low.semver)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  module.exports = outside;\n});\n\n// node_modules/semver/ranges/gtr.js\nvar require_gtr = __commonJS((exports, module) => {\n  var outside = require_outside();\n  var gtr = (version2, range, options) => outside(version2, range, \">\", options);\n  module.exports = gtr;\n});\n\n// node_modules/semver/ranges/ltr.js\nvar require_ltr = __commonJS((exports, module) => {\n  var outside = require_outside();\n  var ltr = (version2, range, options) => outside(version2, range, \"<\", options);\n  module.exports = ltr;\n});\n\n// node_modules/semver/ranges/intersects.js\nvar require_intersects = __commonJS((exports, module) => {\n  var Range = require_range();\n  var intersects = (r1, r2, options) => {\n    r1 = new Range(r1, options);\n    r2 = new Range(r2, options);\n    return r1.intersects(r2, options);\n  };\n  module.exports = intersects;\n});\n\n// node_modules/semver/ranges/simplify.js\nvar require_simplify = __commonJS((exports, module) => {\n  var satisfies = require_satisfies();\n  var compare = require_compare();\n  module.exports = (versions, range, options) => {\n    const set = [];\n    let first = null;\n    let prev = null;\n    const v = versions.sort((a, b) => compare(a, b, options));\n    for (const version2 of v) {\n      const included = satisfies(version2, range, options);\n      if (included) {\n        prev = version2;\n        if (!first) {\n          first = version2;\n        }\n      } else {\n        if (prev) {\n          set.push([first, prev]);\n        }\n        prev = null;\n        first = null;\n      }\n    }\n    if (first) {\n      set.push([first, null]);\n    }\n    const ranges = [];\n    for (const [min, max] of set) {\n      if (min === max) {\n        ranges.push(min);\n      } else if (!max && min === v[0]) {\n        ranges.push(\"*\");\n      } else if (!max) {\n        ranges.push(`>=${min}`);\n      } else if (min === v[0]) {\n        ranges.push(`<=${max}`);\n      } else {\n        ranges.push(`${min} - ${max}`);\n      }\n    }\n    const simplified = ranges.join(\" || \");\n    const original = typeof range.raw === \"string\" ? range.raw : String(range);\n    return simplified.length < original.length ? simplified : range;\n  };\n});\n\n// node_modules/semver/ranges/subset.js\nvar require_subset = __commonJS((exports, module) => {\n  var Range = require_range();\n  var Comparator = require_comparator();\n  var { ANY } = Comparator;\n  var satisfies = require_satisfies();\n  var compare = require_compare();\n  var subset = (sub, dom, options = {}) => {\n    if (sub === dom) {\n      return true;\n    }\n    sub = new Range(sub, options);\n    dom = new Range(dom, options);\n    let sawNonNull = false;\n    OUTER:\n      for (const simpleSub of sub.set) {\n        for (const simpleDom of dom.set) {\n          const isSub = simpleSubset(simpleSub, simpleDom, options);\n          sawNonNull = sawNonNull || isSub !== null;\n          if (isSub) {\n            continue OUTER;\n          }\n        }\n        if (sawNonNull) {\n          return false;\n        }\n      }\n    return true;\n  };\n  var minimumVersionWithPreRelease = [new Comparator(\">=0.0.0-0\")];\n  var minimumVersion = [new Comparator(\">=0.0.0\")];\n  var simpleSubset = (sub, dom, options) => {\n    if (sub === dom) {\n      return true;\n    }\n    if (sub.length === 1 && sub[0].semver === ANY) {\n      if (dom.length === 1 && dom[0].semver === ANY) {\n        return true;\n      } else if (options.includePrerelease) {\n        sub = minimumVersionWithPreRelease;\n      } else {\n        sub = minimumVersion;\n      }\n    }\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      if (options.includePrerelease) {\n        return true;\n      } else {\n        dom = minimumVersion;\n      }\n    }\n    const eqSet = new Set;\n    let gt, lt;\n    for (const c of sub) {\n      if (c.operator === \">\" || c.operator === \">=\") {\n        gt = higherGT(gt, c, options);\n      } else if (c.operator === \"<\" || c.operator === \"<=\") {\n        lt = lowerLT(lt, c, options);\n      } else {\n        eqSet.add(c.semver);\n      }\n    }\n    if (eqSet.size > 1) {\n      return null;\n    }\n    let gtltComp;\n    if (gt && lt) {\n      gtltComp = compare(gt.semver, lt.semver, options);\n      if (gtltComp > 0) {\n        return null;\n      } else if (gtltComp === 0 && (gt.operator !== \">=\" || lt.operator !== \"<=\")) {\n        return null;\n      }\n    }\n    for (const eq of eqSet) {\n      if (gt && !satisfies(eq, String(gt), options)) {\n        return null;\n      }\n      if (lt && !satisfies(eq, String(lt), options)) {\n        return null;\n      }\n      for (const c of dom) {\n        if (!satisfies(eq, String(c), options)) {\n          return false;\n        }\n      }\n      return true;\n    }\n    let higher, lower;\n    let hasDomLT, hasDomGT;\n    let needDomLTPre = lt && !options.includePrerelease && lt.semver.prerelease.length ? lt.semver : false;\n    let needDomGTPre = gt && !options.includePrerelease && gt.semver.prerelease.length ? gt.semver : false;\n    if (needDomLTPre && needDomLTPre.prerelease.length === 1 && lt.operator === \"<\" && needDomLTPre.prerelease[0] === 0) {\n      needDomLTPre = false;\n    }\n    for (const c of dom) {\n      hasDomGT = hasDomGT || c.operator === \">\" || c.operator === \">=\";\n      hasDomLT = hasDomLT || c.operator === \"<\" || c.operator === \"<=\";\n      if (gt) {\n        if (needDomGTPre) {\n          if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomGTPre.major && c.semver.minor === needDomGTPre.minor && c.semver.patch === needDomGTPre.patch) {\n            needDomGTPre = false;\n          }\n        }\n        if (c.operator === \">\" || c.operator === \">=\") {\n          higher = higherGT(gt, c, options);\n          if (higher === c && higher !== gt) {\n            return false;\n          }\n        } else if (gt.operator === \">=\" && !satisfies(gt.semver, String(c), options)) {\n          return false;\n        }\n      }\n      if (lt) {\n        if (needDomLTPre) {\n          if (c.semver.prerelease && c.semver.prerelease.length && c.semver.major === needDomLTPre.major && c.semver.minor === needDomLTPre.minor && c.semver.patch === needDomLTPre.patch) {\n            needDomLTPre = false;\n          }\n        }\n        if (c.operator === \"<\" || c.operator === \"<=\") {\n          lower = lowerLT(lt, c, options);\n          if (lower === c && lower !== lt) {\n            return false;\n          }\n        } else if (lt.operator === \"<=\" && !satisfies(lt.semver, String(c), options)) {\n          return false;\n        }\n      }\n      if (!c.operator && (lt || gt) && gtltComp !== 0) {\n        return false;\n      }\n    }\n    if (gt && hasDomLT && !lt && gtltComp !== 0) {\n      return false;\n    }\n    if (lt && hasDomGT && !gt && gtltComp !== 0) {\n      return false;\n    }\n    if (needDomGTPre || needDomLTPre) {\n      return false;\n    }\n    return true;\n  };\n  var higherGT = (a, b, options) => {\n    if (!a) {\n      return b;\n    }\n    const comp = compare(a.semver, b.semver, options);\n    return comp > 0 ? a : comp < 0 ? b : b.operator === \">\" && a.operator === \">=\" ? b : a;\n  };\n  var lowerLT = (a, b, options) => {\n    if (!a) {\n      return b;\n    }\n    const comp = compare(a.semver, b.semver, options);\n    return comp < 0 ? a : comp > 0 ? b : b.operator === \"<\" && a.operator === \"<=\" ? b : a;\n  };\n  module.exports = subset;\n});\n\n// node_modules/semver/index.js\nvar require_semver2 = __commonJS((exports, module) => {\n  var internalRe = require_re();\n  var constants = require_constants();\n  var SemVer = require_semver();\n  var identifiers = require_identifiers();\n  var parse3 = require_parse();\n  var valid = require_valid();\n  var clean = require_clean();\n  var inc = require_inc();\n  var diff = require_diff();\n  var major = require_major();\n  var minor = require_minor();\n  var patch = require_patch();\n  var prerelease = require_prerelease();\n  var compare = require_compare();\n  var rcompare = require_rcompare();\n  var compareLoose = require_compare_loose();\n  var compareBuild = require_compare_build();\n  var sort = require_sort();\n  var rsort = require_rsort();\n  var gt = require_gt();\n  var lt = require_lt();\n  var eq = require_eq();\n  var neq = require_neq();\n  var gte = require_gte();\n  var lte = require_lte();\n  var cmp = require_cmp();\n  var coerce = require_coerce();\n  var Comparator = require_comparator();\n  var Range = require_range();\n  var satisfies = require_satisfies();\n  var toComparators = require_to_comparators();\n  var maxSatisfying = require_max_satisfying();\n  var minSatisfying = require_min_satisfying();\n  var minVersion = require_min_version();\n  var validRange = require_valid2();\n  var outside = require_outside();\n  var gtr = require_gtr();\n  var ltr = require_ltr();\n  var intersects = require_intersects();\n  var simplifyRange = require_simplify();\n  var subset = require_subset();\n  module.exports = {\n    parse: parse3,\n    valid,\n    clean,\n    inc,\n    diff,\n    major,\n    minor,\n    patch,\n    prerelease,\n    compare,\n    rcompare,\n    compareLoose,\n    compareBuild,\n    sort,\n    rsort,\n    gt,\n    lt,\n    eq,\n    neq,\n    gte,\n    lte,\n    cmp,\n    coerce,\n    Comparator,\n    Range,\n    satisfies,\n    toComparators,\n    maxSatisfying,\n    minSatisfying,\n    minVersion,\n    validRange,\n    outside,\n    gtr,\n    ltr,\n    intersects,\n    simplifyRange,\n    subset,\n    SemVer,\n    re: internalRe.re,\n    src: internalRe.src,\n    tokens: internalRe.t,\n    SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n    RELEASE_TYPES: constants.RELEASE_TYPES,\n    compareIdentifiers: identifiers.compareIdentifiers,\n    rcompareIdentifiers: identifiers.rcompareIdentifiers\n  };\n});\n\n// node_modules/@npmcli/git/lib/lines-to-revs.js\nvar require_lines_to_revs = __commonJS((exports, module) => {\n  var semver = require_semver2();\n  module.exports = (lines) => finish(lines.reduce(linesToRevsReducer, {\n    versions: {},\n    \"dist-tags\": {},\n    refs: {},\n    shas: {}\n  }));\n  var finish = (revs) => distTags(shaList(peelTags(revs)));\n  var shaList = (revs) => {\n    Object.keys(revs.refs).forEach((ref) => {\n      const doc = revs.refs[ref];\n      if (!revs.shas[doc.sha]) {\n        revs.shas[doc.sha] = [ref];\n      } else {\n        revs.shas[doc.sha].push(ref);\n      }\n    });\n    return revs;\n  };\n  var peelTags = (revs) => {\n    Object.keys(revs.refs).filter((ref) => ref.endsWith(\"^{}\")).forEach((ref) => {\n      const peeled = revs.refs[ref];\n      const unpeeled = revs.refs[ref.replace(/\\^\\{\\}$/, \"\")];\n      if (unpeeled) {\n        unpeeled.sha = peeled.sha;\n        delete revs.refs[ref];\n      }\n    });\n    return revs;\n  };\n  var distTags = (revs) => {\n    const HEAD = revs.refs.HEAD || {};\n    const versions = Object.keys(revs.versions);\n    versions.forEach((v) => {\n      const ver = revs.versions[v];\n      if (revs.refs.latest && ver.sha === revs.refs.latest.sha) {\n        revs[\"dist-tags\"].latest = v;\n      } else if (ver.sha === HEAD.sha) {\n        revs[\"dist-tags\"].HEAD = v;\n        if (!revs.refs.latest) {\n          revs[\"dist-tags\"].latest = v;\n        }\n      }\n    });\n    return revs;\n  };\n  var refType = (ref) => {\n    if (ref.startsWith(\"refs/tags/\")) {\n      return \"tag\";\n    }\n    if (ref.startsWith(\"refs/heads/\")) {\n      return \"branch\";\n    }\n    if (ref.startsWith(\"refs/pull/\")) {\n      return \"pull\";\n    }\n    if (ref === \"HEAD\") {\n      return \"head\";\n    }\n    return \"other\";\n  };\n  var lineToRevDoc = (line) => {\n    const split = line.trim().split(/\\s+/, 2);\n    if (split.length < 2) {\n      return null;\n    }\n    const sha = split[0].trim();\n    const rawRef = split[1].trim();\n    const type = refType(rawRef);\n    if (type === \"tag\") {\n      const ref = rawRef.slice(\"refs/tags/\".length);\n      return { sha, ref, rawRef, type };\n    }\n    if (type === \"branch\") {\n      const ref = rawRef.slice(\"refs/heads/\".length);\n      return { sha, ref, rawRef, type };\n    }\n    if (type === \"pull\") {\n      const ref = rawRef.slice(\"refs/\".length).replace(/\\/head$/, \"\");\n      return { sha, ref, rawRef, type };\n    }\n    if (type === \"head\") {\n      const ref = \"HEAD\";\n      return { sha, ref, rawRef, type };\n    }\n    return { sha, ref: rawRef, rawRef, type };\n  };\n  var linesToRevsReducer = (revs, line) => {\n    const doc = lineToRevDoc(line);\n    if (!doc) {\n      return revs;\n    }\n    revs.refs[doc.ref] = doc;\n    revs.refs[doc.rawRef] = doc;\n    if (doc.type === \"tag\") {\n      const match = !doc.ref.endsWith(\"^{}\") && doc.ref.match(/v?(\\d+\\.\\d+\\.\\d+(?:[-+].+)?)$/);\n      if (match && semver.valid(match[1], true)) {\n        revs.versions[semver.clean(match[1], true)] = doc;\n      }\n    }\n    return revs;\n  };\n});\n\n// node_modules/@npmcli/git/lib/revs.js\nvar require_revs = __commonJS((exports, module) => {\n  var pinflight = require_inflight();\n  var spawn = require_spawn();\n  var LRU = require_lru_cache2();\n  var revsCache = new LRU({\n    max: 100,\n    ttl: 5 * 60 * 1000\n  });\n  var linesToRevs = require_lines_to_revs();\n  module.exports = async (repo, opts = {}) => {\n    if (!opts.noGitRevCache) {\n      const cached = revsCache.get(repo);\n      if (cached) {\n        return cached;\n      }\n    }\n    return pinflight(`ls-remote:${repo}`, () => spawn([\"ls-remote\", repo], opts).then(({ stdout }) => linesToRevs(stdout.trim().split(\"\\n\"))).then((revs) => {\n      revsCache.set(repo, revs);\n      return revs;\n    }));\n  };\n});\n\n// node_modules/@npmcli/git/lib/utils.js\nvar require_utils5 = __commonJS((exports) => {\n  var isWindows = (opts) => (opts.fakePlatform || process.platform) === \"win32\";\n  exports.isWindows = isWindows;\n});\n\n// node_modules/builtins/index.js\nvar require_builtins = __commonJS((exports, module) => {\n  var semver = require_semver2();\n  var permanentModules = [\n    \"assert\",\n    \"buffer\",\n    \"child_process\",\n    \"cluster\",\n    \"console\",\n    \"constants\",\n    \"crypto\",\n    \"dgram\",\n    \"dns\",\n    \"domain\",\n    \"events\",\n    \"fs\",\n    \"http\",\n    \"https\",\n    \"module\",\n    \"net\",\n    \"os\",\n    \"path\",\n    \"punycode\",\n    \"querystring\",\n    \"readline\",\n    \"repl\",\n    \"stream\",\n    \"string_decoder\",\n    \"sys\",\n    \"timers\",\n    \"tls\",\n    \"tty\",\n    \"url\",\n    \"util\",\n    \"vm\",\n    \"zlib\"\n  ];\n  var versionLockedModules = {\n    freelist: \"<6.0.0\",\n    v8: \">=1.0.0\",\n    process: \">=1.1.0\",\n    inspector: \">=8.0.0\",\n    async_hooks: \">=8.1.0\",\n    http2: \">=8.4.0\",\n    perf_hooks: \">=8.5.0\",\n    trace_events: \">=10.0.0\",\n    worker_threads: \">=12.0.0\",\n    \"node:test\": \">=18.0.0\"\n  };\n  var experimentalModules = {\n    worker_threads: \">=10.5.0\",\n    wasi: \">=12.16.0\",\n    diagnostics_channel: \"^14.17.0 || >=15.1.0\"\n  };\n  module.exports = ({ version: version2 = process.version, experimental = false } = {}) => {\n    const builtins = [...permanentModules];\n    for (const [name, semverRange] of Object.entries(versionLockedModules)) {\n      if (version2 === \"*\" || semver.satisfies(version2, semverRange)) {\n        builtins.push(name);\n      }\n    }\n    if (experimental) {\n      for (const [name, semverRange] of Object.entries(experimentalModules)) {\n        if (!builtins.includes(name) && (version2 === \"*\" || semver.satisfies(version2, semverRange))) {\n          builtins.push(name);\n        }\n      }\n    }\n    return builtins;\n  };\n});\n\n// node_modules/validate-npm-package-name/lib/index.js\nvar require_lib10 = __commonJS((exports, module) => {\n  var validate5 = function(name) {\n    var warnings = [];\n    var errors = [];\n    if (name === null) {\n      errors.push(\"name cannot be null\");\n      return done(warnings, errors);\n    }\n    if (name === undefined) {\n      errors.push(\"name cannot be undefined\");\n      return done(warnings, errors);\n    }\n    if (typeof name !== \"string\") {\n      errors.push(\"name must be a string\");\n      return done(warnings, errors);\n    }\n    if (!name.length) {\n      errors.push(\"name length must be greater than zero\");\n    }\n    if (name.match(/^\\./)) {\n      errors.push(\"name cannot start with a period\");\n    }\n    if (name.match(/^_/)) {\n      errors.push(\"name cannot start with an underscore\");\n    }\n    if (name.trim() !== name) {\n      errors.push(\"name cannot contain leading or trailing spaces\");\n    }\n    blacklist.forEach(function(blacklistedName) {\n      if (name.toLowerCase() === blacklistedName) {\n        errors.push(blacklistedName + \" is a blacklisted name\");\n      }\n    });\n    builtins({ version: \"*\" }).forEach(function(builtin) {\n      if (name.toLowerCase() === builtin) {\n        warnings.push(builtin + \" is a core module name\");\n      }\n    });\n    if (name.length > 214) {\n      warnings.push(\"name can no longer contain more than 214 characters\");\n    }\n    if (name.toLowerCase() !== name) {\n      warnings.push(\"name can no longer contain capital letters\");\n    }\n    if (/[~'!()*]/.test(name.split(\"/\").slice(-1)[0])) {\n      warnings.push('name can no longer contain special characters (\"~\\'!()*\")');\n    }\n    if (encodeURIComponent(name) !== name) {\n      var nameMatch = name.match(scopedPackagePattern);\n      if (nameMatch) {\n        var user = nameMatch[1];\n        var pkg = nameMatch[2];\n        if (encodeURIComponent(user) === user && encodeURIComponent(pkg) === pkg) {\n          return done(warnings, errors);\n        }\n      }\n      errors.push(\"name can only contain URL-friendly characters\");\n    }\n    return done(warnings, errors);\n  };\n  var scopedPackagePattern = new RegExp(\"^(?:@([^/]+?)[/])?([^/]+?)$\");\n  var builtins = require_builtins();\n  var blacklist = [\n    \"node_modules\",\n    \"favicon.ico\"\n  ];\n  var done = function(warnings, errors) {\n    var result = {\n      validForNewPackages: errors.length === 0 && warnings.length === 0,\n      validForOldPackages: errors.length === 0,\n      warnings,\n      errors\n    };\n    if (!result.warnings.length) {\n      delete result.warnings;\n    }\n    if (!result.errors.length) {\n      delete result.errors;\n    }\n    return result;\n  };\n  module.exports = validate5;\n});\n\n// node_modules/npm-package-arg/lib/npa.js\nvar require_npa = __commonJS((exports, module) => {\n  var npa = function(arg, where) {\n    let name;\n    let spec;\n    if (typeof arg === \"object\") {\n      if (arg instanceof Result && (!where || where === arg.where)) {\n        return arg;\n      } else if (arg.name && arg.rawSpec) {\n        return npa.resolve(arg.name, arg.rawSpec, where || arg.where);\n      } else {\n        return npa(arg.raw, where || arg.where);\n      }\n    }\n    const nameEndsAt = arg[0] === \"@\" ? arg.slice(1).indexOf(\"@\") + 1 : arg.indexOf(\"@\");\n    const namePart = nameEndsAt > 0 ? arg.slice(0, nameEndsAt) : arg;\n    if (isURL.test(arg)) {\n      spec = arg;\n    } else if (isGit.test(arg)) {\n      spec = `git+ssh://${arg}`;\n    } else if (namePart[0] !== \"@\" && (hasSlashes.test(namePart) || isFilename.test(namePart))) {\n      spec = arg;\n    } else if (nameEndsAt > 0) {\n      name = namePart;\n      spec = arg.slice(nameEndsAt + 1) || \"*\";\n    } else {\n      const valid = validatePackageName(arg);\n      if (valid.validForOldPackages) {\n        name = arg;\n        spec = \"*\";\n      } else {\n        spec = arg;\n      }\n    }\n    return resolve(name, spec, where, arg);\n  };\n  var resolve = function(name, spec, where, arg) {\n    const res = new Result({\n      raw: arg,\n      name,\n      rawSpec: spec,\n      fromArgument: arg != null\n    });\n    if (name) {\n      res.setName(name);\n    }\n    if (spec && (isFilespec.test(spec) || /^file:/i.test(spec))) {\n      return fromFile(res, where);\n    } else if (spec && /^npm:/i.test(spec)) {\n      return fromAlias(res, where);\n    }\n    const hosted = HostedGit.fromUrl(spec, {\n      noGitPlus: true,\n      noCommittish: true\n    });\n    if (hosted) {\n      return fromHostedGit(res, hosted);\n    } else if (spec && isURL.test(spec)) {\n      return fromURL(res);\n    } else if (spec && (hasSlashes.test(spec) || isFilename.test(spec))) {\n      return fromFile(res, where);\n    } else {\n      return fromRegistry(res);\n    }\n  };\n  var toPurl = function(arg, reg = defaultRegistry) {\n    const res = npa(arg);\n    if (res.type !== \"version\") {\n      throw invalidPurlType(res.type, res.raw);\n    }\n    let purl = \"pkg:npm/\" + res.name.replace(/^@/, \"%40\") + \"@\" + res.rawSpec;\n    if (reg !== defaultRegistry) {\n      purl += \"?repository_url=\" + reg;\n    }\n    return purl;\n  };\n  var invalidPackageName = function(name, valid, raw) {\n    const err = new Error(`Invalid package name \"${name}\" of package \"${raw}\": ${valid.errors.join(\"; \")}.`);\n    err.code = \"EINVALIDPACKAGENAME\";\n    return err;\n  };\n  var invalidTagName = function(name, raw) {\n    const err = new Error(`Invalid tag name \"${name}\" of package \"${raw}\": Tags may not have any characters that encodeURIComponent encodes.`);\n    err.code = \"EINVALIDTAGNAME\";\n    return err;\n  };\n  var invalidPurlType = function(type, raw) {\n    const err = new Error(`Invalid type \"${type}\" of package \"${raw}\": Purl can only be generated for \"version\" types.`);\n    err.code = \"EINVALIDPURLTYPE\";\n    return err;\n  };\n  var Result = function(opts) {\n    this.type = opts.type;\n    this.registry = opts.registry;\n    this.where = opts.where;\n    if (opts.raw == null) {\n      this.raw = opts.name ? opts.name + \"@\" + opts.rawSpec : opts.rawSpec;\n    } else {\n      this.raw = opts.raw;\n    }\n    this.name = undefined;\n    this.escapedName = undefined;\n    this.scope = undefined;\n    this.rawSpec = opts.rawSpec || \"\";\n    this.saveSpec = opts.saveSpec;\n    this.fetchSpec = opts.fetchSpec;\n    if (opts.name) {\n      this.setName(opts.name);\n    }\n    this.gitRange = opts.gitRange;\n    this.gitCommittish = opts.gitCommittish;\n    this.gitSubdir = opts.gitSubdir;\n    this.hosted = opts.hosted;\n  };\n  var setGitCommittish = function(res, committish) {\n    if (!committish) {\n      res.gitCommittish = null;\n      return res;\n    }\n    for (const part of committish.split(\"::\")) {\n      if (!part.includes(\":\")) {\n        if (res.gitRange) {\n          throw new Error(\"cannot override existing semver range with a committish\");\n        }\n        if (res.gitCommittish) {\n          throw new Error(\"cannot override existing committish with a second committish\");\n        }\n        res.gitCommittish = part;\n        continue;\n      }\n      const [name, value] = part.split(\":\");\n      if (name === \"semver\") {\n        if (res.gitCommittish) {\n          throw new Error(\"cannot override existing committish with a semver range\");\n        }\n        if (res.gitRange) {\n          throw new Error(\"cannot override existing semver range with a second semver range\");\n        }\n        res.gitRange = decodeURIComponent(value);\n        continue;\n      }\n      if (name === \"path\") {\n        if (res.gitSubdir) {\n          throw new Error(\"cannot override existing path with a second path\");\n        }\n        res.gitSubdir = `/${value}`;\n        continue;\n      }\n      log.warn(\"npm-package-arg\", `ignoring unknown key \"${name}\"`);\n    }\n    return res;\n  };\n  var fromFile = function(res, where) {\n    if (!where) {\n      where = process.cwd();\n    }\n    res.type = isFilename.test(res.rawSpec) ? \"file\" : \"directory\";\n    res.where = where;\n    let specUrl;\n    let resolvedUrl;\n    const prefix = !/^file:/.test(res.rawSpec) ? \"file:\" : \"\";\n    const rawWithPrefix = prefix + res.rawSpec;\n    let rawNoPrefix = rawWithPrefix.replace(/^file:/, \"\");\n    try {\n      resolvedUrl = new url.URL(rawWithPrefix, `file://${path.resolve(where)}/`);\n      specUrl = new url.URL(rawWithPrefix);\n    } catch (originalError) {\n      const er = new Error(\"Invalid file: URL, must comply with RFC 8909\");\n      throw Object.assign(er, {\n        raw: res.rawSpec,\n        spec: res,\n        where,\n        originalError\n      });\n    }\n    if (process.env.NPM_PACKAGE_ARG_8909_STRICT !== \"1\") {\n      if (resolvedUrl.host && resolvedUrl.host !== \"localhost\") {\n        const rawSpec = res.rawSpec.replace(/^file:\\/\\//, \"file:///\");\n        resolvedUrl = new url.URL(rawSpec, `file://${path.resolve(where)}/`);\n        specUrl = new url.URL(rawSpec);\n        rawNoPrefix = rawSpec.replace(/^file:/, \"\");\n      }\n      if (/^\\/{1,3}\\.\\.?(\\/|$)/.test(rawNoPrefix)) {\n        const rawSpec = res.rawSpec.replace(/^file:\\/{1,3}/, \"file:\");\n        resolvedUrl = new url.URL(rawSpec, `file://${path.resolve(where)}/`);\n        specUrl = new url.URL(rawSpec);\n        rawNoPrefix = rawSpec.replace(/^file:/, \"\");\n      }\n    }\n    if (resolvedUrl.host && resolvedUrl.host !== \"localhost\") {\n      const msg = `Invalid file: URL, must be absolute if // present`;\n      throw Object.assign(new Error(msg), {\n        raw: res.rawSpec,\n        parsed: resolvedUrl\n      });\n    }\n    let specPath = decodeURIComponent(specUrl.pathname);\n    let resolvedPath = decodeURIComponent(resolvedUrl.pathname);\n    if (isWindows) {\n      specPath = specPath.replace(/^\\/+([a-z]:\\/)/i, \"$1\");\n      resolvedPath = resolvedPath.replace(/^\\/+([a-z]:\\/)/i, \"$1\");\n    }\n    if (/^\\/~(\\/|$)/.test(specPath)) {\n      res.saveSpec = `file:${specPath.substr(1)}`;\n      resolvedPath = path.resolve(homedir(), specPath.substr(3));\n    } else if (!path.isAbsolute(rawNoPrefix)) {\n      res.saveSpec = `file:${path.relative(where, resolvedPath)}`;\n    } else {\n      res.saveSpec = `file:${path.resolve(resolvedPath)}`;\n    }\n    res.fetchSpec = path.resolve(where, resolvedPath);\n    return res;\n  };\n  var fromHostedGit = function(res, hosted) {\n    res.type = \"git\";\n    res.hosted = hosted;\n    res.saveSpec = hosted.toString({ noGitPlus: false, noCommittish: false });\n    res.fetchSpec = hosted.getDefaultRepresentation() === \"shortcut\" ? null : hosted.toString();\n    return setGitCommittish(res, hosted.committish);\n  };\n  var unsupportedURLType = function(protocol, spec) {\n    const err = new Error(`Unsupported URL Type \"${protocol}\": ${spec}`);\n    err.code = \"EUNSUPPORTEDPROTOCOL\";\n    return err;\n  };\n  var matchGitScp = function(spec) {\n    const matched = spec.match(/^git\\+ssh:\\/\\/([^:#]+:[^#]+(?:\\.git)?)(?:#(.*))?$/i);\n    return matched && !matched[1].match(/:[0-9]+\\/?.*$/i) && {\n      fetchSpec: matched[1],\n      gitCommittish: matched[2] == null ? null : matched[2]\n    };\n  };\n  var fromURL = function(res) {\n    const urlparse = url.parse(res.rawSpec);\n    res.saveSpec = res.rawSpec;\n    switch (urlparse.protocol) {\n      case \"git:\":\n      case \"git+http:\":\n      case \"git+https:\":\n      case \"git+rsync:\":\n      case \"git+ftp:\":\n      case \"git+file:\":\n      case \"git+ssh:\": {\n        res.type = \"git\";\n        const match = urlparse.protocol === \"git+ssh:\" ? matchGitScp(res.rawSpec) : null;\n        if (match) {\n          setGitCommittish(res, match.gitCommittish);\n          res.fetchSpec = match.fetchSpec;\n        } else {\n          setGitCommittish(res, urlparse.hash != null ? urlparse.hash.slice(1) : \"\");\n          urlparse.protocol = urlparse.protocol.replace(/^git[+]/, \"\");\n          if (urlparse.protocol === \"file:\" && /^git\\+file:\\/\\/[a-z]:/i.test(res.rawSpec)) {\n            urlparse.host += \":\";\n            urlparse.hostname += \":\";\n          }\n          delete urlparse.hash;\n          res.fetchSpec = url.format(urlparse);\n        }\n        break;\n      }\n      case \"http:\":\n      case \"https:\":\n        res.type = \"remote\";\n        res.fetchSpec = res.saveSpec;\n        break;\n      default:\n        throw unsupportedURLType(urlparse.protocol, res.rawSpec);\n    }\n    return res;\n  };\n  var fromAlias = function(res, where) {\n    const subSpec = npa(res.rawSpec.substr(4), where);\n    if (subSpec.type === \"alias\") {\n      throw new Error(\"nested aliases not supported\");\n    }\n    if (!subSpec.registry) {\n      throw new Error(\"aliases only work for registry deps\");\n    }\n    res.subSpec = subSpec;\n    res.registry = true;\n    res.type = \"alias\";\n    res.saveSpec = null;\n    res.fetchSpec = null;\n    return res;\n  };\n  var fromRegistry = function(res) {\n    res.registry = true;\n    const spec = res.rawSpec.trim();\n    res.saveSpec = null;\n    res.fetchSpec = spec;\n    const version2 = semver.valid(spec, true);\n    const range = semver.validRange(spec, true);\n    if (version2) {\n      res.type = \"version\";\n    } else if (range) {\n      res.type = \"range\";\n    } else {\n      if (encodeURIComponent(spec) !== spec) {\n        throw invalidTagName(spec, res.raw);\n      }\n      res.type = \"tag\";\n    }\n    return res;\n  };\n  module.exports = npa;\n  module.exports.resolve = resolve;\n  module.exports.toPurl = toPurl;\n  module.exports.Result = Result;\n  var url = __require(\"url\");\n  var HostedGit = require_lib5();\n  var semver = require_semver2();\n  var path = global.FAKE_WINDOWS ? __require(\"path\").win32 : __require(\"path\");\n  var validatePackageName = require_lib10();\n  var { homedir } = __require(\"os\");\n  var log = require_lib6();\n  var isWindows = process.platform === \"win32\" || global.FAKE_WINDOWS;\n  var hasSlashes = isWindows ? /\\\\|[/]/ : /[/]/;\n  var isURL = /^(?:git[+])?[a-z]+:/i;\n  var isGit = /^[^@]+@[^:.]+\\.[^:]+:.+$/i;\n  var isFilename = /[.](?:tgz|tar.gz|tar)$/i;\n  var isFilespec = isWindows ? /^(?:[.]|~[/]|[/\\\\]|[a-zA-Z]:)/ : /^(?:[.]|~[/]|[/]|[a-zA-Z]:)/;\n  var defaultRegistry = \"https://registry.npmjs.org\";\n  Result.prototype.setName = function(name) {\n    const valid = validatePackageName(name);\n    if (!valid.validForOldPackages) {\n      throw invalidPackageName(name, valid, this.raw);\n    }\n    this.name = name;\n    this.scope = name[0] === \"@\" ? name.slice(0, name.indexOf(\"/\")) : undefined;\n    this.escapedName = name.replace(\"/\", \"%2f\");\n    return this;\n  };\n  Result.prototype.toString = function() {\n    const full = [];\n    if (this.name != null && this.name !== \"\") {\n      full.push(this.name);\n    }\n    const spec = this.saveSpec || this.fetchSpec || this.rawSpec;\n    if (spec != null && spec !== \"\") {\n      full.push(spec);\n    }\n    return full.length ? full.join(\"@\") : this.raw;\n  };\n  Result.prototype.toJSON = function() {\n    const result = Object.assign({}, this);\n    delete result.hosted;\n    return result;\n  };\n});\n\n// node_modules/npm-install-checks/lib/index.js\nvar require_lib11 = __commonJS((exports, module) => {\n  var semver = require_semver2();\n  var checkEngine = (target, npmVer, nodeVer, force = false) => {\n    const nodev = force ? null : nodeVer;\n    const eng = target.engines;\n    const opt = { includePrerelease: true };\n    if (!eng) {\n      return;\n    }\n    const nodeFail = nodev && eng.node && !semver.satisfies(nodev, eng.node, opt);\n    const npmFail = npmVer && eng.npm && !semver.satisfies(npmVer, eng.npm, opt);\n    if (nodeFail || npmFail) {\n      throw Object.assign(new Error(\"Unsupported engine\"), {\n        pkgid: target._id,\n        current: { node: nodeVer, npm: npmVer },\n        required: eng,\n        code: \"EBADENGINE\"\n      });\n    }\n  };\n  var isMusl = (file) => file.includes(\"libc.musl-\") || file.includes(\"ld-musl-\");\n  var checkPlatform = (target, force = false) => {\n    if (force) {\n      return;\n    }\n    const platform = process.platform;\n    const arch = process.arch;\n    const osOk = target.os ? checkList(platform, target.os) : true;\n    const cpuOk = target.cpu ? checkList(arch, target.cpu) : true;\n    let libcOk = true;\n    let libcFamily = null;\n    if (target.libc) {\n      if (platform !== \"linux\") {\n        libcOk = false;\n      } else {\n        const report = process.report.getReport();\n        if (report.header?.glibcVersionRuntime) {\n          libcFamily = \"glibc\";\n        } else if (Array.isArray(report.sharedObjects) && report.sharedObjects.some(isMusl)) {\n          libcFamily = \"musl\";\n        }\n        libcOk = libcFamily ? checkList(libcFamily, target.libc) : false;\n      }\n    }\n    if (!osOk || !cpuOk || !libcOk) {\n      throw Object.assign(new Error(\"Unsupported platform\"), {\n        pkgid: target._id,\n        current: {\n          os: platform,\n          cpu: arch,\n          libc: libcFamily\n        },\n        required: {\n          os: target.os,\n          cpu: target.cpu,\n          libc: target.libc\n        },\n        code: \"EBADPLATFORM\"\n      });\n    }\n  };\n  var checkList = (value, list) => {\n    if (typeof list === \"string\") {\n      list = [list];\n    }\n    if (list.length === 1 && list[0] === \"any\") {\n      return true;\n    }\n    let negated = 0;\n    let match = false;\n    for (const entry of list) {\n      const negate = entry.charAt(0) === \"!\";\n      const test = negate ? entry.slice(1) : entry;\n      if (negate) {\n        negated++;\n        if (value === test) {\n          return false;\n        }\n      } else {\n        match = match || value === test;\n      }\n    }\n    return match || negated === list.length;\n  };\n  module.exports = {\n    checkEngine,\n    checkPlatform\n  };\n});\n\n// node_modules/npm-pick-manifest/lib/index.js\nvar require_lib12 = __commonJS((exports, module) => {\n  var npa = require_npa();\n  var semver = require_semver2();\n  var { checkEngine } = require_lib11();\n  var normalizeBin = require_lib4();\n  var engineOk = (manifest, npmVersion, nodeVersion) => {\n    try {\n      checkEngine(manifest, npmVersion, nodeVersion);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  var isBefore = (verTimes, ver, time) => !verTimes || !verTimes[ver] || Date.parse(verTimes[ver]) <= time;\n  var avoidSemverOpt = { includePrerelease: true, loose: true };\n  var shouldAvoid = (ver, avoid) => avoid && semver.satisfies(ver, avoid, avoidSemverOpt);\n  var decorateAvoid = (result, avoid) => result && shouldAvoid(result.version, avoid) ? { ...result, _shouldAvoid: true } : result;\n  var pickManifest = (packument, wanted, opts) => {\n    const {\n      defaultTag = \"latest\",\n      before = null,\n      nodeVersion = process.version,\n      npmVersion = null,\n      includeStaged = false,\n      avoid = null,\n      avoidStrict = false\n    } = opts;\n    const { name, time: verTimes } = packument;\n    const versions = packument.versions || {};\n    if (avoidStrict) {\n      const looseOpts = {\n        ...opts,\n        avoidStrict: false\n      };\n      const result = pickManifest(packument, wanted, looseOpts);\n      if (!result || !result._shouldAvoid) {\n        return result;\n      }\n      const caret = pickManifest(packument, `^${result.version}`, looseOpts);\n      if (!caret || !caret._shouldAvoid) {\n        return {\n          ...caret,\n          _outsideDependencyRange: true,\n          _isSemVerMajor: false\n        };\n      }\n      const star = pickManifest(packument, \"*\", looseOpts);\n      if (!star || !star._shouldAvoid) {\n        return {\n          ...star,\n          _outsideDependencyRange: true,\n          _isSemVerMajor: true\n        };\n      }\n      throw Object.assign(new Error(`No avoidable versions for ${name}`), {\n        code: \"ETARGET\",\n        name,\n        wanted,\n        avoid,\n        before,\n        versions: Object.keys(versions)\n      });\n    }\n    const staged = includeStaged && packument.stagedVersions && packument.stagedVersions.versions || {};\n    const restricted = packument.policyRestrictions && packument.policyRestrictions.versions || {};\n    const time = before && verTimes ? +new Date(before) : Infinity;\n    const spec = npa.resolve(name, wanted || defaultTag);\n    const type = spec.type;\n    const distTags = packument[\"dist-tags\"] || {};\n    if (type !== \"tag\" && type !== \"version\" && type !== \"range\") {\n      throw new Error(\"Only tag, version, and range are supported\");\n    }\n    if (wanted && type === \"tag\") {\n      const ver = distTags[wanted];\n      if (isBefore(verTimes, ver, time)) {\n        return decorateAvoid(versions[ver] || staged[ver] || restricted[ver], avoid);\n      } else {\n        return pickManifest(packument, `<=${ver}`, opts);\n      }\n    }\n    if (wanted && type === \"version\") {\n      const ver = semver.clean(wanted, { loose: true });\n      const mani = versions[ver] || staged[ver] || restricted[ver];\n      return isBefore(verTimes, ver, time) ? decorateAvoid(mani, avoid) : null;\n    }\n    const range = type === \"range\" ? wanted : \"*\";\n    const defaultVer = distTags[defaultTag];\n    if (defaultVer && (range === \"*\" || semver.satisfies(defaultVer, range, { loose: true })) && !shouldAvoid(defaultVer, avoid)) {\n      const mani = versions[defaultVer];\n      if (mani && isBefore(verTimes, defaultVer, time)) {\n        return mani;\n      }\n    }\n    const allEntries = Object.entries(versions).concat(Object.entries(staged)).concat(Object.entries(restricted)).filter(([ver, mani]) => isBefore(verTimes, ver, time));\n    if (!allEntries.length) {\n      throw Object.assign(new Error(`No versions available for ${name}`), {\n        code: \"ENOVERSIONS\",\n        name,\n        type,\n        wanted,\n        before,\n        versions: Object.keys(versions)\n      });\n    }\n    const sortSemverOpt = { loose: true };\n    const entries = allEntries.filter(([ver, mani]) => semver.satisfies(ver, range, { loose: true })).sort((a, b) => {\n      const [vera, mania] = a;\n      const [verb, manib] = b;\n      const notavoida = !shouldAvoid(vera, avoid);\n      const notavoidb = !shouldAvoid(verb, avoid);\n      const notrestra = !restricted[a];\n      const notrestrb = !restricted[b];\n      const notstagea = !staged[a];\n      const notstageb = !staged[b];\n      const notdepra = !mania.deprecated;\n      const notdeprb = !manib.deprecated;\n      const enginea = engineOk(mania, npmVersion, nodeVersion);\n      const engineb = engineOk(manib, npmVersion, nodeVersion);\n      return notavoidb - notavoida || notrestrb - notrestra || notstageb - notstagea || (notdeprb && engineb) - (notdepra && enginea) || engineb - enginea || notdeprb - notdepra || semver.rcompare(vera, verb, sortSemverOpt);\n    });\n    return decorateAvoid(entries[0] && entries[0][1], avoid);\n  };\n  module.exports = (packument, wanted, opts = {}) => {\n    const mani = pickManifest(packument, wanted, opts);\n    const picked = mani && normalizeBin(mani);\n    const policyRestrictions = packument.policyRestrictions;\n    const restricted = policyRestrictions && policyRestrictions.versions || {};\n    if (picked && !restricted[picked.version]) {\n      return picked;\n    }\n    const { before = null, defaultTag = \"latest\" } = opts;\n    const bstr = before ? new Date(before).toLocaleString() : \"\";\n    const { name } = packument;\n    const pckg = `${name}@${wanted}` + (before ? ` with a date before ${bstr}` : \"\");\n    const isForbidden = picked && !!restricted[picked.version];\n    const polMsg = isForbidden ? policyRestrictions.message : \"\";\n    const msg = !isForbidden ? `No matching version found for ${pckg}.` : `Could not download ${pckg} due to policy violations:\\n${polMsg}`;\n    const code = isForbidden ? \"E403\" : \"ETARGET\";\n    throw Object.assign(new Error(msg), {\n      code,\n      type: npa.resolve(packument.name, wanted).type,\n      wanted,\n      versions: Object.keys(packument.versions),\n      name,\n      distTags: packument[\"dist-tags\"],\n      defaultTag\n    });\n  };\n});\n\n// node_modules/@npmcli/git/lib/clone.js\nvar require_clone = __commonJS((exports, module) => {\n  var shallowHosts = new Set([\n    \"github.com\",\n    \"gist.github.com\",\n    \"gitlab.com\",\n    \"bitbucket.com\",\n    \"bitbucket.org\"\n  ]);\n  var { parse: parse3 } = __require(\"url\");\n  var path = __require(\"path\");\n  var getRevs = require_revs();\n  var spawn = require_spawn();\n  var { isWindows } = require_utils5();\n  var pickManifest = require_lib12();\n  var fs = __require(\"fs/promises\");\n  module.exports = (repo, ref = \"HEAD\", target = null, opts = {}) => getRevs(repo, opts).then((revs) => clone(repo, revs, ref, resolveRef(revs, ref, opts), target || defaultTarget(repo, opts.cwd), opts));\n  var maybeShallow = (repo, opts) => {\n    if (opts.gitShallow === false || opts.gitShallow) {\n      return opts.gitShallow;\n    }\n    return shallowHosts.has(parse3(repo).host);\n  };\n  var defaultTarget = (repo, cwd = process.cwd()) => path.resolve(cwd, path.basename(repo.replace(/[/\\\\]?\\.git$/, \"\")));\n  var clone = (repo, revs, ref, revDoc, target, opts) => {\n    if (!revDoc) {\n      return unresolved(repo, ref, target, opts);\n    }\n    if (revDoc.sha === revs.refs.HEAD.sha) {\n      return plain(repo, revDoc, target, opts);\n    }\n    if (revDoc.type === \"tag\" || revDoc.type === \"branch\") {\n      return branch(repo, revDoc, target, opts);\n    }\n    return other(repo, revDoc, target, opts);\n  };\n  var resolveRef = (revs, ref, opts) => {\n    const { spec = {} } = opts;\n    ref = spec.gitCommittish || ref;\n    if (!revs) {\n      return null;\n    }\n    if (spec.gitRange) {\n      return pickManifest(revs, spec.gitRange, opts);\n    }\n    if (!ref) {\n      return revs.refs.HEAD;\n    }\n    if (revs.refs[ref]) {\n      return revs.refs[ref];\n    }\n    if (revs.shas[ref]) {\n      return revs.refs[revs.shas[ref][0]];\n    }\n    return null;\n  };\n  var other = (repo, revDoc, target, opts) => {\n    const shallow = maybeShallow(repo, opts);\n    const fetchOrigin = [\"fetch\", \"origin\", revDoc.rawRef].concat(shallow ? [\"--depth=1\"] : []);\n    const git = (args) => spawn(args, { ...opts, cwd: target });\n    return fs.mkdir(target, { recursive: true }).then(() => git([\"init\"])).then(() => isWindows(opts) ? git([\"config\", \"--local\", \"--add\", \"core.longpaths\", \"true\"]) : null).then(() => git([\"remote\", \"add\", \"origin\", repo])).then(() => git(fetchOrigin)).then(() => git([\"checkout\", revDoc.sha])).then(() => updateSubmodules(target, opts)).then(() => revDoc.sha);\n  };\n  var branch = (repo, revDoc, target, opts) => {\n    const args = [\n      \"clone\",\n      \"-b\",\n      revDoc.ref,\n      repo,\n      target,\n      \"--recurse-submodules\"\n    ];\n    if (maybeShallow(repo, opts)) {\n      args.push(\"--depth=1\");\n    }\n    if (isWindows(opts)) {\n      args.push(\"--config\", \"core.longpaths=true\");\n    }\n    return spawn(args, opts).then(() => revDoc.sha);\n  };\n  var plain = (repo, revDoc, target, opts) => {\n    const args = [\n      \"clone\",\n      repo,\n      target,\n      \"--recurse-submodules\"\n    ];\n    if (maybeShallow(repo, opts)) {\n      args.push(\"--depth=1\");\n    }\n    if (isWindows(opts)) {\n      args.push(\"--config\", \"core.longpaths=true\");\n    }\n    return spawn(args, opts).then(() => revDoc.sha);\n  };\n  var updateSubmodules = async (target, opts) => {\n    const hasSubmodules = await fs.stat(`${target}/.gitmodules`).then(() => true).catch(() => false);\n    if (!hasSubmodules) {\n      return null;\n    }\n    return spawn([\n      \"submodule\",\n      \"update\",\n      \"-q\",\n      \"--init\",\n      \"--recursive\"\n    ], { ...opts, cwd: target });\n  };\n  var unresolved = (repo, ref, target, opts) => {\n    const lp = isWindows(opts) ? [\"--config\", \"core.longpaths=true\"] : [];\n    const cloneArgs = [\"clone\", \"--mirror\", \"-q\", repo, target + \"/.git\"];\n    const git = (args) => spawn(args, { ...opts, cwd: target });\n    return fs.mkdir(target, { recursive: true }).then(() => git(cloneArgs.concat(lp))).then(() => git([\"init\"])).then(() => git([\"checkout\", ref])).then(() => updateSubmodules(target, opts)).then(() => git([\"rev-parse\", \"--revs-only\", \"HEAD\"])).then(({ stdout }) => stdout.trim());\n  };\n});\n\n// node_modules/@npmcli/git/lib/is.js\nvar require_is = __commonJS((exports, module) => {\n  var { promisify } = __require(\"util\");\n  var fs = __require(\"fs\");\n  var stat = promisify(fs.stat);\n  module.exports = ({ cwd = process.cwd() } = {}) => stat(cwd + \"/.git\").then(() => true, () => false);\n});\n\n// node_modules/@npmcli/git/lib/find.js\nvar require_find = __commonJS((exports, module) => {\n  var is = require_is();\n  var { dirname } = __require(\"path\");\n  module.exports = async ({ cwd = process.cwd(), root } = {}) => {\n    while (true) {\n      if (await is({ cwd })) {\n        return cwd;\n      }\n      const next = dirname(cwd);\n      if (cwd === root || cwd === next) {\n        return null;\n      }\n      cwd = next;\n    }\n  };\n});\n\n// node_modules/@npmcli/git/lib/is-clean.js\nvar require_is_clean = __commonJS((exports, module) => {\n  var spawn = require_spawn();\n  module.exports = (opts = {}) => spawn([\"status\", \"--porcelain=v1\", \"-uno\"], opts).then((res) => !res.stdout.trim().split(/\\r?\\n+/).map((l) => l.trim()).filter((l) => l).length);\n});\n\n// node_modules/@npmcli/git/lib/index.js\nvar require_lib13 = __commonJS((exports, module) => {\n  module.exports = {\n    clone: require_clone(),\n    revs: require_revs(),\n    spawn: require_spawn(),\n    is: require_is(),\n    find: require_find(),\n    isClean: require_is_clean(),\n    errors: require_errors()\n  };\n});\n\n// node_modules/@npmcli/package-json/lib/normalize.js\nvar require_normalize = __commonJS((exports, module) => {\n  var fs = __require(\"fs/promises\");\n  var { glob } = require_src();\n  var normalizePackageBin = require_lib4();\n  var legacyFixer = require_fixer();\n  var legacyMakeWarning = require_make_warning();\n  var path = __require(\"path\");\n  var log = require_lib6();\n  var git = require_lib13();\n  var normalize = async (pkg, { strict, steps, root, changes, allowLegacyCase }) => {\n    if (!pkg.content) {\n      throw new Error(\"Can not normalize without content\");\n    }\n    const data = pkg.content;\n    const scripts = data.scripts || {};\n    const pkgId = `${data.name ?? \"\"}@${data.version ?? \"\"}`;\n    legacyFixer.warn = function() {\n      changes?.push(legacyMakeWarning.apply(null, arguments));\n    };\n    if (steps.includes(\"fixNameField\") || steps.includes(\"normalizeData\")) {\n      legacyFixer.fixNameField(data, { strict, allowLegacyCase });\n    }\n    if (steps.includes(\"fixVersionField\") || steps.includes(\"normalizeData\")) {\n      legacyFixer.fixVersionField(data, strict);\n    }\n    if (steps.includes(\"_attributes\")) {\n      for (const key in data) {\n        if (key.startsWith(\"_\")) {\n          changes?.push(`\"${key}\" was removed`);\n          delete pkg.content[key];\n        }\n      }\n    }\n    if (steps.includes(\"_id\")) {\n      if (data.name && data.version) {\n        changes?.push(`\"_id\" was set to ${pkgId}`);\n        data._id = pkgId;\n      }\n    }\n    if (steps.includes(\"bundledDependencies\")) {\n      if (data.bundleDependencies === undefined && data.bundledDependencies !== undefined) {\n        data.bundleDependencies = data.bundledDependencies;\n      }\n      changes?.push(`Deleted incorrect \"bundledDependencies\"`);\n      delete data.bundledDependencies;\n    }\n    if (steps.includes(\"bundleDependencies\")) {\n      const bd = data.bundleDependencies;\n      if (bd === false && !steps.includes(\"bundleDependenciesDeleteFalse\")) {\n        changes?.push(`\"bundleDependencies\" was changed from \"false\" to \"[]\"`);\n        data.bundleDependencies = [];\n      } else if (bd === true) {\n        changes?.push(`\"bundleDependencies\" was auto-populated from \"dependencies\"`);\n        data.bundleDependencies = Object.keys(data.dependencies || {});\n      } else if (bd && typeof bd === \"object\") {\n        if (!Array.isArray(bd)) {\n          changes?.push(`\"bundleDependencies\" was changed from an object to an array`);\n          data.bundleDependencies = Object.keys(bd);\n        }\n      } else {\n        changes?.push(`\"bundleDependencies\" was removed`);\n        delete data.bundleDependencies;\n      }\n    }\n    if (steps.includes(\"optionalDedupe\")) {\n      if (data.dependencies && data.optionalDependencies && typeof data.optionalDependencies === \"object\") {\n        for (const name in data.optionalDependencies) {\n          changes?.push(`optionalDependencies entry \"${name}\" was removed`);\n          delete data.dependencies[name];\n        }\n        if (!Object.keys(data.dependencies).length) {\n          changes?.push(`empty \"optionalDependencies\" was removed`);\n          delete data.dependencies;\n        }\n      }\n    }\n    if (steps.includes(\"gypfile\")) {\n      if (!scripts.install && !scripts.preinstall && data.gypfile !== false) {\n        const files = await glob(\"*.gyp\", { cwd: pkg.path });\n        if (files.length) {\n          scripts.install = \"node-gyp rebuild\";\n          data.scripts = scripts;\n          data.gypfile = true;\n          changes?.push(`\"scripts.install\" was set to \"node-gyp rebuild\"`);\n          changes?.push(`\"gypfile\" was set to \"true\"`);\n        }\n      }\n    }\n    if (steps.includes(\"serverjs\") && !scripts.start) {\n      try {\n        await fs.access(path.join(pkg.path, \"server.js\"));\n        scripts.start = \"node server.js\";\n        data.scripts = scripts;\n        changes?.push('\"scripts.start\" was set to \"node server.js\"');\n      } catch {\n      }\n    }\n    if (steps.includes(\"scripts\") || steps.includes(\"scriptpath\")) {\n      const spre = /^(\\.[/\\\\])?node_modules[/\\\\].bin[\\\\/]/;\n      if (typeof data.scripts === \"object\") {\n        for (const name in data.scripts) {\n          if (typeof data.scripts[name] !== \"string\") {\n            delete data.scripts[name];\n            changes?.push(`invalid scripts entry \"${name}\" was removed`);\n          } else if (steps.includes(\"scriptpath\")) {\n            data.scripts[name] = data.scripts[name].replace(spre, \"\");\n            changes?.push(`scripts entry \"${name}\" was fixed to remove node_modules/.bin reference`);\n          }\n        }\n      } else {\n        changes?.push(`removed invalid \"scripts\"`);\n        delete data.scripts;\n      }\n    }\n    if (steps.includes(\"funding\")) {\n      if (data.funding && typeof data.funding === \"string\") {\n        data.funding = { url: data.funding };\n        changes?.push(`\"funding\" was changed to an object with a url attribute`);\n      }\n    }\n    if (steps.includes(\"authors\") && !data.contributors) {\n      try {\n        const authorData = await fs.readFile(path.join(pkg.path, \"AUTHORS\"), \"utf8\");\n        const authors = authorData.split(/\\r?\\n/g).map((line) => line.replace(/^\\s*#.*$/, \"\").trim()).filter((line) => line);\n        data.contributors = authors;\n        changes.push('\"contributors\" was auto-populated with the contents of the \"AUTHORS\" file');\n      } catch {\n      }\n    }\n    if (steps.includes(\"readme\") && !data.readme) {\n      const mdre = /\\.m?a?r?k?d?o?w?n?$/i;\n      const files = await glob(\"{README,README.*}\", { cwd: pkg.path, nocase: true, mark: true });\n      let readmeFile;\n      for (const file of files) {\n        if (!file.endsWith(path.sep)) {\n          if (file.match(mdre)) {\n            readmeFile = file;\n            break;\n          }\n          if (file.endsWith(\"README\")) {\n            readmeFile = file;\n          }\n        }\n      }\n      if (readmeFile) {\n        const readmeData = await fs.readFile(path.join(pkg.path, readmeFile), \"utf8\");\n        data.readme = readmeData;\n        data.readmeFilename = readmeFile;\n        changes?.push(`\"readme\" was set to the contents of ${readmeFile}`);\n        changes?.push(`\"readmeFilename\" was set to ${readmeFile}`);\n      }\n      if (!data.readme) {\n        data.readme = \"ERROR: No README data found!\";\n      }\n    }\n    if (steps.includes(\"mans\") && !data.man && data.directories?.man) {\n      const manDir = data.directories.man;\n      const cwd = path.resolve(pkg.path, manDir);\n      const files = await glob(\"**/*.[0-9]\", { cwd });\n      data.man = files.map((man) => path.relative(pkg.path, path.join(cwd, man)).split(path.sep).join(\"/\"));\n    }\n    if (steps.includes(\"bin\") || steps.includes(\"binDir\") || steps.includes(\"binRefs\")) {\n      normalizePackageBin(data);\n    }\n    if (steps.includes(\"binDir\") && data.directories?.bin && !data.bin) {\n      const binsDir = path.resolve(pkg.path, path.join(\".\", path.join(\"/\", data.directories.bin)));\n      const bins = await glob(\"**\", { cwd: binsDir });\n      data.bin = bins.reduce((acc, binFile) => {\n        if (binFile && !binFile.startsWith(\".\")) {\n          const binName = path.basename(binFile);\n          acc[binName] = path.join(data.directories.bin, binFile);\n        }\n        return acc;\n      }, {});\n      normalizePackageBin(data);\n    }\n    if (steps.includes(\"gitHead\") && !data.gitHead) {\n      const gitRoot = await git.find({ cwd: pkg.path, root });\n      let head;\n      if (gitRoot) {\n        try {\n          head = await fs.readFile(path.resolve(gitRoot, \".git/HEAD\"), \"utf8\");\n        } catch (err) {\n        }\n      }\n      let headData;\n      if (head) {\n        if (head.startsWith(\"ref: \")) {\n          const headRef = head.replace(/^ref: /, \"\").trim();\n          const headFile = path.resolve(gitRoot, \".git\", headRef);\n          try {\n            headData = await fs.readFile(headFile, \"utf8\");\n            headData = headData.replace(/^ref: /, \"\").trim();\n          } catch (err) {\n          }\n          if (!headData) {\n            const packFile = path.resolve(gitRoot, \".git/packed-refs\");\n            try {\n              let refs = await fs.readFile(packFile, \"utf8\");\n              if (refs) {\n                refs = refs.split(\"\\n\");\n                for (let i = 0;i < refs.length; i++) {\n                  const match = refs[i].match(/^([0-9a-f]{40}) (.+)$/);\n                  if (match && match[2].trim() === headRef) {\n                    headData = match[1];\n                    break;\n                  }\n                }\n              }\n            } catch {\n            }\n          }\n        } else {\n          headData = head.trim();\n        }\n      }\n      if (headData) {\n        data.gitHead = headData;\n      }\n    }\n    if (steps.includes(\"fillTypes\")) {\n      const index = data.main || \"index.js\";\n      if (typeof index !== \"string\") {\n        throw new TypeError('The \"main\" attribute must be of type string.');\n      }\n      const extless = path.join(path.dirname(index), path.basename(index, path.extname(index)));\n      const dts = `./${extless}.d.ts`;\n      const hasDTSFields = (\"types\" in data) || (\"typings\" in data);\n      if (!hasDTSFields) {\n        try {\n          await fs.access(path.join(pkg.path, dts));\n          data.types = dts.split(path.sep).join(\"/\");\n        } catch {\n        }\n      }\n    }\n    if (steps.includes(\"fixRepositoryField\") || steps.includes(\"normalizeData\")) {\n      legacyFixer.fixRepositoryField(data);\n    }\n    if (steps.includes(\"fixBinField\") || steps.includes(\"normalizeData\")) {\n      legacyFixer.fixBinField(data);\n    }\n    if (steps.includes(\"fixDependencies\") || steps.includes(\"normalizeData\")) {\n      legacyFixer.fixDependencies(data, strict);\n    }\n    if (steps.includes(\"fixScriptsField\") || steps.includes(\"normalizeData\")) {\n      legacyFixer.fixScriptsField(data);\n    }\n    if (steps.includes(\"normalizeData\")) {\n      const legacySteps = [\n        \"fixDescriptionField\",\n        \"fixModulesField\",\n        \"fixFilesField\",\n        \"fixManField\",\n        \"fixBugsField\",\n        \"fixKeywordsField\",\n        \"fixBundleDependenciesField\",\n        \"fixHomepageField\",\n        \"fixReadmeField\",\n        \"fixLicenseField\",\n        \"fixPeople\",\n        \"fixTypos\"\n      ];\n      for (const legacyStep of legacySteps) {\n        legacyFixer[legacyStep](data);\n      }\n    }\n    if (steps.includes(\"binRefs\") && data.bin instanceof Object) {\n      for (const key in data.bin) {\n        try {\n          await fs.access(path.resolve(pkg.path, data.bin[key]));\n        } catch {\n          log.warn(\"package-json\", pkgId, `No bin file found at ${data.bin[key]}`);\n        }\n      }\n    }\n  };\n  module.exports = normalize;\n});\n\n// node_modules/json-parse-even-better-errors/lib/index.js\nvar require_lib14 = __commonJS((exports, module) => {\n  var hexify = (char) => {\n    const h = char.charCodeAt(0).toString(16).toUpperCase();\n    return \"0x\" + (h.length % 2 ? \"0\" : \"\") + h;\n  };\n  var parseError = (e, txt, context) => {\n    if (!txt) {\n      return {\n        message: e.message + \" while parsing empty string\",\n        position: 0\n      };\n    }\n    const badToken = e.message.match(/^Unexpected token (.) .*position\\s+(\\d+)/i);\n    const errIdx = badToken ? +badToken[2] : e.message.match(/^Unexpected end of JSON.*/i) ? txt.length - 1 : null;\n    const msg = badToken ? e.message.replace(/^Unexpected token ./, `Unexpected token ${JSON.stringify(badToken[1])} (${hexify(badToken[1])})`) : e.message;\n    if (errIdx !== null && errIdx !== undefined) {\n      const start = errIdx <= context ? 0 : errIdx - context;\n      const end = errIdx + context >= txt.length ? txt.length : errIdx + context;\n      const slice = (start === 0 ? \"\" : \"...\") + txt.slice(start, end) + (end === txt.length ? \"\" : \"...\");\n      const near = txt === slice ? \"\" : \"near \";\n      return {\n        message: msg + ` while parsing ${near}${JSON.stringify(slice)}`,\n        position: errIdx\n      };\n    } else {\n      return {\n        message: msg + ` while parsing '${txt.slice(0, context * 2)}'`,\n        position: 0\n      };\n    }\n  };\n\n  class JSONParseError extends SyntaxError {\n    constructor(er, txt, context, caller) {\n      context = context || 20;\n      const metadata = parseError(er, txt, context);\n      super(metadata.message);\n      Object.assign(this, metadata);\n      this.code = \"EJSONPARSE\";\n      this.systemError = er;\n      Error.captureStackTrace(this, caller || this.constructor);\n    }\n    get name() {\n      return this.constructor.name;\n    }\n    set name(n) {\n    }\n    get [Symbol.toStringTag]() {\n      return this.constructor.name;\n    }\n  }\n  var kIndent = Symbol.for(\"indent\");\n  var kNewline = Symbol.for(\"newline\");\n  var formatRE = /^\\s*[{[]((?:\\r?\\n)+)([\\s\\t]*)/;\n  var emptyRE = /^(?:\\{\\}|\\[\\])((?:\\r?\\n)+)?$/;\n  var parseJson = (txt, reviver, context) => {\n    const parseText = stripBOM(txt);\n    context = context || 20;\n    try {\n      const [, newline = \"\\n\", indent = \"  \"] = parseText.match(emptyRE) || parseText.match(formatRE) || [null, \"\", \"\"];\n      const result = JSON.parse(parseText, reviver);\n      if (result && typeof result === \"object\") {\n        result[kNewline] = newline;\n        result[kIndent] = indent;\n      }\n      return result;\n    } catch (e) {\n      if (typeof txt !== \"string\" && !Buffer.isBuffer(txt)) {\n        const isEmptyArray = Array.isArray(txt) && txt.length === 0;\n        throw Object.assign(new TypeError(`Cannot parse ${isEmptyArray ? \"an empty array\" : String(txt)}`), {\n          code: \"EJSONPARSE\",\n          systemError: e\n        });\n      }\n      throw new JSONParseError(e, parseText, context, parseJson);\n    }\n  };\n  var stripBOM = (txt) => String(txt).replace(/^\\uFEFF/, \"\");\n  module.exports = parseJson;\n  parseJson.JSONParseError = JSONParseError;\n  parseJson.noExceptions = (txt, reviver) => {\n    try {\n      return JSON.parse(stripBOM(txt), reviver);\n    } catch (e) {\n    }\n  };\n});\n\n// node_modules/@npmcli/package-json/lib/index.js\nvar require_lib15 = __commonJS((exports, module) => {\n  var { readFile, writeFile } = __require(\"fs/promises\");\n  var { resolve } = __require(\"path\");\n  var updateDeps = require_update_dependencies();\n  var updateScripts = require_update_scripts();\n  var updateWorkspaces = require_update_workspaces();\n  var normalize = require_normalize();\n  var parseJSON = require_lib14();\n  var knownSteps = new Set([\n    updateDeps,\n    updateScripts,\n    updateWorkspaces\n  ]);\n  var knownKeys = new Set([\n    ...updateDeps.knownKeys,\n    \"scripts\",\n    \"workspaces\"\n  ]);\n\n  class PackageJson {\n    static normalizeSteps = Object.freeze([\n      \"_id\",\n      \"_attributes\",\n      \"bundledDependencies\",\n      \"bundleDependencies\",\n      \"optionalDedupe\",\n      \"scripts\",\n      \"funding\",\n      \"bin\"\n    ]);\n    static fixSteps = Object.freeze([\n      \"binRefs\",\n      \"bundleDependencies\",\n      \"bundleDependenciesFalse\",\n      \"fixNameField\",\n      \"fixVersionField\",\n      \"fixRepositoryField\",\n      \"fixBinField\",\n      \"fixDependencies\",\n      \"fixScriptsField\",\n      \"devDependencies\",\n      \"scriptpath\"\n    ]);\n    static prepareSteps = Object.freeze([\n      \"_id\",\n      \"_attributes\",\n      \"bundledDependencies\",\n      \"bundleDependencies\",\n      \"bundleDependenciesDeleteFalse\",\n      \"gypfile\",\n      \"serverjs\",\n      \"scriptpath\",\n      \"authors\",\n      \"readme\",\n      \"mans\",\n      \"binDir\",\n      \"gitHead\",\n      \"fillTypes\",\n      \"normalizeData\",\n      \"binRefs\"\n    ]);\n    static async create(path, opts = {}) {\n      const p = new PackageJson;\n      await p.create(path);\n      if (opts.data) {\n        return p.update(opts.data);\n      }\n      return p;\n    }\n    static async load(path, opts = {}) {\n      const p = new PackageJson;\n      if (!opts.create) {\n        return p.load(path);\n      }\n      try {\n        return await p.load(path);\n      } catch (err) {\n        if (!err.message.startsWith(\"Could not read package.json\")) {\n          throw err;\n        }\n        return await p.create(path);\n      }\n    }\n    static async fix(path, opts) {\n      const p = new PackageJson;\n      await p.load(path, true);\n      return p.fix(opts);\n    }\n    static async prepare(path, opts) {\n      const p = new PackageJson;\n      await p.load(path, true);\n      return p.prepare(opts);\n    }\n    static async normalize(path, opts) {\n      const p = new PackageJson;\n      await p.load(path);\n      return p.normalize(opts);\n    }\n    #path;\n    #manifest;\n    #readFileContent = \"\";\n    #canSave = true;\n    async load(path, parseIndex) {\n      this.#path = path;\n      let parseErr;\n      try {\n        this.#readFileContent = await readFile(this.filename, \"utf8\");\n      } catch (err) {\n        err.message = `Could not read package.json: ${err}`;\n        if (!parseIndex) {\n          throw err;\n        }\n        parseErr = err;\n      }\n      if (parseErr) {\n        const indexFile = resolve(this.path, \"index.js\");\n        let indexFileContent;\n        try {\n          indexFileContent = await readFile(indexFile, \"utf8\");\n        } catch (err) {\n          throw parseErr;\n        }\n        try {\n          this.fromComment(indexFileContent);\n        } catch (err) {\n          throw parseErr;\n        }\n        this.#canSave = false;\n        return this;\n      }\n      return this.fromJSON(this.#readFileContent);\n    }\n    fromJSON(data) {\n      try {\n        this.#manifest = parseJSON(data);\n      } catch (err) {\n        err.message = `Invalid package.json: ${err}`;\n        throw err;\n      }\n      return this;\n    }\n    fromComment(data) {\n      data = data.split(/^\\/\\*\\*package(?:\\s|$)/m);\n      if (data.length < 2) {\n        throw new Error(\"File has no package in comments\");\n      }\n      data = data[1];\n      data = data.split(/\\*\\*\\/$/m);\n      if (data.length < 2) {\n        throw new Error(\"File has no package in comments\");\n      }\n      data = data[0];\n      data = data.replace(/^\\s*\\*/mg, \"\");\n      this.#manifest = parseJSON(data);\n      return this;\n    }\n    get content() {\n      return this.#manifest;\n    }\n    get path() {\n      return this.#path;\n    }\n    get filename() {\n      if (this.path) {\n        return resolve(this.path, \"package.json\");\n      }\n      return;\n    }\n    create(path) {\n      this.#path = path;\n      this.#manifest = {};\n      return this;\n    }\n    update(content) {\n      if (!this.content) {\n        throw new Error(\"Can not update without content.  Please `load` or `create`\");\n      }\n      for (const step of knownSteps) {\n        this.#manifest = step({ content, originalContent: this.content });\n      }\n      for (const [key, value] of Object.entries(content)) {\n        if (!knownKeys.has(key)) {\n          this.content[key] = value;\n        }\n      }\n      return this;\n    }\n    async save() {\n      if (!this.#canSave) {\n        throw new Error(\"No package.json to save to\");\n      }\n      const {\n        [Symbol.for(\"indent\")]: indent,\n        [Symbol.for(\"newline\")]: newline\n      } = this.content;\n      const format = indent === undefined ? \"  \" : indent;\n      const eol = newline === undefined ? \"\\n\" : newline;\n      const fileContent = `${JSON.stringify(this.content, null, format)}\\n`.replace(/\\n/g, eol);\n      if (fileContent.trim() !== this.#readFileContent.trim()) {\n        return await writeFile(this.filename, fileContent);\n      }\n    }\n    async normalize(opts = {}) {\n      if (!opts.steps) {\n        opts.steps = this.constructor.normalizeSteps;\n      }\n      await normalize(this, opts);\n      return this;\n    }\n    async prepare(opts = {}) {\n      if (!opts.steps) {\n        opts.steps = this.constructor.prepareSteps;\n      }\n      await normalize(this, opts);\n      return this;\n    }\n    async fix(opts = {}) {\n      opts.steps = this.constructor.fixSteps;\n      await normalize(this, opts);\n      return this;\n    }\n  }\n  module.exports = PackageJson;\n});\n\n// src/index.ts\nvar core = __toESM(require_core(), 1);\nvar plugin_create_or_update_text_file = __toESM(require_dist_node10(), 1);\nvar github = __toESM(require_github(), 1);\nvar package_json = __toESM(require_lib15(), 1);\nimport path from \"node:path\";\nimport cp from \"node:child_process\";\nasync function run() {\n  let octokit = github.getOctokit(process.env.GITHUB_TOKEN);\n  let { createOrUpdateTextFile } = plugin_create_or_update_text_file.createOrUpdateTextFile(octokit);\n  let [owner, repo] = process.env.GITHUB_REPOSITORY.split(\"/\");\n  let ignored = core.getInput(\"ignored-dependencies\", { trimWhitespace: true });\n  let deps = ignored.split(\",\").map((d) => d.trim());\n  let packageJsonInput = core.getInput(\"package-json-path\", {\n    trimWhitespace: true\n  });\n  if (!packageJsonInput) {\n    packageJsonInput = \"./\";\n  }\n  if (packageJsonInput.endsWith(\"package.json\")) {\n    packageJsonInput = packageJsonInput.slice(0, \"package.json\".length + 1);\n  }\n  core.debug(`Ignoring dependencies: ${deps.join(\", \")}`);\n  let json = await package_json.default.load(path.resolve(packageJsonInput));\n  let dependencies = getAllDependencies(json);\n  let depsToCheck = Object.keys(dependencies).filter((d) => !deps.includes(d));\n  core.debug(`Dependencies to check: ${depsToCheck.join(\", \")}`);\n  await Promise.all(depsToCheck.map(async (dep) => {\n    core.debug(`Checking ${dep}`);\n    cp.execSync(`bun add ${dep}`, { stdio: \"inherit\" });\n    let updated = await package_json.default.load(path.resolve(packageJsonInput));\n    let updatedDependencies = getAllDependencies(updated);\n    if (dependencies[dep] === updatedDependencies[dep]) {\n      core.debug(`${dep} is up to date`);\n      return;\n    }\n    let branch = `bun-dependabot/${dep}`;\n    let author = {\n      email: \"github-actions[bot]@users.noreply.github.com\",\n      name: \"github-actions[bot]\"\n    };\n    await Promise.all([\n      createOrUpdateTextFile({\n        owner,\n        repo,\n        path: \"package.json\",\n        content: JSON.stringify(json, null, 2),\n        message: `Update ${dep} to latest version`,\n        author,\n        committer: author,\n        branch\n      }),\n      createOrUpdateTextFile({\n        owner,\n        repo,\n        path: \"bun.lockb\",\n        content: JSON.stringify(json, null, 2),\n        message: `Update ${dep} to latest version`,\n        author,\n        committer: author,\n        branch\n      })\n    ]);\n    octokit.rest.pulls.create({\n      owner,\n      repo,\n      base: \"main\",\n      head: branch,\n      title: `Update ${dep} to latest version`,\n      body: `This PR updates ${dep} to the latest version.`\n    });\n  }));\n}\nvar getAllDependencies = function(packageJson) {\n  let dependencies = packageJson.content.dependencies;\n  let devDependencies = packageJson.content.devDependencies;\n  let peerDependencies = packageJson.content.peerDependencies;\n  let optionalDependencies = packageJson.content.optionalDependencies;\n  return {\n    ...dependencies,\n    ...devDependencies,\n    ...peerDependencies,\n    ...optionalDependencies\n  };\n};\nrun().catch((e) => {\n  console.error(e);\n  process.exit(1);\n});\n"],"names":[],"sourceRoot":""}